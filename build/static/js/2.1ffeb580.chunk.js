/*! For license information please see 2.1ffeb580.chunk.js.LICENSE.txt */
(this.webpackJsonpposenet=this.webpackJsonpposenet||[]).push([[2],[function(t,e,n){"use strict";n.r(e),n.d(e,"AdadeltaOptimizer",(function(){return ce})),n.d(e,"AdagradOptimizer",(function(){return le})),n.d(e,"AdamOptimizer",(function(){return pe})),n.d(e,"AdamaxOptimizer",(function(){return be})),n.d(e,"MomentumOptimizer",(function(){return ye})),n.d(e,"Optimizer",(function(){return ie})),n.d(e,"RMSPropOptimizer",(function(){return ve})),n.d(e,"SGDOptimizer",(function(){return ge})),n.d(e,"Tensor",(function(){return Y.a})),n.d(e,"TensorBuffer",(function(){return Y.b})),n.d(e,"Variable",(function(){return Y.c})),n.d(e,"Rank",(function(){return xe.a})),n.d(e,"sumOutType",(function(){return xe.b})),n.d(e,"upcastType",(function(){return xe.c})),n.d(e,"abs",(function(){return we.b})),n.d(e,"acos",(function(){return we.c})),n.d(e,"acosh",(function(){return we.d})),n.d(e,"add",(function(){return we.e})),n.d(e,"addN",(function(){return we.f})),n.d(e,"all",(function(){return we.h})),n.d(e,"any",(function(){return we.i})),n.d(e,"argMax",(function(){return we.j})),n.d(e,"argMin",(function(){return we.k})),n.d(e,"asin",(function(){return we.l})),n.d(e,"asinh",(function(){return we.m})),n.d(e,"atan",(function(){return we.n})),n.d(e,"atan2",(function(){return we.o})),n.d(e,"atanh",(function(){return we.p})),n.d(e,"avgPool",(function(){return we.q})),n.d(e,"avgPool3d",(function(){return we.r})),n.d(e,"basicLSTMCell",(function(){return we.s})),n.d(e,"batchToSpaceND",(function(){return we.x})),n.d(e,"batchNorm",(function(){return we.t})),n.d(e,"batchNorm2d",(function(){return we.u})),n.d(e,"batchNorm3d",(function(){return we.v})),n.d(e,"batchNorm4d",(function(){return we.w})),n.d(e,"bincount",(function(){return we.y})),n.d(e,"broadcastTo",(function(){return we.A})),n.d(e,"buffer",(function(){return we.B})),n.d(e,"cast",(function(){return we.C})),n.d(e,"ceil",(function(){return we.D})),n.d(e,"clipByValue",(function(){return we.E})),n.d(e,"clone",(function(){return we.F})),n.d(e,"complex",(function(){return we.G})),n.d(e,"concat",(function(){return we.H})),n.d(e,"concat1d",(function(){return we.I})),n.d(e,"concat2d",(function(){return we.J})),n.d(e,"concat3d",(function(){return we.K})),n.d(e,"concat4d",(function(){return we.L})),n.d(e,"conv1d",(function(){return we.M})),n.d(e,"conv2d",(function(){return we.N})),n.d(e,"conv2dTranspose",(function(){return we.O})),n.d(e,"conv3d",(function(){return we.P})),n.d(e,"conv3dTranspose",(function(){return we.Q})),n.d(e,"cos",(function(){return we.R})),n.d(e,"cosh",(function(){return we.S})),n.d(e,"cumsum",(function(){return we.U})),n.d(e,"denseBincount",(function(){return we.V})),n.d(e,"depthToSpace",(function(){return we.W})),n.d(e,"depthwiseConv2d",(function(){return we.X})),n.d(e,"diag",(function(){return we.Y})),n.d(e,"dilation2d",(function(){return we.Z})),n.d(e,"div",(function(){return we.ab})),n.d(e,"divNoNan",(function(){return we.bb})),n.d(e,"dot",(function(){return we.db})),n.d(e,"elu",(function(){return we.fb})),n.d(e,"equal",(function(){return we.hb})),n.d(e,"erf",(function(){return we.jb})),n.d(e,"exp",(function(){return we.kb})),n.d(e,"expandDims",(function(){return we.lb})),n.d(e,"expm1",(function(){return we.mb})),n.d(e,"eye",(function(){return we.nb})),n.d(e,"fill",(function(){return we.pb})),n.d(e,"floor",(function(){return we.qb})),n.d(e,"floorDiv",(function(){return we.rb})),n.d(e,"gather",(function(){return we.tb})),n.d(e,"greater",(function(){return we.vb})),n.d(e,"greaterEqual",(function(){return we.wb})),n.d(e,"imag",(function(){return we.Ab})),n.d(e,"isFinite",(function(){return we.Eb})),n.d(e,"isInf",(function(){return we.Fb})),n.d(e,"isNaN",(function(){return we.Gb})),n.d(e,"leakyRelu",(function(){return we.Hb})),n.d(e,"less",(function(){return we.Ib})),n.d(e,"lessEqual",(function(){return we.Jb})),n.d(e,"linspace",(function(){return we.Nb})),n.d(e,"localResponseNormalization",(function(){return we.Ob})),n.d(e,"log",(function(){return we.Pb})),n.d(e,"log1p",(function(){return we.Qb})),n.d(e,"logSigmoid",(function(){return we.Rb})),n.d(e,"logSoftmax",(function(){return we.Sb})),n.d(e,"logSumExp",(function(){return we.Tb})),n.d(e,"logicalAnd",(function(){return we.Ub})),n.d(e,"logicalNot",(function(){return we.Vb})),n.d(e,"logicalOr",(function(){return we.Wb})),n.d(e,"logicalXor",(function(){return we.Xb})),n.d(e,"matMul",(function(){return we.Zb})),n.d(e,"max",(function(){return we.ac})),n.d(e,"maxPool",(function(){return we.bc})),n.d(e,"maxPool3d",(function(){return we.cc})),n.d(e,"maxPoolWithArgmax",(function(){return we.dc})),n.d(e,"maximum",(function(){return we.ec})),n.d(e,"mean",(function(){return we.gc})),n.d(e,"min",(function(){return we.hc})),n.d(e,"minimum",(function(){return we.ic})),n.d(e,"mirrorPad",(function(){return we.kc})),n.d(e,"mod",(function(){return we.lc})),n.d(e,"moments",(function(){return we.nc})),n.d(e,"mul",(function(){return we.pc})),n.d(e,"multiRNNCell",(function(){return we.rc})),n.d(e,"multinomial",(function(){return we.sc})),n.d(e,"neg",(function(){return we.tc})),n.d(e,"notEqual",(function(){return we.vc})),n.d(e,"oneHot",(function(){return we.xc})),n.d(e,"ones",(function(){return we.yc})),n.d(e,"onesLike",(function(){return we.zc})),n.d(e,"outerProduct",(function(){return we.Bc})),n.d(e,"pad",(function(){return we.Cc})),n.d(e,"pad1d",(function(){return we.Dc})),n.d(e,"pad2d",(function(){return we.Ec})),n.d(e,"pad3d",(function(){return we.Fc})),n.d(e,"pad4d",(function(){return we.Gc})),n.d(e,"pool",(function(){return we.Hc})),n.d(e,"pow",(function(){return we.Ic})),n.d(e,"prelu",(function(){return we.Kc})),n.d(e,"print",(function(){return we.Lc})),n.d(e,"prod",(function(){return we.Mc})),n.d(e,"rand",(function(){return we.Nc})),n.d(e,"randomGamma",(function(){return we.Oc})),n.d(e,"randomNormal",(function(){return we.Pc})),n.d(e,"randomUniform",(function(){return we.Qc})),n.d(e,"range",(function(){return we.Rc})),n.d(e,"real",(function(){return we.Sc})),n.d(e,"reciprocal",(function(){return we.Tc})),n.d(e,"relu",(function(){return we.Uc})),n.d(e,"relu6",(function(){return we.Vc})),n.d(e,"reshape",(function(){return we.Wc})),n.d(e,"reverse",(function(){return we.Xc})),n.d(e,"reverse1d",(function(){return we.Yc})),n.d(e,"reverse2d",(function(){return we.Zc})),n.d(e,"reverse3d",(function(){return we.ad})),n.d(e,"reverse4d",(function(){return we.bd})),n.d(e,"round",(function(){return we.dd})),n.d(e,"rsqrt",(function(){return we.ed})),n.d(e,"scalar",(function(){return we.fd})),n.d(e,"selu",(function(){return we.hd})),n.d(e,"separableConv2d",(function(){return we.id})),n.d(e,"setdiff1dAsync",(function(){return we.jd})),n.d(e,"sigmoid",(function(){return we.kd})),n.d(e,"sign",(function(){return we.ld})),n.d(e,"sin",(function(){return we.nd})),n.d(e,"sinh",(function(){return we.od})),n.d(e,"slice",(function(){return we.pd})),n.d(e,"slice1d",(function(){return we.qd})),n.d(e,"slice2d",(function(){return we.rd})),n.d(e,"slice3d",(function(){return we.sd})),n.d(e,"slice4d",(function(){return we.td})),n.d(e,"softmax",(function(){return we.ud})),n.d(e,"softplus",(function(){return we.vd})),n.d(e,"spaceToBatchND",(function(){return we.wd})),n.d(e,"fft",(function(){return we.ob})),n.d(e,"ifft",(function(){return we.zb})),n.d(e,"irfft",(function(){return we.Db})),n.d(e,"rfft",(function(){return we.cd})),n.d(e,"split",(function(){return we.zd})),n.d(e,"sqrt",(function(){return we.Ad})),n.d(e,"square",(function(){return we.Bd})),n.d(e,"squaredDifference",(function(){return we.Cd})),n.d(e,"squeeze",(function(){return we.Ed})),n.d(e,"stack",(function(){return we.Fd})),n.d(e,"step",(function(){return we.Gd})),n.d(e,"stridedSlice",(function(){return we.Hd})),n.d(e,"sub",(function(){return we.Id})),n.d(e,"sum",(function(){return we.Kd})),n.d(e,"tan",(function(){return we.Ld})),n.d(e,"tanh",(function(){return we.Md})),n.d(e,"tensor",(function(){return we.Nd})),n.d(e,"tensor1d",(function(){return we.Od})),n.d(e,"tensor2d",(function(){return we.Pd})),n.d(e,"tensor3d",(function(){return we.Qd})),n.d(e,"tensor4d",(function(){return we.Rd})),n.d(e,"tensor5d",(function(){return we.Sd})),n.d(e,"tensor6d",(function(){return we.Td})),n.d(e,"tile",(function(){return we.Ud})),n.d(e,"topk",(function(){return we.Vd})),n.d(e,"truncatedNormal",(function(){return we.Xd})),n.d(e,"unique",(function(){return we.Yd})),n.d(e,"unsortedSegmentSum",(function(){return we.Zd})),n.d(e,"unstack",(function(){return we.ae})),n.d(e,"variable",(function(){return we.be})),n.d(e,"where",(function(){return we.ce})),n.d(e,"whereAsync",(function(){return we.de})),n.d(e,"zeros",(function(){return we.ee})),n.d(e,"zerosLike",(function(){return we.fe})),n.d(e,"booleanMaskAsync",(function(){return we.z})),n.d(e,"equalStrict",(function(){return we.ib})),n.d(e,"greaterEqualStrict",(function(){return we.xb})),n.d(e,"greaterStrict",(function(){return we.yb})),n.d(e,"lessEqualStrict",(function(){return we.Kb})),n.d(e,"lessStrict",(function(){return we.Lb})),n.d(e,"notEqualStrict",(function(){return we.wc})),n.d(e,"addStrict",(function(){return we.g})),n.d(e,"divStrict",(function(){return we.cb})),n.d(e,"maximumStrict",(function(){return we.fc})),n.d(e,"minimumStrict",(function(){return we.jc})),n.d(e,"modStrict",(function(){return we.mc})),n.d(e,"mulStrict",(function(){return we.qc})),n.d(e,"powStrict",(function(){return we.Jc})),n.d(e,"squaredDifferenceStrict",(function(){return we.Dd})),n.d(e,"subStrict",(function(){return we.Jd})),n.d(e,"transpose",(function(){return we.Wd})),n.d(e,"norm",(function(){return we.uc})),n.d(e,"movingAverage",(function(){return we.oc})),n.d(e,"scatterND",(function(){return we.gd})),n.d(e,"sparseToDense",(function(){return we.xd})),n.d(e,"gatherND",(function(){return we.ub})),n.d(e,"dropout",(function(){return we.eb})),n.d(e,"enclosingPowerOfTwo",(function(){return we.gb})),n.d(e,"cosineWindow",(function(){return we.T})),n.d(e,"inTopKAsync",(function(){return we.Cb})),n.d(e,"op",(function(){return we.Ac})),n.d(e,"OP_SCOPE_SUFFIX",(function(){return we.a})),n.d(e,"image",(function(){return we.Bb})),n.d(e,"linalg",(function(){return we.Mb})),n.d(e,"losses",(function(){return we.Yb})),n.d(e,"spectral",(function(){return we.yd})),n.d(e,"fused",(function(){return we.sb})),n.d(e,"signal",(function(){return we.md})),n.d(e,"Reduction",(function(){return ke.a})),n.d(e,"train",(function(){return Ie})),n.d(e,"enableProdMode",(function(){return Jt.g})),n.d(e,"enableDebugMode",(function(){return Jt.f})),n.d(e,"disableDeprecationWarnings",(function(){return Jt.c})),n.d(e,"deprecationWarn",(function(){return Jt.b})),n.d(e,"disposeVariables",(function(){return Jt.e})),n.d(e,"engine",(function(){return Jt.h})),n.d(e,"memory",(function(){return Jt.m})),n.d(e,"profile",(function(){return Jt.n})),n.d(e,"tidy",(function(){return Jt.t})),n.d(e,"dispose",(function(){return Jt.d})),n.d(e,"keep",(function(){return Jt.l})),n.d(e,"time",(function(){return Jt.u})),n.d(e,"setBackend",(function(){return Jt.r})),n.d(e,"ready",(function(){return Jt.o})),n.d(e,"getBackend",(function(){return Jt.k})),n.d(e,"removeBackend",(function(){return Jt.q})),n.d(e,"findBackend",(function(){return Jt.i})),n.d(e,"findBackendFactory",(function(){return Jt.j})),n.d(e,"registerBackend",(function(){return Jt.p})),n.d(e,"backend",(function(){return Jt.a})),n.d(e,"setPlatform",(function(){return Jt.s})),n.d(e,"getKernel",(function(){return kt.c})),n.d(e,"getGradient",(function(){return kt.b})),n.d(e,"getKernelsForBackend",(function(){return kt.d})),n.d(e,"registerKernel",(function(){return kt.f})),n.d(e,"registerGradient",(function(){return kt.e})),n.d(e,"unregisterKernel",(function(){return kt.h})),n.d(e,"unregisterGradient",(function(){return kt.g})),n.d(e,"copyRegisteredKernels",(function(){return kt.a})),n.d(e,"customGrad",(function(){return oe.a})),n.d(e,"grad",(function(){return oe.b})),n.d(e,"grads",(function(){return oe.c})),n.d(e,"valueAndGrad",(function(){return oe.d})),n.d(e,"valueAndGrads",(function(){return oe.e})),n.d(e,"variableGrads",(function(){return oe.f})),n.d(e,"Environment",(function(){return p.b})),n.d(e,"env",(function(){return p.c})),n.d(e,"ENV",(function(){return p.a})),n.d(e,"version_core",(function(){return Zt})),n.d(e,"nextFrame",(function(){return Se.a})),n.d(e,"browser",(function(){return o})),n.d(e,"io",(function(){return r})),n.d(e,"math",(function(){return a})),n.d(e,"serialization",(function(){return c})),n.d(e,"test_util",(function(){return Yt})),n.d(e,"util",(function(){return Qt})),n.d(e,"backend_util",(function(){return l})),n.d(e,"tensor_util",(function(){return Xt})),n.d(e,"slice_util",(function(){return i})),n.d(e,"gather_util",(function(){return s})),n.d(e,"scatter_util",(function(){return jt})),n.d(e,"device_util",(function(){return fn})),n.d(e,"kernel_impls",(function(){return d})),n.d(e,"KernelBackend",(function(){return gn.b})),n.d(e,"DataStorage",(function(){return gn.a})),n.d(e,"Abs",(function(){return wt.a})),n.d(e,"Acos",(function(){return wt.b})),n.d(e,"Acosh",(function(){return wt.c})),n.d(e,"Add",(function(){return wt.d})),n.d(e,"AddN",(function(){return wt.e})),n.d(e,"All",(function(){return wt.f})),n.d(e,"Any",(function(){return wt.g})),n.d(e,"ArgMax",(function(){return wt.h})),n.d(e,"ArgMin",(function(){return wt.i})),n.d(e,"Asin",(function(){return wt.j})),n.d(e,"Asinh",(function(){return wt.k})),n.d(e,"Atan",(function(){return wt.l})),n.d(e,"Atanh",(function(){return wt.n})),n.d(e,"Atan2",(function(){return wt.m})),n.d(e,"AvgPool",(function(){return wt.o})),n.d(e,"AvgPoolGrad",(function(){return wt.r})),n.d(e,"AvgPool3D",(function(){return wt.p})),n.d(e,"AvgPool3DGrad",(function(){return wt.q})),n.d(e,"BatchMatMul",(function(){return wt.s})),n.d(e,"BatchToSpaceND",(function(){return wt.t})),n.d(e,"Bincount",(function(){return wt.u})),n.d(e,"BroadcastTo",(function(){return wt.v})),n.d(e,"Cast",(function(){return wt.w})),n.d(e,"Ceil",(function(){return wt.x})),n.d(e,"ClipByValue",(function(){return wt.y})),n.d(e,"Complex",(function(){return wt.z})),n.d(e,"ComplexAbs",(function(){return wt.A})),n.d(e,"Concat",(function(){return wt.B})),n.d(e,"Conv2D",(function(){return wt.C})),n.d(e,"Conv2DBackpropFilter",(function(){return wt.D})),n.d(e,"Conv2DBackpropInput",(function(){return wt.E})),n.d(e,"Conv3D",(function(){return wt.F})),n.d(e,"Conv3DBackpropFilterV2",(function(){return wt.G})),n.d(e,"Conv3DBackpropInputV2",(function(){return wt.H})),n.d(e,"Cos",(function(){return wt.I})),n.d(e,"Cosh",(function(){return wt.J})),n.d(e,"Cumsum",(function(){return wt.L})),n.d(e,"CropAndResize",(function(){return wt.K})),n.d(e,"DenseBincount",(function(){return wt.M})),n.d(e,"DepthToSpace",(function(){return wt.N})),n.d(e,"DepthwiseConv2dNative",(function(){return wt.O})),n.d(e,"DepthwiseConv2dNativeBackpropFilter",(function(){return wt.P})),n.d(e,"DepthwiseConv2dNativeBackpropInput",(function(){return wt.Q})),n.d(e,"Diag",(function(){return wt.R})),n.d(e,"Dilation2D",(function(){return wt.S})),n.d(e,"Dilation2DBackpropInput",(function(){return wt.U})),n.d(e,"Dilation2DBackpropFilter",(function(){return wt.T})),n.d(e,"RealDiv",(function(){return wt.kc})),n.d(e,"Elu",(function(){return wt.V})),n.d(e,"EluGrad",(function(){return wt.W})),n.d(e,"Erf",(function(){return wt.Y})),n.d(e,"Equal",(function(){return wt.X})),n.d(e,"Exp",(function(){return wt.Z})),n.d(e,"ExpandDims",(function(){return wt.ab})),n.d(e,"Expm1",(function(){return wt.bb})),n.d(e,"FFT",(function(){return wt.cb})),n.d(e,"Fill",(function(){return wt.db})),n.d(e,"FlipLeftRight",(function(){return wt.eb})),n.d(e,"Floor",(function(){return wt.fb})),n.d(e,"FloorDiv",(function(){return wt.gb})),n.d(e,"FusedBatchNorm",(function(){return wt.ib})),n.d(e,"GatherV2",(function(){return wt.mb})),n.d(e,"GatherNd",(function(){return wt.lb})),n.d(e,"Greater",(function(){return wt.nb})),n.d(e,"GreaterEqual",(function(){return wt.ob})),n.d(e,"Identity",(function(){return wt.qb})),n.d(e,"IFFT",(function(){return wt.pb})),n.d(e,"Imag",(function(){return wt.rb})),n.d(e,"IsFinite",(function(){return wt.sb})),n.d(e,"IsInf",(function(){return wt.tb})),n.d(e,"IsNan",(function(){return wt.ub})),n.d(e,"LeakyRelu",(function(){return wt.xb})),n.d(e,"Less",(function(){return wt.yb})),n.d(e,"LessEqual",(function(){return wt.zb})),n.d(e,"LinSpace",(function(){return wt.Ab})),n.d(e,"Log",(function(){return wt.Bb})),n.d(e,"Log1p",(function(){return wt.Cb})),n.d(e,"LogicalAnd",(function(){return wt.Eb})),n.d(e,"LogicalNot",(function(){return wt.Fb})),n.d(e,"LogicalOr",(function(){return wt.Gb})),n.d(e,"LogSoftmax",(function(){return wt.Db})),n.d(e,"LRN",(function(){return wt.vb})),n.d(e,"LRNGrad",(function(){return wt.wb})),n.d(e,"Max",(function(){return wt.Hb})),n.d(e,"Maximum",(function(){return wt.Nb})),n.d(e,"MaxPool",(function(){return wt.Ib})),n.d(e,"MaxPoolGrad",(function(){return wt.Lb})),n.d(e,"MaxPool3D",(function(){return wt.Jb})),n.d(e,"MaxPool3DGrad",(function(){return wt.Kb})),n.d(e,"MaxPoolWithArgmax",(function(){return wt.Mb})),n.d(e,"Mean",(function(){return wt.Ob})),n.d(e,"Min",(function(){return wt.Pb})),n.d(e,"Minimum",(function(){return wt.Qb})),n.d(e,"MirrorPad",(function(){return wt.Rb})),n.d(e,"Mod",(function(){return wt.Sb})),n.d(e,"Multinomial",(function(){return wt.Tb})),n.d(e,"Multiply",(function(){return wt.Ub})),n.d(e,"Neg",(function(){return wt.Vb})),n.d(e,"NotEqual",(function(){return wt.Zb})),n.d(e,"NonMaxSuppressionV3",(function(){return wt.Wb})),n.d(e,"NonMaxSuppressionV4",(function(){return wt.Xb})),n.d(e,"NonMaxSuppressionV5",(function(){return wt.Yb})),n.d(e,"OnesLike",(function(){return wt.bc})),n.d(e,"OneHot",(function(){return wt.ac})),n.d(e,"Pack",(function(){return wt.cc})),n.d(e,"PadV2",(function(){return wt.dc})),n.d(e,"Pool",(function(){return wt.ec})),n.d(e,"Pow",(function(){return wt.fc})),n.d(e,"Prelu",(function(){return wt.gc})),n.d(e,"Prod",(function(){return wt.hc})),n.d(e,"Range",(function(){return wt.ic})),n.d(e,"Real",(function(){return wt.jc})),n.d(e,"Reciprocal",(function(){return wt.lc})),n.d(e,"Relu",(function(){return wt.mc})),n.d(e,"Reshape",(function(){return wt.oc})),n.d(e,"ResizeNearestNeighbor",(function(){return wt.rc})),n.d(e,"ResizeNearestNeighborGrad",(function(){return wt.sc})),n.d(e,"ResizeBilinear",(function(){return wt.pc})),n.d(e,"ResizeBilinearGrad",(function(){return wt.qc})),n.d(e,"Relu6",(function(){return wt.nc})),n.d(e,"Reverse",(function(){return wt.tc})),n.d(e,"Round",(function(){return wt.vc})),n.d(e,"Rsqrt",(function(){return wt.wc})),n.d(e,"ScatterNd",(function(){return wt.xc})),n.d(e,"Select",(function(){return wt.yc})),n.d(e,"Selu",(function(){return wt.zc})),n.d(e,"Slice",(function(){return wt.Ec})),n.d(e,"Sin",(function(){return wt.Cc})),n.d(e,"Sinh",(function(){return wt.Dc})),n.d(e,"Sign",(function(){return wt.Bc})),n.d(e,"Sigmoid",(function(){return wt.Ac})),n.d(e,"Softplus",(function(){return wt.Gc})),n.d(e,"Sqrt",(function(){return wt.Kc})),n.d(e,"Sum",(function(){return wt.Qc})),n.d(e,"SpaceToBatchND",(function(){return wt.Hc})),n.d(e,"SplitV",(function(){return wt.Jc})),n.d(e,"Softmax",(function(){return wt.Fc})),n.d(e,"SquaredDifference",(function(){return wt.Mc})),n.d(e,"Square",(function(){return wt.Lc})),n.d(e,"Sub",(function(){return wt.Pc})),n.d(e,"SparseToDense",(function(){return wt.Ic})),n.d(e,"StridedSlice",(function(){return wt.Oc})),n.d(e,"Tan",(function(){return wt.Rc})),n.d(e,"Tanh",(function(){return wt.Sc})),n.d(e,"Tile",(function(){return wt.Tc})),n.d(e,"TopK",(function(){return wt.Uc})),n.d(e,"Transpose",(function(){return wt.Vc})),n.d(e,"Unique",(function(){return wt.Wc})),n.d(e,"Unpack",(function(){return wt.Xc})),n.d(e,"UnsortedSegmentSum",(function(){return wt.Yc})),n.d(e,"ZerosLike",(function(){return wt.Zc})),n.d(e,"Step",(function(){return wt.Nc})),n.d(e,"FromPixels",(function(){return wt.hb})),n.d(e,"RotateWithOffset",(function(){return wt.uc})),n.d(e,"_FusedMatMul",(function(){return wt.ad})),n.d(e,"FusedConv2D",(function(){return wt.jb})),n.d(e,"FusedDepthwiseConv2D",(function(){return wt.kb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return V})),n.d(r,"listModels",(function(){return B})),n.d(r,"moveModel",(function(){return U})),n.d(r,"removeModel",(function(){return W})),n.d(r,"browserFiles",(function(){return tt})),n.d(r,"browserHTTPRequest",(function(){return lt})),n.d(r,"concatenateArrayBuffers",(function(){return f.d})),n.d(r,"decodeWeights",(function(){return f.e})),n.d(r,"encodeWeights",(function(){return f.f})),n.d(r,"fromMemory",(function(){return pt})),n.d(r,"getLoadHandlers",(function(){return v})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return f.g})),n.d(r,"getSaveHandlers",(function(){return y})),n.d(r,"http",(function(){return ut})),n.d(r,"isHTTPScheme",(function(){return it})),n.d(r,"loadWeights",(function(){return at})),n.d(r,"registerLoadRouter",(function(){return g})),n.d(r,"registerSaveRouter",(function(){return b})),n.d(r,"weightsLoaderFactory",(function(){return ot})),n.d(r,"withSaveHandler",(function(){return ft}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return xt}));var o={};n.r(o),n.d(o,"toPixels",(function(){return St})),n.d(o,"fromPixels",(function(){return Nt}));var s={};n.r(s),n.d(s,"prepareAndValidate",(function(){return Tt}));var i={};n.r(i),n.d(i,"assertParamsValid",(function(){return Ct})),n.d(i,"maskToAxes",(function(){return Et})),n.d(i,"computeOutShape",(function(){return At})),n.d(i,"stridesWithElidedDims",(function(){return _t})),n.d(i,"getNormalizedAxes",(function(){return Ft})),n.d(i,"startIndicesWithElidedDims",(function(){return Mt})),n.d(i,"stopIndicesWithElidedDims",(function(){return zt})),n.d(i,"stridesForAxis",(function(){return Lt})),n.d(i,"startForAxis",(function(){return Pt})),n.d(i,"stopForAxis",(function(){return Bt})),n.d(i,"isSliceContinous",(function(){return Wt})),n.d(i,"computeFlatOffset",(function(){return Vt})),n.d(i,"parseSliceParams",(function(){return Ut})),n.d(i,"sliceInfo",(function(){return Gt}));var c={};n.r(c),n.d(c,"Serializable",(function(){return Ht})),n.d(c,"SerializationMap",(function(){return qt})),n.d(c,"registerClass",(function(){return Kt}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return sn})),n.d(u,"computeOutShape",(function(){return cn})),n.d(u,"collectGatherOpShapeInfo",(function(){return un}));var l={};n.r(l),n.d(l,"axesAreInnerMostDims",(function(){return Te.b})),n.d(l,"combineLocations",(function(){return Te.c})),n.d(l,"computeOutAndReduceShapes",(function(){return Te.d})),n.d(l,"expandShapeToKeepDim",(function(){return Te.e})),n.d(l,"assertAxesAreInnerMostDims",(function(){return Te.a})),n.d(l,"getAxesPermutation",(function(){return Te.f})),n.d(l,"getUndoAxesPermutation",(function(){return Te.h})),n.d(l,"getInnerMostAxes",(function(){return Te.g})),n.d(l,"getBroadcastDims",(function(){return je.b})),n.d(l,"getReductionAxes",(function(){return je.c})),n.d(l,"assertAndGetBroadcastShape",(function(){return je.a})),n.d(l,"assertParamsConsistent",(function(){return Ce})),n.d(l,"computeOutShape",(function(){return Ee})),n.d(l,"computeDilation2DInfo",(function(){return Ae.d})),n.d(l,"computePool2DInfo",(function(){return Ae.e})),n.d(l,"computePool3DInfo",(function(){return Ae.f})),n.d(l,"computeConv2DInfo",(function(){return Ae.a})),n.d(l,"computeConv3DInfo",(function(){return Ae.b})),n.d(l,"computeDefaultPad",(function(){return Ae.c})),n.d(l,"tupleValuesAreOne",(function(){return Ae.i})),n.d(l,"eitherStridesOrDilationsAreOne",(function(){return Ae.h})),n.d(l,"convertConv2DDataFormat",(function(){return Ae.g})),n.d(l,"getFusedDyActivation",(function(){return _e.c})),n.d(l,"getFusedBiasGradient",(function(){return _e.b})),n.d(l,"applyActivation",(function(){return _e.a})),n.d(l,"shouldFuse",(function(){return _e.d})),n.d(l,"PARALLELIZE_THRESHOLD",(function(){return Re})),n.d(l,"computeOptimalWindowSize",(function(){return De})),n.d(l,"slice_util",(function(){return i})),n.d(l,"upcastType",(function(){return xe.c})),n.d(l,"getImageCenter",(function(){return Fe})),n.d(l,"getReshaped",(function(){return Me})),n.d(l,"getPermuted",(function(){return ze})),n.d(l,"getReshapedPermuted",(function(){return Le})),n.d(l,"getSliceBeginCoords",(function(){return Pe})),n.d(l,"getSliceSize",(function(){return Be})),n.d(l,"prepareAndValidate",(function(){return Tt})),n.d(l,"validateUpdateShape",(function(){return jt.validateUpdateShape})),n.d(l,"validateInput",(function(){return jt.validateInput})),n.d(l,"calculateShapes",(function(){return jt.calculateShapes})),n.d(l,"SELU_SCALEALPHA",(function(){return We})),n.d(l,"SELU_SCALE",(function(){return Ve})),n.d(l,"ERF_P",(function(){return Ue})),n.d(l,"ERF_A1",(function(){return Ge})),n.d(l,"ERF_A2",(function(){return He})),n.d(l,"ERF_A3",(function(){return qe})),n.d(l,"ERF_A4",(function(){return Ke})),n.d(l,"ERF_A5",(function(){return Xe})),n.d(l,"warn",(function(){return Ye})),n.d(l,"log",(function(){return Qe})),n.d(l,"mergeRealAndImagArrays",(function(){return Ze})),n.d(l,"splitRealAndImagArrays",(function(){return Je})),n.d(l,"complexWithEvenIndex",(function(){return $e})),n.d(l,"complexWithOddIndex",(function(){return tn})),n.d(l,"getComplexWithIndex",(function(){return en})),n.d(l,"assignToTypedArray",(function(){return nn})),n.d(l,"exponents",(function(){return rn})),n.d(l,"exponent",(function(){return an})),n.d(l,"prepareSplitSize",(function(){return on})),n.d(l,"segment_util",(function(){return u})),n.d(l,"castTensor",(function(){return ln})),n.d(l,"reshapeTensor",(function(){return dn})),n.d(l,"fromUint8ToStringArray",(function(){return hn})),n.d(l,"fromStringArrayToUint8",(function(){return pn}));var d={};n.r(d),n.d(d,"nonMaxSuppressionV3Impl",(function(){return mn.a})),n.d(d,"nonMaxSuppressionV4Impl",(function(){return mn.b})),n.d(d,"nonMaxSuppressionV5Impl",(function(){return mn.c})),n.d(d,"whereImpl",(function(){return bn.a}));var h=n(5),p=(n(123),n(22)),f=n(34);class m{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==m.instance&&(m.instance=new m),m.instance}static registerSaveRouter(t){m.getInstance().saveRouters.push(t)}static registerLoadRouter(t){m.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return m.getHandlers(t,"save")}static getLoadHandlers(t,e){return m.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?m.getInstance().loadRouters:m.getInstance().saveRouters).forEach(e=>{const a=e(t,n);null!==a&&r.push(a)}),r}}const b=t=>m.registerSaveRouter(t),g=t=>m.registerLoadRouter(t),y=t=>m.getSaveHandlers(t),v=(t,e)=>m.getLoadHandlers(t,e);function x(){if(!Object(p.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"===typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function w(t){const e=t.result;e.createObjectStore("models_store",{keyPath:"modelPath"}),e.createObjectStore("model_info_store",{keyPath:"modelPath"})}class k{constructor(t){if(this.indexedDB=x(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((t,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>w(r),r.onsuccess=()=>{const a=r.result;if(null==e){const e=a.transaction("models_store","readonly"),r=e.objectStore("models_store").get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));t(r.result.modelArtifacts)},r.onerror=t=>(a.close(),n(r.error)),e.oncomplete=()=>a.close()}else{const r=Object(f.g)(e),o=a.transaction("model_info_store","readwrite");let s=o.objectStore("model_info_store");const i=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let c;i.onsuccess=()=>{c=a.transaction("models_store","readwrite");const i=c.objectStore("models_store").put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});i.onsuccess=()=>t({modelArtifactsInfo:r}),i.onerror=t=>{s=o.objectStore("model_info_store");const e=s.delete(this.modelPath);e.onsuccess=()=>(a.close(),n(i.error)),e.onerror=t=>(a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}}},r.onerror=t=>n(r.error)})}}k.URL_SCHEME="indexeddb://";const O=t=>{return Object(p.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(k.URL_SCHEME)?(e=t.slice(k.URL_SCHEME.length),new k(e)):null;var e};m.registerSaveRouter(O),m.registerLoadRouter(O);class I{constructor(){this.indexedDB=x()}async listModels(){return new Promise((t,e)=>{const n=this.indexedDB.open("tensorflowjs",1);n.onupgradeneeded=()=>w(n),n.onsuccess=()=>{const r=n.result,a=r.transaction("model_info_store","readonly"),o=a.objectStore("model_info_store").getAll();o.onsuccess=()=>{const e={};for(const t of o.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},o.onerror=t=>(r.close(),e(o.error)),a.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)})}async removeModel(t){var e;return t=(e=t).startsWith(k.URL_SCHEME)?e.slice(k.URL_SCHEME.length):e,new Promise((e,n)=>{const r=this.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=()=>w(r),r.onsuccess=()=>{const a=r.result,o=a.transaction("model_info_store","readwrite"),s=o.objectStore("model_info_store"),i=s.get(t);let c;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error("Cannot find model with path '".concat(t,"' ")+"in IndexedDB."));{const r=s.delete(t),o=()=>{c=a.transaction("models_store","readwrite");const r=c.objectStore("models_store").delete(t);r.onsuccess=()=>e(i.result.modelArtifactsInfo),r.onerror=t=>n(i.error)};r.onsuccess=o,r.onerror=t=>(o(),a.close(),n(i.error))}},i.onerror=t=>(a.close(),n(i.error)),o.oncomplete=()=>{null==c?a.close():c.oncomplete=()=>a.close()}},r.onerror=t=>n(r.error)})}}var S=n(7);const N="tensorflowjs_models",T="info",j="model_topology",C="weight_specs",E="weight_data",A="model_metadata";function _(t){return{info:[N,t,T].join("/"),topology:[N,t,j].join("/"),weightSpecs:[N,t,C].join("/"),weightData:[N,t,E].join("/"),modelMetadata:[N,t,A].join("/")}}function R(t){const e=t.split("/");if(e.length<3)throw new Error("Invalid key format: ".concat(t));return e.slice(1,e.length-1).join("/")}class D{constructor(t){if(!Object(p.c)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=_(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),a=Object(f.g)(t);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,Object(f.a)(t.weightData));const e={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};return null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(e)),{modelArtifactsInfo:a}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(a.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(a.weightSpecsBytes,", ")+"weightDataBytes=".concat(a.weightDataBytes,"."))}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");e.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const t=JSON.parse(a);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,null!=t.signature&&(e.signature=t.signature),null!=t.userDefinedMetadata&&(e.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(e.modelInitializer=t.modelInitializer)}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return e.weightData=Object(f.b)(o),e}}D.URL_SCHEME="localstorage://";const F=t=>{return Object(p.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(D.URL_SCHEME)?(e=t.slice(D.URL_SCHEME.length),new D(e)):null;var e};m.registerSaveRouter(F),m.registerLoadRouter(F);class M{constructor(){Object(S.b)(Object(p.c)().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),Object(S.b)("undefined"===typeof window||"undefined"!==typeof window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=N+"/",n="/"+T;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(e)&&a.endsWith(n)){t[R(a)]=JSON.parse(this.LS.getItem(a))}}return t}async removeModel(t){var e;const n=_(t=(e=t).startsWith(D.URL_SCHEME)?e.slice(D.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(t,"'"));const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class z{constructor(){this.managers={}}static getInstance(){return null==z.instance&&(z.instance=new z),z.instance}static registerManager(t,e){Object(S.b)(null!=t,()=>"scheme must not be undefined or null."),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),Object(S.b)(t.length>0,()=>"scheme must not be an empty string.");const n=z.getInstance();Object(S.b)(null==n.managers[t],()=>"A model store manager is already registered for scheme '".concat(t,"'.")),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error("Cannot find model manager for scheme '".concat(t,"'"));return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}function L(t){if(-1===t.indexOf("://"))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(z.getSchemes().join(",")));return{scheme:t.split("://")[0],path:t.split("://")[1]}}async function P(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Object(S.b)(t!==e,()=>"Old path and new path are the same: '".concat(t,"'"));const r=m.getLoadHandlers(t);Object(S.b)(r.length>0,()=>"Copying failed because no load handler is found for source URL ".concat(t,".")),Object(S.b)(r.length<2,()=>"Copying failed because more than one (".concat(r.length,") ")+"load handlers for source URL ".concat(t,"."));const a=r[0],o=m.getSaveHandlers(e);Object(S.b)(o.length>0,()=>"Copying failed because no save handler is found for destination "+"URL ".concat(e,".")),Object(S.b)(o.length<2,()=>"Copying failed because more than one (".concat(r.length,") ")+"save handlers for destination URL ".concat(e,"."));const s=o[0],i=L(t).scheme,c=L(t).path,u=i===L(t).scheme,l=await a.load();n&&u&&await z.getManager(i).removeModel(c);const d=await s.save(l);return n&&!u&&await z.getManager(i).removeModel(c),d.modelArtifactsInfo}async function B(){const t=z.getSchemes(),e={};for(const n of t){const t=await z.getManager(n).listModels();for(const r in t){e[n+"://"+r]=t[r]}}return e}async function W(t){const e=L(t);return z.getManager(e.scheme).removeModel(e.path)}async function V(t,e){return P(t,e,!1)}async function U(t,e){return P(t,e,!0)}class G{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Browser's encoder only supports utf-8, but got ".concat(e));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if(Object(p.c)().get("IS_BROWSER")){Object(p.c)().setPlatform("browser",new G);try{z.registerManager(D.URL_SCHEME,new M)}catch(js){}try{z.registerManager(k.URL_SCHEME,new I)}catch(js){}}n(243);var H=n(40),q=n(11),K=n(58),X=n(133),Y=n(6);Object(h.b)();const Q={buffer:H.a,cast:q.a,clone:K.a,print:X.a};Object(Y.e)(Q);function Z(t){return new Promise(t=>setTimeout(t)).then(t)}class J{constructor(t){if(!Object(p.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(J.URL_SCHEME)&&(t=t.slice(J.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(o.download=this.modelTopologyFileName,o.href=a,await Z(()=>o.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await Z(()=>t.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Object(f.g)(t)}}}}J.URL_SCHEME="downloads://";class ${constructor(t){if(null==t||t.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(t));this.files=t}async load(){const t=this.files[0],e=this.files.slice(1);return new Promise((n,r)=>{const a=new FileReader;a.onload=a=>{const o=JSON.parse(a.target.result),s=o.modelTopology;if(null==s)return void r(new Error("modelTopology field is missing from file ".concat(t.name)));0===e.length&&n({modelTopology:s});const i=o.weightsManifest;if(null==i)return void r(new Error("weightManifest field is missing from file ".concat(t.name)));let c;try{c=this.checkManifestAndWeightFiles(i,e)}catch(js){return void r(js)}const u=[],l=[],d=[];i.forEach(t=>{t.paths.forEach(t=>{l.push(t),d.push(null)}),u.push(...t.weights)}),i.forEach(t=>{t.paths.forEach(t=>{const e=new FileReader;e.onload=e=>{const r=e.target.result,a=l.indexOf(t);if(d[a]=r,-1===d.indexOf(null)){const t={modelTopology:s,weightSpecs:u,weightData:Object(f.d)(d),format:o.format,generatedBy:o.generatedBy,convertedBy:o.convertedBy};null!=o.signature&&(t.signature=o.signature),null!=o.userDefinedMetadata&&(t.userDefinedMetadata=o.userDefinedMetadata),null!=o.modelInitializer&&(t.modelInitializer=o.modelInitializer),n(t)}},e.onerror=e=>r("Failed to weights data from file of path '".concat(t,"'.")),e.readAsArrayBuffer(c[t])})})},a.onerror=e=>r("Failed to read model topology and weights manifest JSON "+"from file '".concat(t.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),a.readAsText(t)})}checkManifestAndWeightFiles(t,e){const n=[],r=e.map(t=>Object(f.c)(t.name)),a={};for(const o of t)o.paths.forEach(t=>{const o=Object(f.c)(t);if(-1!==n.indexOf(o))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(o,"'"));if(n.push(o),-1===r.indexOf(o))throw new Error("Weight file with basename '".concat(o,"' is not provided."));a[t]=e[r.indexOf(o)]});if(n.length!==e.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(n.length,") and the number of weight files provided ")+"(".concat(e.length,")."));return a}}function tt(t){return new $(t)}function et(t,e,n,r){!function(t){Object(S.b)(null!=t&&Array.isArray(t)&&t.length>0,()=>"promises must be a none empty array")}(t),function(t,e){Object(S.b)(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(t)),Object(S.b)(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(e)),Object(S.b)(e>=t,()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(t," and endFraction ")+"".concat(e))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(t.map(o=>(o.then(o=>{const s=n+ ++a/t.length*(r-n);return e(s),o}),o)))}m.registerSaveRouter(t=>Object(p.c)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(J.URL_SCHEME)?function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new J(t)}(t.slice(J.URL_SCHEME.length)):null);var nt=n(129);async function rt(t,e){null==e&&(e={});const n=null==e.fetchFunc?Object(p.c)().platform.fetch:e.fetchFunc,r=t.map(t=>n(t,e.requestInit,{isBinary:!0})),a=(null==e.onProgress?await Promise.all(r):await et(r,e.onProgress,0,.5)).map(t=>t.arrayBuffer());return null==e.onProgress?await Promise.all(a):await et(a,e.onProgress,.5,1)}async function at(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;const a=t=>rt(t,{requestInit:r}),o=ot(a);return o(t,e,n)}function ot(t){return async function(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=arguments.length>2?arguments[2]:void 0;const a=e.map(()=>!1),o={},s=null!=r?r.map(()=>!1):[],i=[];if(e.forEach((t,e)=>{let n=0;t.weights.forEach(t=>{const c="quantization"in t?t.quantization.dtype:t.dtype,u=nt.a[c]*S.N(t.shape),l=()=>{a[e]=!0,null==o[e]&&(o[e]=[]),o[e].push({manifestEntry:t,groupOffset:n,sizeBytes:u})};null!=r?r.forEach((e,n)=>{e===t.name&&(l(),s[n]=!0)}):l(),i.push(t.name),n+=u})}),!s.every(t=>t)){const t=r.filter((t,e)=>!s[e]);throw new Error("Could not find weights in manifest with names: "+"".concat(t.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=a.reduce((t,e,n)=>(e&&t.push(n),t),[]),u=[];c.forEach(t=>{e[t].paths.forEach(t=>{const e=n+(n.endsWith("/")?"":"/")+t;u.push(e)})});const l=await t(u),d={};let h=0;return c.forEach(t=>{const n=e[t].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),s=new Uint8Array(a);let i=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);s.set(t,i),i+=t.byteLength}o[t].forEach(t=>{const e=a.slice(t.groupOffset,t.groupOffset+t.sizeBytes),n=Object(f.e)(e,[t.manifestEntry]);for(const r in n)d[r]=n[r]}),h+=n}),d}}class st{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(Object(S.b)("function"===typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Object(p.c)().platform.fetch,Object(S.b)(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&Object(S.b)(2===t.length,()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(t.length,").")),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n};null!=t.signature&&(r.signature=t.signature),null!=t.userDefinedMetadata&&(r.userDefinedMetadata=t.userDefinedMetadata),null!=t.modelInitializer&&(r.modelInitializer=t.modelInitializer),e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,e);if(a.ok)return{modelArtifactsInfo:Object(f.g)(t),responses:[a]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(a.status,"."))}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(t.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let e;try{e=await t.json()}catch(p){let t="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=e.modelTopology,r=e.weightsManifest,a=e.generatedBy,o=e.convertedBy,s=e.format,i=e.signature,c=e.userDefinedMetadata;if(null==n&&null==r)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");let u,l;if(null!=r){const t=await this.loadWeights(r);[u,l]=t}const d={modelTopology:n,weightSpecs:u,weightData:l,generatedBy:a,convertedBy:o,format:s};null!=i&&(d.signature=i),null!=c&&(d.userDefinedMetadata=c);const h=e.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),a=n>e?t.substring(n):"";return[r+"/",a]}(e),a=this.weightPathPrefix||n,o=[];for(const u of t)o.push(...u.weights);const s=[],i=[];for(const u of t)for(const t of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(t)):s.push(a+t+r);this.weightUrlConverter&&s.push(...await Promise.all(i));const c=await rt(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[o,Object(f.d)(c)]}}function it(t){return null!=t.match(st.URL_SCHEME_REGEX)}st.URL_SCHEME_REGEX=/^https?:\/\//;const ct=(t,e)=>{if("undefined"===typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every(t=>it(t)):it(t),n)return ut(t,e)}return null};function ut(t,e){return new st(t,e)}function lt(t,e){return ut(t,e)}m.registerSaveRouter(ct),m.registerLoadRouter(ct);class dt{constructor(t){this.modelArtifacts=t}async load(){return this.modelArtifacts}}class ht{constructor(t){this.saveHandler=t}async save(t){return this.saveHandler(t)}}function pt(t,e,n,r){if(1===arguments.length){return null!=t.modelTopology||null!=t.weightSpecs?new dt(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new dt({modelTopology:t}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new dt({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r})}function ft(t){return new ht(t)}var mt=n(1),bt=n(25),gt=n(94),yt=n(4),vt=n(44);const xt=Object(yt.b)({confusionMatrix_:function(t,e,n){const r=Object(mt.a)(t,"labels","confusionMatrix"),a=Object(mt.a)(e,"predictions","confusionMatrix");S.b(null==n||n>0&&Number.isInteger(n),()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n)),S.b(1===r.rank,()=>"Expected the rank of labels to be 1, but got ".concat(r.rank)),S.b(1===a.rank,()=>"Expected the rank of predictions to be 1, "+"but got ".concat(a.rank)),S.b(r.shape[0]===a.shape[0],()=>"Mismatch in the number of examples: "+"".concat(r.shape[0]," vs. ").concat(a.shape[0],". ")+"Labels and predictions should have the same number of elements."),S.b(n>0&&Number.isInteger(n),()=>"numClasses is required to be a positive integer, but got "+"".concat(n));const o=Object(gt.a)(Object(q.a)(r,"int32"),n),s=Object(gt.a)(Object(q.a)(a,"int32"),n),i=Object(vt.a)(o),c=Object(bt.a)(i,s);return Object(q.a)(c,"int32")}});var wt=n(3),kt=n(60),Ot=n(160);let It;async function St(t,e){let n=Object(mt.a)(t,"img","toPixels");if(!(t instanceof Y.a)){const t=n;n=Object(q.a)(t,"int32"),t.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(n.rank,"."));const[r,a]=n.shape.slice(0,2),o=2===n.rank?1:n.shape[2];if(o>4||2===o)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(o));if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error("Unsupported type for toPixels: ".concat(n.dtype,".")+" Please use float32 or int32 tensors.");const s=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(a*r*4);for(let u=0;u<r*a;++u){const t=[0,0,0,255];for(let r=0;r<o;r++){const e=s[u*o+r];if("float32"===n.dtype){if(e<0||e>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(e,"."))}else if("int32"===n.dtype&&(e<0||e>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(e,"."));1===o?(t[0]=e*i,t[1]=e*i,t[2]=e*i):t[r]=e*i}const e=4*u;c[e+0]=Math.round(t[0]),c[e+1]=Math.round(t[1]),c[e+2]=Math.round(t[2]),c[e+3]=Math.round(t[3])}if(null!=e){e.width=a,e.height=r;const t=e.getContext("2d"),n=new ImageData(c,a,r);t.putImageData(n,0,0)}return n!==t&&n.dispose(),c}const Nt=Object(yt.b)({fromPixels_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,o=!1,s=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&t instanceof HTMLVideoElement)a=!0;else if("undefined"!==typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else if(null!=t.getContext)s=!0;else{if(!("undefined"!==typeof ImageBitmap&&t instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(t.constructor.name));i=!0}if(a){const e=2;if(a&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}const c=Object(kt.c)(wt.hb,h.a.backendName);if(null!=c){const n={pixels:t},r={numChannels:e};return h.a.runKernel(wt.hb,n,r)}const[u,l]=a?[t.videoWidth,t.videoHeight]:[t.width,t.height];let d,p;if(s?d=t.getContext("2d").getImageData(0,0,u,l).data:r||n?d=t.data:(o||a||i)&&(null==It&&(It=document.createElement("canvas").getContext("2d")),It.canvas.width=u,It.canvas.height=l,It.drawImage(t,0,0,u,l),d=It.getImageData(0,0,u,l).data),4===e)p=new Int32Array(d);else{const t=u*l;p=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)p[n*e+t]=d[4*n+t]}const f=[l,u,e];return Object(Ot.a)(p,f,"int32")}});function Tt(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(r<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(r,"."));if("int32"!==e.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.shape[r-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(e.shape[r-1]," vs. ").concat(n));if(0===Object(S.N)(t.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(t.shape,"."));const a=e.shape,o=a[a.length-1];let s=1;for(let d=0;d<a.length-1;++d)s*=a[d];const i=t.shape,c=a.slice();c.pop();let u=1;for(let d=o;d<n;++d)u*=i[d],c.push(i[d]);const l=[...Object(S.j)(t.shape).map(t=>t/u),1].slice(0,o);return[c,s,u,l]}var jt=n(100);function Ct(t,e,n){const r=t.shape.length;S.b(r===e.length,()=>"Error in slice".concat(r,"D: Length of begin ").concat(e," must ")+"match the rank of the array (".concat(r,").")),S.b(r===n.length,()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,")."));for(let a=0;a<r;++a)S.b(e[a]+n[a]<=t.shape[a],()=>"Error in slice".concat(r,"D: begin[").concat(a,"] + size[").concat(a,"] ")+"(".concat(e[a]+n[a],") would overflow input.shape[").concat(a,"] (").concat(t.shape[a],")"))}function Et(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function At(t,e,n){const r=[];for(let a=0;a<t.length;a++)r[a]=Math.ceil((e[a]-t[a])/n[a]);return r}function _t(t,e,n,r){const a=[...t];for(let o=a.length;o<r.length;o++)a.push(1);for(let o=0;o<n;o++)0===o?a[e]=1:(a.splice(e,0,1),a.pop());return a}function Rt(t,e,n){return n<=t?n:n-(e-1)}function Dt(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function Ft(t,e,n,r,a,o,s,i,c){const u=t.length;let l=new Array(u),d=new Array(u),h=new Array(u);if(e.length&&n>0){const c=e[0],u=n+1;l=Mt(s,c,u,r,t),d=zt(i,c,u,a,t),h=_t(o,c,u,t)}else for(let p=0;p<u;p++)l[p]=Pt(s,r,o,t,p,c),d[p]=Bt(i,a,o,t,p,c),h[p]=Lt(o,p,c);return{begin:l,end:d,strides:h}}function Mt(t,e,n,r,a){const o=[...a],s=Dt(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const a=Rt(e,n,i);let s=r[a];t&1<<a&&(s=0),o[i]=s}return o}function zt(t,e,n,r,a){const o=[...a],s=Dt(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const a=Rt(e,n,i);let s=r[a];t&1<<a&&(s=Number.MAX_SAFE_INTEGER),o[i]=s}for(let i=0;i<o.length;i++){const t=a[i];o[i]<0&&(o[i]+=t),o[i]=S.i(0,o[i],a[i])}return o}function Lt(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function Pt(t,e,n,r,a,o){let s=e[a];const i=n[a]||1;(t&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=S.i(0,s,c-1),s}function Bt(t,e,n,r,a,o){let s=e[a];const i=n[a]||1;(t&1<<a||o&1<<a||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=r[a];return s<0&&(s+=c),s=i>0?S.i(0,s,c):S.i(-1,s,c-1),s}function Wt(t,e,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(e[a]>0||n[a]!==t[a])return!1;return!0}function Vt(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Ut(t,e,n){let r;const a=t.shape.length;let o;return r="number"===typeof e?[e,...new Array(a-1).fill(0)]:e.length<a?e.concat(new Array(a-e.length).fill(0)):e.slice(),r.forEach(t=>{S.b(-1!==t,()=>"slice() does not support negative begin indexing.")}),o=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,o=o.map((e,n)=>e>=0?e:(S.b(-1===e,()=>"Negative size values should be exactly -1 but got "+"".concat(e," for the slice() size at index ").concat(n,".")),t.shape[n]-r[n])),[r,o]}function Gt(t,e,n,r,a,o,s,i,c){let u=e.slice(),l=n.slice(),d=r;null==r&&(d=new Array(u.length));const h=Et(s);if(h.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==s&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==s&&0!==c)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=t.length-u.length,f=Et(i),m=t.slice();f.forEach(t=>{u[t]=0,l[t]=1,m.splice(t,0,1)});const{begin:b,end:g,strides:y}=Ft(m,h,p,u,l,d,a,o,s);u=b,l=g,d=y;const v=Et(c);v.forEach(t=>{l[t]=u[t]+1,d[t]=1});const x=At(u,l,d),w=x.filter((t,e)=>-1===v.indexOf(e));return{nonStrided:d.every(t=>1===t),$begin:u,$end:l,$strides:d,size:x,newShape:m,outShape:w}}class Ht{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class qt{constructor(){this.classNameMap={}}static getMap(){return null==qt.instance&&(qt.instance=new qt),qt.instance}static register(t){qt.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function Kt(t){Object(S.b)(null!=t.className,()=>"Class being registered does not have the static className property defined."),Object(S.b)("string"===typeof t.className,()=>"className is required to be a string, but got type "+typeof t.className),Object(S.b)(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),qt.register(t)}var Xt=n(21),Yt=n(121),Qt=n(10);const Zt="2.8.6";var Jt=n(19),$t=n(12),te=n(14),ee=n(9),ne=n(32),re=n(23),ae=n(20),oe=n(29),se=n(15);class ie extends Ht{minimize(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:r,grads:a}=this.computeGradients(t,n);if(null!=n){const t=n.map(t=>({name:t.name,tensor:a[t.name]}));this.applyGradients(t)}else this.applyGradients(a);return Object(Jt.d)(a),e?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return Object(oe.f)(t,e)}dispose(){null!=this.iterations_&&Object(Jt.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(se.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(ie,Symbol.hasInstance,{value:t=>null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients});class ce extends ie{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=t,this.rho=e,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=h.a.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=h.a.registeredVariables[e];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(e,"/accum_grad"),variable:Object(Jt.t)(()=>Object(ae.a)(r).variable(!1))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(e,"/accum_var"),variable:Object(Jt.t)(()=>Object(ae.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedGrads[n].variable,s=this.accumulatedUpdates[n].variable;Object(Jt.t)(()=>{const t=Object($t.a)(Object(ee.a)(o,this.rho),Object(ee.a)(Object(re.a)(a),1-this.rho)),e=Object(ee.a)(Object(te.a)(Object(ne.a)(Object($t.a)(s,this.epsilon)),Object(ne.a)(Object($t.a)(o,this.epsilon))),a),n=Object($t.a)(Object(ee.a)(s,this.rho),Object(ee.a)(Object(re.a)(e),1-this.rho));o.assign(t),s.assign(n);const i=Object($t.a)(Object(ee.a)(e,-this.learningRate),r);r.assign(i)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Jt.d)(this.accumulatedGrads.map(t=>t.variable)),Object(Jt.d)(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}ce.className="Adadelta",Kt(ce);var ue=n(102);class le extends ie{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=h.a.registeredVariables[e];if(null==this.accumulatedGrads[n]){const t=!1;this.accumulatedGrads[n]={originalName:"".concat(e,"/accumulator"),variable:Object(Jt.t)(()=>Object(ue.a)(r.shape,this.initialAccumulatorValue).variable(t))}}const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedGrads[n].variable;Object(Jt.t)(()=>{const t=Object($t.a)(o,Object(re.a)(a));o.assign(t);const e=Object($t.a)(Object(ee.a)(Object(te.a)(a,Object(ne.a)(Object($t.a)(t,h.a.backend.epsilon()))),-this.learningRate),r);r.assign(e)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Jt.d)(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulatedGrads=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}le.className="Adagrad",Kt(le);var de=n(41),he=n(13);class pe extends ie{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Jt.t)(()=>{this.accBeta1=Object(se.a)(e).variable(),this.accBeta2=Object(se.a)(n).variable()}),null==r&&(this.epsilon=h.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Jt.t)(()=>{const n=Object(he.a)(1,this.accBeta1),r=Object(he.a)(1,this.accBeta2);e.forEach((e,a)=>{const o=h.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(e,"/m"),variable:Object(Jt.t)(()=>Object(ae.a)(o).variable(!1))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:"".concat(e,"/v"),variable:Object(Jt.t)(()=>Object(ae.a)(o).variable(!1))});const s=Array.isArray(t)?t[a].tensor:t[e];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,u=Object($t.a)(Object(ee.a)(i,this.beta1),Object(ee.a)(s,1-this.beta1)),l=Object($t.a)(Object(ee.a)(c,this.beta2),Object(ee.a)(Object(re.a)(s),1-this.beta2)),d=Object(te.a)(u,n),p=Object(te.a)(l,r);i.assign(u),c.assign(l);const f=Object($t.a)(Object(ee.a)(Object(te.a)(d,Object($t.a)(Object(ne.a)(p),this.epsilon)),-this.learningRate),o);o.assign(f)}),this.accBeta1.assign(Object(ee.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(ee.a)(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Jt.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&Object(Jt.d)(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),Object(Jt.t)(()=>{this.accBeta1.assign(Object(de.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(de.a)(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}pe.className="Adam",Kt(pe);var fe=n(36),me=n(66);class be extends ie{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=t,this.beta1=e,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Jt.t)(()=>{this.iteration=Object(se.a)(0).variable(),this.accBeta1=Object(se.a)(e).variable()}),null==r&&(this.epsilon=h.a.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);Object(Jt.t)(()=>{const n=Object(he.a)(1,this.accBeta1),r=Object(te.a)(-this.learningRate,Object($t.a)(Object(ee.a)(this.iteration,this.decay),1));e.forEach((e,a)=>{const o=h.a.registeredVariables[e];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:"".concat(e,"/m"),variable:Object(ae.a)(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:"".concat(e,"/v"),variable:Object(ae.a)(o).variable(!1)});const s=Array.isArray(t)?t[a].tensor:t[e];if(null==s)return;const i=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,u=Object($t.a)(Object(ee.a)(i,this.beta1),Object(ee.a)(s,1-this.beta1)),l=Object(ee.a)(c,this.beta2),d=Object(fe.a)(s),p=Object(me.a)(l,d);i.assign(u),c.assign(p);const f=Object($t.a)(Object(ee.a)(Object(te.a)(r,n),Object(te.a)(u,Object($t.a)(p,this.epsilon))),o);o.assign(f)}),this.iteration.assign(Object($t.a)(this.iteration,1)),this.accBeta1.assign(Object(ee.a)(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Jt.d)(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&Object(Jt.d)(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}be.className="Adamax",Kt(be);class ge extends ie{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=Array.isArray(t)?t[n].tensor:t[e];if(null==r)return;const a=h.a.registeredVariables[e];Object(Jt.t)(()=>{const t=Object($t.a)(Object(ee.a)(this.c,r),a);a.assign(t)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=Object(Jt.l)(Object(se.a)(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}ge.className="SGD",Kt(ge);class ye extends ge{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(t),this.learningRate=t,this.momentum=e,this.useNesterov=n,this.accumulations=[],this.m=Object(se.a)(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=h.a.registeredVariables[e];if(null==this.accumulations[n]){const t=!1;this.accumulations[n]={originalName:"".concat(e,"/momentum"),variable:Object(Jt.t)(()=>Object(ae.a)(r).variable(t))}}const a=this.accumulations[n].variable,o=Array.isArray(t)?t[n].tensor:t[e];null!=o&&Object(Jt.t)(()=>{let t;const e=Object($t.a)(Object(ee.a)(this.m,a),o);t=this.useNesterov?Object($t.a)(Object(ee.a)(this.c,Object($t.a)(o,Object(ee.a)(e,this.m))),r):Object($t.a)(Object(ee.a)(this.c,e),r),a.assign(e),r.assign(t)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Jt.d)(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);this.accumulations=t.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}ye.className="Momentum",Kt(ye);class ve extends ie{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=t,this.decay=e,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=h.a.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(t=>t.name):Object.keys(t)).forEach((e,n)=>{const r=h.a.registeredVariables[e];null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(e,"/rms"),variable:Object(Jt.t)(()=>Object(ae.a)(r).variable(!1))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(e,"/momentum"),variable:Object(Jt.t)(()=>Object(ae.a)(r).variable(!1))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(e,"/mg"),variable:Object(Jt.t)(()=>Object(ae.a)(r).variable(!1))});const a=Array.isArray(t)?t[n].tensor:t[e];if(null==a)return;const o=this.accumulatedMeanSquares[n].variable,s=this.accumulatedMoments[n].variable;Object(Jt.t)(()=>{const t=Object($t.a)(Object(ee.a)(o,this.decay),Object(ee.a)(Object(re.a)(a),1-this.decay));if(this.centered){const e=this.accumulatedMeanGrads[n].variable,i=Object($t.a)(Object(ee.a)(e,this.decay),Object(ee.a)(a,1-this.decay)),c=Object(te.a)(Object(ee.a)(a,this.learningRate),Object(ne.a)(Object(he.a)(t,Object($t.a)(Object(re.a)(i),this.epsilon)))),u=Object($t.a)(Object(ee.a)(s,this.momentum),c);o.assign(t),e.assign(i),s.assign(u);const l=Object(he.a)(r,u);r.assign(l)}else{const t=Object($t.a)(Object(ee.a)(o,this.decay),Object(ee.a)(Object(re.a)(a),1-this.decay)),e=Object($t.a)(Object(ee.a)(s,this.momentum),Object(te.a)(Object(ee.a)(a,this.learningRate),Object(ne.a)(Object($t.a)(t,this.epsilon))));o.assign(t),s.assign(e);const n=Object(he.a)(r,e);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Jt.d)(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&Object(Jt.d)(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&Object(Jt.d)(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2;this.accumulatedMeanSquares=t.slice(0,e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.accumulatedMoments=t.slice(e,2*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(t=>({originalName:t.name,variable:t.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}ve.className="RMSProp",Kt(ve);var xe=n(79),we=n(17),ke=n(30);class Oe{static sgd(t){return new ge(t)}static momentum(t,e){return new ye(t,e,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(t){return new ve(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new pe(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new ce(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new be(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(t){return new le(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}const Ie={sgd:Oe.sgd,momentum:Oe.momentum,adadelta:Oe.adadelta,adagrad:Oe.adagrad,rmsprop:Oe.rmsprop,adamax:Oe.adamax,adam:Oe.adam};var Se=n(209),Ne=n(57),Te=n(33),je=n(16);function Ce(t,e){const n=t[0].length;t.forEach((t,e)=>{S.b(t.length===n,()=>"Error in concat".concat(n,"D: rank of tensors[").concat(e,"] must be the same ")+"as the rank of the rest (".concat(n,")"))}),S.b(e>=0&&e<n,()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,"."));const r=t[0];t.forEach((t,a)=>{for(let o=0;o<n;o++)S.b(o===e||t[o]===r[o],()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(a,"] (").concat(t,") ")+"does not match the shape of the rest (".concat(r,") ")+"along the non-concatenated axis ".concat(a,"."))})}function Ee(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}var Ae=n(26),_e=n(37);const Re=30;function De(t){return t<=Re?t:Object(S.G)(t,Math.floor(Math.sqrt(t)))}function Fe(t,e,n){return[n*("number"===typeof t?t:t[0]),e*("number"===typeof t?t:t[1])]}function Me(t,e,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],a=[];if(r)a=a.concat(e.slice(0)),a.push(t[0]/n),a=a.concat(t.slice(1));else{a=a.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)a=a.concat([t[r+1]/e[r],e[r]]);a=a.concat(t.slice(n+1))}return a}function ze(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<t;++r)r>=2*e+1||r%2===1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Le(t,e,n){let r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const a=[];r?a.push(t[0]/n):a.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?r?a.push(e[o-1]*t[o]):a.push(t[o]/e[o-1]):a.push(t[o]);return a}function Pe(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function Be(t,e,n){const r=t.slice(0,1);for(let a=0;a<n;++a)r.push(t[a+1]-e[a][0]-e[a][1]);return r}const We=1.7580993408473768,Ve=1.0507009873554805,Ue=.3275911,Ge=.254829592,He=-.284496736,qe=1.421413741,Ke=-1.453152027,Xe=1.061405429;function Ye(){Object(p.c)().getBool("IS_TEST")||console.warn(...arguments)}function Qe(){Object(p.c)().getBool("IS_TEST")||console.log(...arguments)}function Ze(t,e){if(t.length!==e.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(t.length,", imag: ").concat(e.length,"."));const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Je(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function $e(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=0;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function tn(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let a=2;a<t.length;a+=4)n[Math.floor(a/4)]=t[a],r[Math.floor(a/4)]=t[a+1];return{real:n,imag:r}}function en(t,e){return{real:t[2*e],imag:t[2*e+1]}}function nn(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function rn(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let a=0;a<Math.ceil(t/2);a++){const o=(e?2:-2)*Math.PI*(a/t);n[a]=Math.cos(o),r[a]=Math.sin(o)}return{real:n,imag:r}}function an(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function on(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=[];if("number"===typeof e)Object(S.b)(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const a=e.reduce((t,e)=>(-1===e&&(t+=1),t),0);Object(S.b)(a<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(-1!==o){const r=e.reduce((t,e)=>e>0?t+e:t);e[o]=t.shape[n]-r}Object(S.b)(t.shape[n]===e.reduce((t,e)=>t+e),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}function sn(t,e){let n,r=!1;for(t<=Re?(n=t,r=!0):n=Object(S.G)(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=Object(S.G)(t,n+1);return n}function cn(t,e,n){const r=[],a=t.length;for(let o=0;o<a;o++)o!==e?r.push(t[o]):r.push(n);return r}function un(t,e,n,r){const a=e.shape.length,o=t.shape.length;if(0!==r&&(r<-a||r>a))throw new Error("Expect batchDims in the range of [-".concat(a,", ").concat(a,"], but got ").concat(r));if(r<0&&(r+=a),r>o)throw new Error("batchDims (".concat(r,") must be less than rank(x) (\n    ").concat(o,")."));if(n<r)throw new Error("batchDims (".concat(r,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<r;++d)if(t.shape[d]!==e.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(t.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(e.shape[d],"."));const s=t.shape[n],i=[];let c=1,u=1,l=1;for(let d=0;d<r;++d)i.push(t.shape[d]),c*=t.shape[d];for(let d=r;d<n;d++)i.push(t.shape[d]),u*=t.shape[d];for(let d=r;d<a;d++)i.push(e.shape[d]);for(let d=n+1;d<o;d++)i.push(t.shape[d]),l*=t.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:s,outputShape:i}}function ln(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=Object(Ne.a)(t.shape),r=Object(q.a)(t,"float32"),a=n.complex(r,e);return e.dispose(),r.dispose(),a}if(!Object(S.p)(t.dtype,e))return h.a.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),a=Object(q.a)(r,e);return r.dispose(),a}if("int32"===e)return n.int(t);if("bool"===e){const e=Object(se.a)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error("Error in Cast: failed to cast ".concat(t.dtype," to ").concat(e))}function dn(t,e){return h.a.makeTensorFromDataId(t.dataId,e,t.dtype)}function hn(t){try{return t.map(t=>Object(Qt.decodeString)(t))}catch(js){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(js))}}function pn(t){return t.map(t=>Object(Qt.encodeString)(t))}var fn=n(132),mn=n(65),bn=n(164),gn=n(124),yn=n(71);const vn={kernelName:wt.a,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(yn.a)(Object(q.a)(n,"float32"),-1))}}};var xn=n(27);const wn={kernelName:wt.b,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(re.a)(Object(q.a)(n,"float32")),r=Object(ne.a)(Object(he.a)(Object(se.a)(1),e));return Object(xn.a)(Object(te.a)(t,r))}}}},kn={kernelName:wt.c,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ne.a)(Object(he.a)(Object(re.a)(Object(q.a)(n,"float32")),1));return Object(te.a)(t,e)}}}};var On=n(8),In=n(18);const Sn={kernelName:wt.d,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=je.a(n.shape,r.shape);return{a:()=>{let e=t;const r=je.c(n.shape,a);return r.length>0&&(e=Object(In.a)(e,r)),Object(On.a)(e,n.shape)},b:()=>{let e=t;const n=je.c(r.shape,a);return n.length>0&&(e=Object(In.a)(e,n)),Object(On.a)(e,r.shape)}}}},Nn={kernelName:wt.e,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach((e,r)=>{n[r]=()=>t.clone()}),n}},Tn={kernelName:wt.h,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ae.a)(n)}}},jn={kernelName:wt.i,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ae.a)(n)}}},Cn={kernelName:wt.j,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(ne.a)(Object(he.a)(Object(se.a)(1),Object(re.a)(Object(q.a)(n,"float32")))))}}},En={kernelName:wt.k,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(ne.a)(Object($t.a)(Object(se.a)(1),Object(re.a)(Object(q.a)(n,"float32"))));return Object(te.a)(t,e)}}}},An={kernelName:wt.m,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(je.a)(n.shape,r.shape);return{a:()=>{const e=Object($t.a)(Object(re.a)(n),Object(re.a)(r));let o=Object(ee.a)(t,Object(te.a)(r,e));const s=Object(je.c)(n.shape,a);return s.length>0&&(o=Object(In.a)(o,s)),Object(On.a)(o,n.shape)},b:()=>{const e=Object($t.a)(Object(re.a)(n),Object(re.a)(r));let o=Object(xn.a)(Object(ee.a)(t,Object(te.a)(n,e)));const s=Object(je.c)(r.shape,a);return s.length>0&&(o=Object(In.a)(o,s)),Object(On.a)(o,r.shape)}}}},_n={kernelName:wt.l,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object($t.a)(Object(re.a)(Object(q.a)(n,"float32")),1))}}},Rn={kernelName:wt.n,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(he.a)(Object(se.a)(1),Object(re.a)(Object(q.a)(n,"float32"))))}}};const Dn=Object(yt.b)({avgPool3dGrad_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1,1],o=arguments.length>5?arguments[5]:void 0,s=arguments.length>6?arguments[6]:void 0;const i=Object(mt.a)(t,"dy","avgPool3dGrad"),c=Object(mt.a)(e,"input","avgPool3dGrad");let u=i,l=c,d=!1;4===c.rank&&(d=!0,u=Object(On.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=Object(On.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),S.b(5===u.rank,()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,".")),S.b(5===l.rank,()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,".")),S.b(Ae.h(r,a),()=>"Error in avgPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(r," and dilations '").concat(a,"'")),null!=s&&S.b(S.v(o),()=>"Error in avgPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(s," but got pad ").concat(o,"."));const p={dy:u,input:l},f={filterSize:n,strides:r,dilations:a,pad:o,dimRoundingMode:s},m=h.a.runKernel(wt.q,p,f);return d?Object(On.a)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Fn={kernelName:wt.p,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:o,dilations:s,pad:i,dimRoundingMode:c}=n,u=null==s?[1,1,1]:s;return{x:()=>Dn(t,r,a,o,u,i,c)}}};const Mn=Object(yt.b)({avgPoolGrad_:function(t,e,n,r,a){const o=Object(mt.a)(t,"dy","avgPoolGrad"),s=Object(mt.a)(e,"input","avgPoolGrad");S.b(s.rank===o.rank,()=>"Rank of input (".concat(s.rank,") does not match rank of dy (").concat(o.rank,")"));let i=s,c=o,u=!1;3===s.rank&&(u=!0,i=Object(On.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=Object(On.a)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),S.b(4===c.rank,()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,".")),S.b(4===i.rank,()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,"."));const l={dy:c,input:i},d={filterSize:n,strides:r,pad:a},p=h.a.runKernel(wt.r,l,d);return u?Object(On.a)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),zn={kernelName:wt.o,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:a,strides:o,pad:s}=n;return{x:()=>Mn(t,r,a,o,s)}}},Ln={kernelName:wt.s,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,a]=e,{transposeA:o,transposeB:s}=n;return o||s?!o&&s?{a:()=>Object(bt.a)(t,a,!1,!1),b:()=>Object(bt.a)(t,r,!0,!1)}:o&&!s?{a:()=>Object(bt.a)(a,t,!1,!0),b:()=>Object(bt.a)(r,t,!1,!1)}:{a:()=>Object(bt.a)(a,t,!0,!0),b:()=>Object(bt.a)(t,r,!0,!0)}:{a:()=>Object(bt.a)(t,a,!1,!0),b:()=>Object(bt.a)(r,t,!0,!1)}}};var Pn=n(86);const Bn={kernelName:wt.t,gradFunc:(t,e,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(Pn.a)(t,r,a)}}},Wn={kernelName:wt.v,gradFunc:(t,e,n)=>{const r=n,a=r.inputShape,o=r.shape,s=Array.from(o);for(let c=a.length-1;c>=0;c--)if(a[c]===o[c])s[c]=1;else if(1!==a[c])throw new Error("broadcastTo(): [".concat(a,"] cannot be broadcast to [").concat(o,"]."));const i=[];for(let c=0;c<s.length;c++)s[c]>1&&i.push(c);return{x:()=>Object(In.a)(t,i,!0)}}},Vn={kernelName:wt.w,gradFunc:t=>({x:()=>t.clone()})},Un={kernelName:wt.x,gradFunc:t=>({x:()=>Object(ae.a)(t)})};var Gn=n(46),Hn=n(47),qn=n(51),Kn=n(31);const Xn={kernelName:wt.y,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:a,clipValueMax:o}=n;return{x:()=>Object(Kn.a)(Object(qn.a)(Object(Gn.a)(r,a),Object(Hn.a)(r,o)),t,Object(ae.a)(t))}}},Yn={kernelName:wt.A,inputsToSave:["x"],gradFunc:vn.gradFunc};var Qn=n(63);const Zn={kernelName:wt.B,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map(t=>t.shape),{axis:a}=n,o=Object(S.I)(a,e[0].shape)[0],s=r.map(t=>t[o]);return Object(Qn.a)(t,s,o).map(t=>()=>t)}};var Jn=n(122),$n=n(120);const tr={kernelName:wt.C,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{dilations:o,strides:s,pad:i,dataFormat:c}=n;return S.b(Ae.i(o),()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")),{x:()=>Object($n.a)(r.shape,t,a,s,i,c),filter:()=>Object(Jn.a)(r,t,a.shape,s,i,c)}}};var er=n(56);const nr={kernelName:wt.E,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,{strides:o,pad:s,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>Object(er.a)(t,a,o,s,i,1,c),filter:()=>Object(Jn.a)(t,r,a.shape,o,s,i,c)}}};const rr=Object(yt.b)({conv3DBackpropFilter_:function(t,e,n,r,a){let o=t;4===t.rank&&(o=Object(On.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let s=e;4===s.rank&&(s=Object(On.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),S.b(5===o.rank,()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(o.shape,".")),S.b(5===s.rank,()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(s.shape,".")),S.b(5===n.length,()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,".")),S.b(o.shape[4]===n[3],()=>"Error in conv3dDerFilter: depth of input ".concat(o.shape[4],") must ")+"match input depth in filter (".concat(n[3],".")),S.b(s.shape[4]===n[4],()=>"Error in conv3dDerFilter: depth of dy (".concat(s.shape[4],") must ")+"match output depth for filter (".concat(n[4],")."));const i={x:o,dy:s},c={strides:r,pad:a,filterShape:n};return h.a.runKernel(wt.G,i,c)}});var ar=n(165);const or={kernelName:wt.F,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:o}=n;S.b(Object(Ae.i)(r),()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(r,"'"));const[s,i]=e;return{x:()=>Object(ar.a)(s.shape,t,i,a,o),filter:()=>rr(s,t,i.shape,a,o)}}};var sr=n(157);const ir={kernelName:wt.I,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(xn.a)(Object(sr.a)(Object(q.a)(n,"float32"))),t)}}};var cr=n(158);const ur={kernelName:wt.J,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(cr.a)(Object(q.a)(n,"float32")),t)}}};var lr=n(105);const dr={kernelName:wt.L,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a,exclusive:o,reverse:s}=n;return{x:()=>{const e=Object(Te.f)([a],r.rank);let n=Object(lr.a)(t,a,o,!s);return null!=e&&(n=Object(vt.a)(n,e)),n}}}};var hr=n(169),pr=n(168);const fr={kernelName:wt.O,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:a,pad:o,dimRoundingMode:s}=n,i=null==r?[1,1]:r;S.b(Ae.i(i),()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'"));const[c,u]=e;return S.b(4===c.rank,()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,".")),S.b(4===u.rank,()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(u.rank,".")),S.b(c.shape[3]===u.shape[2],()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(u.shape[2],".")),S.b(Ae.h(a,i),()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(a," and dilations ")+"'".concat(i,"'.")),null!=s&&S.b(S.v(o),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(s," but got pad ").concat(o,".")),{x:()=>Object(pr.a)(c.shape,t,u,a,o,r,s),filter:()=>Object(hr.a)(c,t,u.shape,a,o,r,s)}}},mr={kernelName:wt.S,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,a]=e,o={x:r,filter:a,dy:t},s={x:r,filter:a,dy:t};return{x:()=>h.a.runKernel(wt.U,o,n),filter:()=>h.a.runKernel(wt.T,s,n)}}},br={kernelName:wt.V,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r={dy:t,y:n};return{x:()=>h.a.runKernel(wt.W,r)}}};var gr=n(35);const yr={kernelName:wt.Y,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(ee.a)(Object(gr.a)(Object(xn.a)(Object(re.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(ee.a)(t,r)}}},vr={kernelName:wt.Z,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,n)}}},xr={kernelName:wt.ab,inputsToSave:["input"],gradFunc:(t,e)=>{const[n]=e;return{input:()=>Object(On.a)(t,n.shape)}}},wr={kernelName:wt.bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(gr.a)(n))}}},kr={kernelName:wt.fb,gradFunc:t=>({x:()=>Object(ae.a)(t)})},Or={kernelName:wt.gb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(je.a)(n.shape,r.shape);return{a:()=>{const e=Object(te.a)(t,Object(q.a)(r,"float32")),o=Object(je.c)(n.shape,a);return o.length>0?Object(On.a)(Object(In.a)(e,o),n.shape):e},b:()=>{let e=Object(ee.a)(t,Object(q.a)(n,"float32"));const o=Object(je.c)(r.shape,a);o.length>0&&(e=Object(On.a)(Object(In.a)(e,o),r.shape));const s=Object(re.a)(r);return Object(xn.a)(Object(te.a)(e,Object(q.a)(s,"float32")))}}}};var Ir=n(154),Sr=n(75);const Nr={kernelName:wt.ib,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[a,o,s,i]=e,c=null==i?Object(se.a)(1):i,u=Object(je.c)(o.shape,a.shape),l=[];if(1===o.rank){for(let t=0;t<a.shape.length-1;++t)l.push(a.shape[t]);l.push(1)}const d=Object(he.a)(a,o),h=Object(ee.a)(t,c),p=Object(Ir.a)(Object($t.a)(s,Object(se.a)(r))),f=Object(ee.a)(Object(ee.a)(Object(ee.a)(p,p),p),Object(se.a)(-.5));return{x:()=>1===o.rank?Object(On.a)(Object(ee.a)(Object(ee.a)(t,Object(Sr.a)(Object(On.a)(p,[1,1,1,o.shape[0]]),l)),c),a.shape):Object(On.a)(Object(ee.a)(Object(ee.a)(t,p),c),a.shape),mean:()=>{let t=Object(ee.a)(Object(ee.a)(p,Object(se.a)(-1)),h);return 1===o.rank&&(t=Object(In.a)(t,u)),Object(On.a)(t,o.shape)},variance:()=>{let t=Object(ee.a)(Object(ee.a)(f,d),h);return 1===o.rank&&(t=Object(In.a)(t,u)),Object(On.a)(t,o.shape)},scale:()=>{const e=Object(ee.a)(d,p);let n=Object(ee.a)(t,e);return 1===o.rank&&(n=Object(In.a)(n,u)),Object(On.a)(n,o.shape)},offset:()=>{let e=t;return 1===o.rank&&(e=Object(In.a)(e,u)),Object(On.a)(e,o.shape)}}}};var Tr=n(118);const jr={kernelName:wt.mb,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,a]=e,{axis:o}=n,s=Object(S.I)(o,r.shape)[0];return{x:()=>{const e=r.shape,n=a.size,i=e.slice(0,s),c=i.length,u=e.slice(o,e.length).slice(1),l=u.length,d=Cr(0,c),h=Cr(c+1,c+1+l),p=Er([i,[n],u]),f=Object(On.a)(t,p),m=Object(On.a)(a,[n]),b=Er([[c],d,h]),g=Object(vt.a)(f,b);let y=Object(Tr.a)(g,m,r.shape[s]);const v=Object(Te.h)(b);return y=Object(vt.a)(y,v),y},indices:()=>a}}};function Cr(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function Er(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Ar={kernelName:wt.ob,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(ae.a)(n),b:()=>Object(ae.a)(r)}}},_r={kernelName:wt.qb,gradFunc:t=>({x:()=>Object(q.a)(t,"float32")})},Rr={kernelName:wt.sb,gradFunc:t=>({x:()=>Object(ae.a)(t)})},Dr={kernelName:wt.tb,gradFunc:t=>({x:()=>Object(ae.a)(t)})},Fr={kernelName:wt.ub,gradFunc:t=>({x:()=>Object(ae.a)(t)})};var Mr=n(39);const zr={kernelName:wt.xb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{alpha:a}=n,o=Object(Mr.a)(r,0);return{x:()=>Object(Kn.a)(o,t,Object(ee.a)(t,a))}}},Lr={kernelName:wt.Cb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object($t.a)(n,1))}}},Pr={kernelName:wt.Bb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(q.a)(n,"float32"))}}},Br={kernelName:wt.Db,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n;return{logits:()=>{const e=Object(gr.a)(r);return Object(he.a)(t,Object(ee.a)(Object(In.a)(t,a,!0),e))}}}};const Wr=Object(yt.b)({localResponseNormalizationBackprop_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5;const i={x:t,y:e,dy:n},c={depthRadius:r,bias:a,alpha:o,beta:s};return h.a.runKernel(wt.wb,i,c)}}),Vr={kernelName:wt.vb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{depthRadius:o,bias:s,alpha:i,beta:c}=n;return{x:()=>Wr(r,a,t,o,s,i,c)}}};var Ur=n(68);function Gr(t,e,n,r){return e.rank<n.rank&&(e=Object(On.a)(e,Te.e(e.shape,r))),t.rank<n.rank&&(t=Object(On.a)(t,Te.e(t.shape,r))),{x:()=>Object(ee.a)(t,Object(q.a)(Object(Ur.a)(n,e),t.dtype))}}const Hr={kernelName:wt.Hb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:a}=r,o=e[0],s=Gr(t,e[1],o,S.I(a,o.shape));return{x:()=>s.x()}}};var qr=n(82);const Kr={kernelName:wt.Nb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(ee.a)(t,Object(q.a)(Object(Gn.a)(n,r),"float32")),b:()=>Object(ee.a)(t,Object(q.a)(Object(qr.a)(n,r),"float32"))}}};const Xr=Object(yt.b)({maxPool3dGrad_:function(t,e,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1],s=arguments.length>6?arguments[6]:void 0,i=arguments.length>7?arguments[7]:void 0;const c=Object(mt.a)(t,"dy","maxPool3dGrad"),u=Object(mt.a)(e,"input","maxPool3dGrad"),l=Object(mt.a)(n,"output","maxPool3dGrad");let d=c,p=u,f=l,m=!1;4===u.rank&&(m=!0,d=Object(On.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),p=Object(On.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),f=Object(On.a)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),S.b(5===d.rank,()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(d.rank,".")),S.b(5===p.rank,()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(p.rank,".")),S.b(5===f.rank,()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(f.rank,".")),S.b(Ae.h(a,o),()=>"Error in maxPool3dGrad: Either strides or dilations "+"must be 1. Got strides ".concat(a," and dilations '").concat(o,"'")),null!=i&&S.b(S.v(s),()=>"Error in maxPool3dGrad: pad must be an integer when "+"using, dimRoundingMode ".concat(i," but got pad ").concat(s,"."));const b={dy:d,input:p,output:f},g={filterSize:r,strides:a,dilations:o,pad:s,dimRoundingMode:i},y=h.a.runKernel(wt.Kb,b,g);return m?Object(On.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Yr={kernelName:wt.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:o,strides:s,dilations:i,pad:c,dimRoundingMode:u}=n,l=null==i?[1,1,1]:i;return{x:()=>Xr(t,r,a,o,s,l,c,u)}}};const Qr=Object(yt.b)({maxPoolGrad_:function(t,e,n,r,a,o,s){const i=Object(mt.a)(t,"dy","maxPoolGrad"),c=Object(mt.a)(e,"input","maxPoolGrad"),u=Object(mt.a)(n,"output","maxPoolGrad");S.b(c.rank===i.rank,()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")")),S.b(4===i.rank,()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,".")),S.b(4===c.rank,()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,".")),null!=s&&S.b(S.v(o),()=>"Error in maxPoolGrad: pad must be an integer when using, "+"dimRoundingMode ".concat(s," but got pad ").concat(o,"."));const l={dy:i,input:c,output:u},d={filterSize:r,strides:a,pad:o,dimRoundingMode:s};return h.a.runKernel(wt.Lb,l,d)}}),Zr={kernelName:wt.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,a]=e,{filterSize:o,strides:s,pad:i}=n;return{x:()=>Qr(t,r,a,o,s,i)}}};var Jr=n(69);const $r={kernelName:wt.Ob,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:a}=n,o=S.I(a,r.shape),s=Object(Te.d)(r.shape,o)[1],i=S.N(s);return{x:()=>{const e=r.shape.slice();o.forEach(t=>{e[t]=1});const n=Object(On.a)(t,e);return Object(te.a)(Object(ee.a)(n,Object(Jr.a)(r.shape,"float32")),i)}}}},ta={kernelName:wt.Pb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:a}=r,[o,s]=e,i=Gr(t,s,o,S.I(a,o.shape));return{x:()=>i.x()}}},ea={kernelName:wt.Qb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>Object(ee.a)(t,Object(q.a)(Object(Hn.a)(n,r),"float32")),b:()=>Object(ee.a)(t,Object(q.a)(Object(Mr.a)(n,r),"float32"))}}};var na=n(24);const ra={kernelName:wt.Rb,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,o=a.map(t=>t[0]);return{x:()=>Object(na.a)(t,o,r.shape)}}};var aa=n(107);const oa={kernelName:wt.Sb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(je.a)(n.shape,r.shape);return{a:()=>{const e=Object(je.c)(n.shape,a);return e.length>0?Object(On.a)(Object(In.a)(t,e),n.shape):t},b:()=>{const e=Object(ee.a)(t,Object(xn.a)(Object(aa.a)(Object(te.a)(n,r)))),o=Object(je.c)(r.shape,a);return o.length>0?Object(On.a)(Object(In.a)(e,o),r.shape):e}}}},sa={kernelName:wt.Ub,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(je.a)(n.shape,r.shape);return{a:()=>{const e=Object(ee.a)(t,Object(q.a)(r,"float32")),o=Object(je.c)(n.shape,a);return o.length>0?Object(On.a)(Object(In.a)(e,o),n.shape):e},b:()=>{const e=Object(ee.a)(t,Object(q.a)(n,"float32")),o=Object(je.c)(r.shape,a);return o.length>0?Object(On.a)(Object(In.a)(e,o),r.shape):e}}}},ia={kernelName:wt.Vb,gradFunc:t=>({x:()=>Object(xn.a)(t)})},ca={kernelName:wt.ac,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>Object(Ne.a)(n.shape,"float32")}}},ua={kernelName:wt.bc,gradFunc:t=>({x:()=>Object(ae.a)(t)})};var la=n(72);const da={kernelName:wt.cc,saveAllInputs:!0,gradFunc:(t,e,n)=>{const{axis:r}=n;return Object(la.a)(t,r).map(t=>()=>t)}},ha={kernelName:wt.dc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:a}=n,o=a.map(t=>t[0]);return{x:()=>Object(na.a)(t,o,r.shape)}}};var pa=n(62);const fa={kernelName:wt.fc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,a]=e,o=n,s=r,i=je.a(o.shape,s.shape);return{a:()=>{const e=Object(q.a)(s,"float32");let n=Object(ee.a)(t,Object(ee.a)(e,Object(de.a)(o,Object(he.a)(e,Object(se.a)(1)))));const r=je.c(o.shape,i);return r.length>0&&(n=Object(In.a)(n,r)),Object(On.a)(n,o.shape)},b:()=>{const e=Object(Mr.a)(o,0),n=Object(Kn.a)(e,Object(pa.a)(o),Object(ae.a)(o));let r=Object(ee.a)(t,Object(ee.a)(a,n));const c=je.c(s.shape,i);return c.length>0&&(r=Object(In.a)(r,c)),Object(On.a)(r,s.shape)}}}},ma={kernelName:wt.gc,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(Mr.a)(n,0);return{x:()=>Object(Kn.a)(a,t,Object(ee.a)(t,r)),alpha:()=>{let e=Object(Kn.a)(a,Object(ae.a)(t),Object(ee.a)(t,n));const o=Object(je.c)(r.shape,t.shape);return o.length>0&&(e=Object(In.a)(e,o)),Object(On.a)(e,r.shape)}}}},ba={kernelName:wt.kc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=je.a(n.shape,r.shape);return{a:()=>{const e=Object(te.a)(t,Object(q.a)(r,"float32")),o=je.c(n.shape,a);return o.length>0?Object(On.a)(Object(In.a)(e,o),n.shape):e},b:()=>{let e=Object(ee.a)(t,Object(q.a)(n,"float32"));const o=je.c(r.shape,a);o.length>0&&(e=Object(On.a)(Object(In.a)(e,o),r.shape));const s=Object(re.a)(r);return Object(xn.a)(Object(te.a)(e,Object(q.a)(s,"float32")))}}}},ga={kernelName:wt.lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(xn.a)(Object(re.a)(n)))}}},ya={kernelName:wt.nc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=Object(ee.a)(Object(Hn.a)(n,6),Object(yn.a)(n));return{x:()=>Object(ee.a)(t,Object(q.a)(r,"float32"))}}},va={kernelName:wt.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(q.a)(Object(yn.a)(n),"float32"))}}},xa={kernelName:wt.oc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(On.a)(t,n.shape)}}},wa={kernelName:wt.pc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>h.a.runKernel(wt.qc,a,n)}}},ka={kernelName:wt.rc,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,a={dy:t,images:r};return{images:()=>h.a.runKernel(wt.sc,a,n)}}};var Oa=n(42);const Ia={kernelName:wt.tc,gradFunc:(t,e,n)=>{const{dims:r}=n,a=Object(S.I)(r,t.shape);return{x:()=>Object(Oa.a)(t,a)}}},Sa={kernelName:wt.vc,gradFunc:t=>({x:()=>Object(ae.a)(t)})},Na={kernelName:wt.wc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(xn.a)(Object(te.a)(t,Object(ee.a)(Object(de.a)(n,1.5),2)))}}};var Ta=n(83);const ja={kernelName:wt.yc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>Object(q.a)(Object(ae.a)(n),"float32"),t:()=>Object(ee.a)(t,Object(q.a)(n,t.dtype)),e:()=>Object(ee.a)(t,Object(q.a)(Object(Ta.a)(n),t.dtype))}}},Ca={kernelName:wt.zc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=Object(Mr.a)(n,Object(se.a)(0)),r=Object(se.a)(We),a=Object(se.a)(Ve),o=Object(ee.a)(t,a),s=Object(ee.a)(Object(ee.a)(t,r),Object(gr.a)(Object(q.a)(n,"float32")));return Object(Kn.a)(e,o,s)}}}},Ea={kernelName:wt.Ac,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(ee.a)(n,Object(he.a)(Object(se.a)(1),n)))}}},Aa={kernelName:wt.Bc,gradFunc:t=>({x:()=>Object(ae.a)(t)})};var _a=n(104);const Ra={kernelName:wt.Cc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(_a.a)(Object(q.a)(n,"float32")),t)}}};var Da=n(141);const Fa={kernelName:wt.Dc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(Da.a)(Object(q.a)(n,"float32")),t)}}};var Ma=n(48);const za={kernelName:wt.Ec,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:a,size:o}=n,s=r.shape,[i,c]=Ut(r,a,o),u=[];for(let l=0;l<t.rank;l++)u.push([i[l],s[l]-i[l]-c[l]]);return{x:()=>Object(Ma.a)(t,u)}}},La={kernelName:wt.Fc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:a}=n,o=Object(ee.a)(t,r);return{logits:()=>Object(he.a)(o,Object(ee.a)(Object(In.a)(o,[a],!0),r))}}};var Pa=n(74);const Ba={kernelName:wt.Gc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(Pa.a)(n))}}};var Wa=n(80);const Va={kernelName:wt.Hc,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(Wa.a)(t,r,a)}}};var Ua=n(28);const Ga={kernelName:wt.Jc,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>Object(Ua.a)(t,r)}}},Ha={kernelName:wt.Kc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(ee.a)(Object(ne.a)(Object(q.a)(n,"float32")),2))}}},qa={kernelName:wt.Lc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(t,Object(ee.a)(Object(q.a)(n,"float32"),2))}}},Ka={kernelName:wt.Mc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=Object(se.a)(2);return{a:()=>Object(ee.a)(t,Object(ee.a)(a,Object(he.a)(n,r))),b:()=>Object(ee.a)(t,Object(ee.a)(a,Object(he.a)(r,n)))}}},Xa={kernelName:wt.Nc,gradFunc:t=>({x:()=>Object(ae.a)(t)})},Ya={kernelName:wt.Pc,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,a=je.a(n.shape,r.shape);return{a:()=>{let e=t;const r=je.c(n.shape,a);return r.length>0&&(e=Object(In.a)(e,r)),Object(On.a)(e,n.shape)},b:()=>{let e=t;const n=je.c(r.shape,a);return n.length>0&&(e=Object(In.a)(e,n)),Object(On.a)(Object(xn.a)(e),r.shape)}}}},Qa={kernelName:wt.Qc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,a=r.shape.slice(),{axis:o}=n;Object(S.I)(o,r.shape).forEach(t=>{a[t]=1});const s=Object(On.a)(t,a),i=Object(ee.a)(s,Object(Jr.a)(r.shape,"float32"));return{x:()=>i}}},Za={kernelName:wt.Rc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(te.a)(t,Object(re.a)(Object(_a.a)(n)))}}},Ja={kernelName:wt.Sc,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>Object(ee.a)(Object(he.a)(Object(se.a)(1),Object(re.a)(n)),t)}}},$a={kernelName:wt.Tc,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:a}=n;return{x:()=>{let e=Object(ae.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)e=Object($t.a)(e,Object(na.a)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)e=Object($t.a)(e,Object(na.a)(t,[n*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)for(let s=0;s<a[2];++s)e=Object($t.a)(e,Object(na.a)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(r.rank," tensors yet."));for(let n=0;n<a[0];++n)for(let o=0;o<a[1];++o)for(let s=0;s<a[2];++s)for(let i=0;i<a[3];++i)e=Object($t.a)(e,Object(na.a)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2],i*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},to={kernelName:wt.Vc,gradFunc:(t,e,n)=>{const r=n,{perm:a}=r,o=Te.h(a);return{x:()=>Object(vt.a)(t,o)}}};var eo=n(52);const no={kernelName:wt.Xc,gradFunc:(t,e,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(eo.a)(t,a)}}};var ro=n(53),ao=n(81);const oo=[vn,wn,kn,Sn,Nn,Tn,jn,Cn,En,An,_n,Rn,Fn,zn,Ln,Bn,Wn,Vn,Un,Xn,Yn,Zn,nr,tr,or,ir,ur,dr,fr,mr,ba,br,yr,vr,xr,wr,Or,kr,Nr,jr,Ar,_r,Rr,Dr,Fr,zr,Lr,Pr,Br,Vr,Hr,Hr,Kr,Yr,Zr,$r,ta,ea,ra,oa,sa,ia,ca,ua,da,ha,ha,fa,ma,ga,ya,va,xa,wa,ka,Ia,Sa,Na,ja,Ca,Ea,Aa,Ra,Fa,za,La,Ba,Va,Va,Ga,Ga,Ha,Ka,qa,Xa,Ya,Qa,Za,Ja,$a,to,no,{kernelName:wt.Yc,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=Object(me.a)(e,Object(ae.a)(e)),r=Object(ao.a)(t,n);let a=Object(Gn.a)(e,Object(se.a)(0,"int32"));const o=r.rank-a.rank;for(let i=0;i<o;++i)a=Object(ro.a)(a,i+1);a=Object(qn.a)(a,Object(Jr.a)(r.shape,"bool"));const s=Object(ae.a)(r);return Object(Kn.a)(a,r,s)}(t,n)}}},{kernelName:wt.Zc,gradFunc:t=>({x:()=>Object(ae.a)(t)})}];for(const Cs of oo)Object(kt.e)(Cs);Y.a.prototype.abs=function(){return this.throwIfDisposed(),Object(fe.a)(this)};var so=n(172);Y.a.prototype.acos=function(){return this.throwIfDisposed(),Object(so.a)(this)};var io=n(173);Y.a.prototype.acosh=function(){return this.throwIfDisposed(),Object(io.a)(this)};var co=n(206);Y.a.prototype.addStrict=function(t){return this.throwIfDisposed(),Object(co.a)(this,t)},Y.a.prototype.add=function(t){return this.throwIfDisposed(),Object($t.a)(this,t)};var uo=n(134);Y.a.prototype.all=function(t,e){return this.throwIfDisposed(),Object(uo.a)(this,t,e)};var lo=n(135);Y.a.prototype.any=function(t,e){return this.throwIfDisposed(),Object(lo.a)(this,t,e)};var ho=n(136);Y.a.prototype.argMax=function(t){return this.throwIfDisposed(),Object(ho.a)(this,t)};var po=n(137);Y.a.prototype.argMin=function(t){return this.throwIfDisposed(),Object(po.a)(this,t)},Y.a.prototype.asScalar=function(){return this.throwIfDisposed(),Object(S.b)(1===this.size,()=>"The array must have only 1 element."),Object(On.a)(this,[])},Y.a.prototype.asType=function(t){return this.throwIfDisposed(),Object(q.a)(this,t)},Y.a.prototype.as1D=function(){return this.throwIfDisposed(),Object(On.a)(this,[this.size])},Y.a.prototype.as2D=function(t,e){return this.throwIfDisposed(),Object(On.a)(this,[t,e])},Y.a.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),Object(On.a)(this,[t,e,n])},Y.a.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),Object(On.a)(this,[t,e,n,r])},Y.a.prototype.as5D=function(t,e,n,r,a){return this.throwIfDisposed(),Object(On.a)(this,[t,e,n,r,a])};var fo=n(175);Y.a.prototype.asin=function(){return this.throwIfDisposed(),Object(fo.a)(this)};var mo=n(176);Y.a.prototype.asinh=function(){return this.throwIfDisposed(),Object(mo.a)(this)};var bo=n(177);Y.a.prototype.atan=function(){return this.throwIfDisposed(),Object(bo.a)(this)};var go=n(138);Y.a.prototype.atan2=function(t){return this.throwIfDisposed(),Object(go.a)(this,t)};var yo=n(178);Y.a.prototype.atanh=function(){return this.throwIfDisposed(),Object(yo.a)(this)};var vo=n(103);Y.a.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),Object(vo.a)(this,t,e,n,r)},Y.a.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),Object(Wa.a)(this,t,e)};var xo=n(73);Y.a.prototype.batchNorm=function(t,e,n,r,a){return this.throwIfDisposed(),Object(xo.a)(this,t,e,n,r,a)};var wo=n(92);Y.a.prototype.broadcastTo=function(t){return this.throwIfDisposed(),Object(wo.a)(this,t)},Y.a.prototype.cast=function(t){return this.throwIfDisposed(),Object(q.a)(this,t)};var ko=n(181);Y.a.prototype.ceil=function(){return this.throwIfDisposed(),Object(ko.a)(this)};var Oo=n(182);Y.a.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),Object(Oo.a)(this,t,e)},Y.a.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof Y.a&&(t=[t]),Object(Ua.a)([this,...t],e)};var Io=n(139);Y.a.prototype.conv1d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(Io.a)(this,t,e,n,r,a,o)};var So=n(140);Y.a.prototype.conv2dTranspose=function(t,e,n,r,a){return this.throwIfDisposed(),Object(So.a)(this,t,e,n,r,a)},Y.a.prototype.conv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(er.a)(this,t,e,n,r,a,o)},Y.a.prototype.cos=function(){return this.throwIfDisposed(),Object(_a.a)(this)},Y.a.prototype.cosh=function(){return this.throwIfDisposed(),Object(Da.a)(this)},Y.a.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),Object(lr.a)(this,t,e,n)};var No=n(142);Y.a.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),Object(No.a)(this,t,e)};var To=n(67);Y.a.prototype.depthwiseConv2D=function(t,e,n,r,a,o){return Object(Jt.b)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),Object(To.a)(this,t,e,n,r,a,o)},Y.a.prototype.depthwiseConv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(To.a)(this,t,e,n,r,a,o)};var jo=n(143);Y.a.prototype.dilation2d=function(t,e,n,r,a){return this.throwIfDisposed(),Object(jo.a)(this,t,e,n,r,a)};var Co=n(144);Y.a.prototype.divNoNan=function(t){return this.throwIfDisposed(),Object(Co.a)(this,t)},Y.a.prototype.divStrict=function(t){return this.throwIfDisposed(),Object(co.b)(this,t)},Y.a.prototype.div=function(t){return this.throwIfDisposed(),Object(te.a)(this,t)};var Eo=n(145);Y.a.prototype.dot=function(t){return this.throwIfDisposed(),Object(Eo.a)(this,t)};var Ao=n(106);Y.a.prototype.elu=function(){return this.throwIfDisposed(),Object(Ao.a)(this)};var _o=n(205);Y.a.prototype.equalStrict=function(t){return this.throwIfDisposed(),Object(_o.a)(this,t)},Y.a.prototype.equal=function(t){return this.throwIfDisposed(),Object(Ur.a)(this,t)};var Ro=n(185);Y.a.prototype.erf=function(){return this.throwIfDisposed(),Object(Ro.a)(this)},Y.a.prototype.exp=function(){return this.throwIfDisposed(),Object(gr.a)(this)},Y.a.prototype.expandDims=function(t){return this.throwIfDisposed(),Object(ro.a)(this,t)};var Do=n(186);Y.a.prototype.expm1=function(){return this.throwIfDisposed(),Object(Do.a)(this)};var Fo=n(116);Y.a.prototype.fft=function(){return this.throwIfDisposed(),Object(Fo.a)(this)},Y.a.prototype.flatten=function(){return this.throwIfDisposed(),Object(On.a)(this,[this.size])},Y.a.prototype.floor=function(){return this.throwIfDisposed(),Object(aa.a)(this)};var Mo=n(101);Y.a.prototype.floorDiv=function(t){return this.throwIfDisposed(),Object(Mo.a)(this,t)},Y.a.prototype.gather=function(t,e){return this.throwIfDisposed(),Object(ao.a)(this,t,e)},Y.a.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),Object(_o.b)(this,t)},Y.a.prototype.greaterEqual=function(t){return this.throwIfDisposed(),Object(Gn.a)(this,t)},Y.a.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Object(_o.c)(this,t)},Y.a.prototype.greater=function(t){return this.throwIfDisposed(),Object(Mr.a)(this,t)};var zo=n(96);Y.a.prototype.ifft=function(){return this.throwIfDisposed(),Object(zo.a)(this)};var Lo=n(159);Y.a.prototype.irfft=function(){return this.throwIfDisposed(),Object(Lo.a)(this)};var Po=n(187);Y.a.prototype.isFinite=function(){return this.throwIfDisposed(),Object(Po.a)(this)};var Bo=n(188);Y.a.prototype.isInf=function(){return this.throwIfDisposed(),Object(Bo.a)(this)};var Wo=n(189);Y.a.prototype.isNaN=function(){return this.throwIfDisposed(),Object(Wo.a)(this)};var Vo=n(109);Y.a.prototype.leakyRelu=function(t){return this.throwIfDisposed(),Object(Vo.a)(this,t)},Y.a.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),Object(_o.d)(this,t)},Y.a.prototype.lessEqual=function(t){return this.throwIfDisposed(),Object(Hn.a)(this,t)},Y.a.prototype.lessStrict=function(t){return this.throwIfDisposed(),Object(_o.e)(this,t)},Y.a.prototype.less=function(t){return this.throwIfDisposed(),Object(qr.a)(this,t)};var Uo=n(146);Y.a.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),Object(Uo.a)(this,t,e,n,r)};var Go=n(191);Y.a.prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(Go.a)(this)};var Ho=n(192);Y.a.prototype.logSoftmax=function(t){return this.throwIfDisposed(),Object(Ho.a)(this,t)};var qo=n(110);Y.a.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),Object(qo.a)(this,t,e)},Y.a.prototype.log=function(){return this.throwIfDisposed(),Object(pa.a)(this)};var Ko=n(147);Y.a.prototype.log1p=function(){return this.throwIfDisposed(),Object(Ko.a)(this)},Y.a.prototype.logicalAnd=function(t){return this.throwIfDisposed(),Object(qn.a)(this,t)},Y.a.prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Ta.a)(this)};var Xo=n(111);Y.a.prototype.logicalOr=function(t){return this.throwIfDisposed(),Object(Xo.a)(this,t)};var Yo=n(149);Y.a.prototype.logicalXor=function(t){return this.throwIfDisposed(),Object(Yo.a)(this,t)},Y.a.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),Object(bt.a)(this,t,e,n)};var Qo=n(112);Y.a.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),Object(Qo.a)(this,t,e,n,r)};var Zo=n(59);Y.a.prototype.max=function(t,e){return this.throwIfDisposed(),Object(Zo.a)(this,t,e)},Y.a.prototype.maximumStrict=function(t){return this.throwIfDisposed(),Object(co.c)(this,t)},Y.a.prototype.maximum=function(t){return this.throwIfDisposed(),Object(me.a)(this,t)};var Jo=n(78);Y.a.prototype.mean=function(t,e){return this.throwIfDisposed(),Object(Jo.a)(this,t,e)};var $o=n(93);Y.a.prototype.min=function(t,e){return this.throwIfDisposed(),Object($o.a)(this,t,e)},Y.a.prototype.minimumStrict=function(t){return this.throwIfDisposed(),Object(co.d)(this,t)};var ts=n(84);Y.a.prototype.minimum=function(t){return this.throwIfDisposed(),Object(ts.a)(this,t)};var es=n(150);Y.a.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),Object(es.a)(this,t,e)},Y.a.prototype.modStrict=function(t){return this.throwIfDisposed(),Object(co.e)(this,t)};var ns=n(113);Y.a.prototype.mod=function(t){return this.throwIfDisposed(),Object(ns.a)(this,t)},Y.a.prototype.mulStrict=function(t){return this.throwIfDisposed(),Object(co.f)(this,t)},Y.a.prototype.mul=function(t){return this.throwIfDisposed(),Object(ee.a)(this,t)},Y.a.prototype.neg=function(){return this.throwIfDisposed(),Object(xn.a)(this)};var rs=n(119);Y.a.prototype.norm=function(t,e,n){return this.throwIfDisposed(),Object(rs.a)(this,t,e,n)},Y.a.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Object(_o.f)(this,t)};var as=n(85);Y.a.prototype.notEqual=function(t){return this.throwIfDisposed(),Object(as.a)(this,t)},Y.a.prototype.oneHot=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),Object(gt.a)(this,t,e,n)};var os=n(196);Y.a.prototype.onesLike=function(){return this.throwIfDisposed(),Object(os.a)(this)},Y.a.prototype.pad=function(t,e){return this.throwIfDisposed(),Object(Ma.a)(this,t,e)};var ss=n(151);Y.a.prototype.pool=function(t,e,n,r,a){return this.throwIfDisposed(),Object(ss.a)(this,t,e,n,r,a)},Y.a.prototype.powStrict=function(t){return this.throwIfDisposed(),Object(co.g)(this,t)},Y.a.prototype.pow=function(t){return this.throwIfDisposed(),Object(de.a)(this,t)};var is=n(114);Y.a.prototype.prelu=function(t){return this.throwIfDisposed(),Object(is.a)(this,t)};var cs=n(152);Y.a.prototype.prod=function(t,e){return this.throwIfDisposed(),Object(cs.a)(this,t,e)};var us=n(197);Y.a.prototype.reciprocal=function(){return this.throwIfDisposed(),Object(us.a)(this)};var ls=n(70);Y.a.prototype.relu=function(){return this.throwIfDisposed(),Object(ls.a)(this)};var ds=n(115);Y.a.prototype.relu6=function(){return this.throwIfDisposed(),Object(ds.a)(this)},Y.a.prototype.reshapeAs=function(t){return this.throwIfDisposed(),Object(On.a)(this,t.shape)},Y.a.prototype.reshape=function(t){return this.throwIfDisposed(),Object(On.a)(this,t)};var hs=n(167);Y.a.prototype.resizeBilinear=function(t,e,n){return this.throwIfDisposed(),Object(hs.a)(this,t,e,n)};var ps=n(166);Y.a.prototype.resizeNearestNeighbor=function(t,e,n){return this.throwIfDisposed(),Object(ps.a)(this,t,e,n)},Y.a.prototype.reverse=function(t){return this.throwIfDisposed(),Object(Oa.a)(this,t)};var fs=n(117);Y.a.prototype.rfft=function(){return this.throwIfDisposed(),Object(fs.a)(this)};var ms=n(198);Y.a.prototype.round=function(){return this.throwIfDisposed(),Object(ms.a)(this)},Y.a.prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Ir.a)(this)};var bs=n(155);Y.a.prototype.selu=function(){return this.throwIfDisposed(),Object(bs.a)(this)};var gs=n(156);Y.a.prototype.separableConv2d=function(t,e,n,r,a,o){return this.throwIfDisposed(),Object(gs.a)(this,t,e,n,r,a,o)},Y.a.prototype.sigmoid=function(){return this.throwIfDisposed(),Object(Pa.a)(this)};var ys=n(200);Y.a.prototype.sign=function(){return this.throwIfDisposed(),Object(ys.a)(this)},Y.a.prototype.sin=function(){return this.throwIfDisposed(),Object(sr.a)(this)},Y.a.prototype.sinh=function(){return this.throwIfDisposed(),Object(cr.a)(this)},Y.a.prototype.slice=function(t,e){return this.throwIfDisposed(),Object(na.a)(this,t,e)};var vs=n(201);Y.a.prototype.softmax=function(t){return this.throwIfDisposed(),Object(vs.a)(this,t)};var xs=n(148);Y.a.prototype.softplus=function(){return this.throwIfDisposed(),Object(xs.a)(this)},Y.a.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),Object(Pn.a)(this,t,e)},Y.a.prototype.split=function(t,e){return this.throwIfDisposed(),Object(Qn.a)(this,t,e)},Y.a.prototype.sqrt=function(){return this.throwIfDisposed(),Object(ne.a)(this)},Y.a.prototype.square=function(){return this.throwIfDisposed(),Object(re.a)(this)};var ws=n(87);Y.a.prototype.squaredDifference=function(t){return this.throwIfDisposed(),Object(ws.a)(this,t)},Y.a.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),Object(co.h)(this,t)};var ks=n(88);Y.a.prototype.squeeze=function(t){return this.throwIfDisposed(),Object(ks.a)(this,t)},Y.a.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof Y.a?[this,t]:[this,...t];return Object(eo.a)(n,e)},Y.a.prototype.step=function(t){return this.throwIfDisposed(),Object(yn.a)(this,t)};var Os=n(202);Y.a.prototype.stridedSlice=function(t,e,n,r,a,o,s,i){return this.throwIfDisposed(),Object(Os.a)(this,t,e,n,r,a,o,s,i)},Y.a.prototype.subStrict=function(t){return this.throwIfDisposed(),Object(co.i)(this,t)},Y.a.prototype.sub=function(t){return this.throwIfDisposed(),Object(he.a)(this,t)},Y.a.prototype.sum=function(t,e){return this.throwIfDisposed(),Object(In.a)(this,t,e)};var Is=n(203);Y.a.prototype.tan=function(){return this.throwIfDisposed(),Object(Is.a)(this)};var Ss=n(125);Y.a.prototype.tanh=function(){return this.throwIfDisposed(),Object(Ss.a)(this)},Y.a.prototype.tile=function(t){return this.throwIfDisposed(),Object(Sr.a)(this,t)},Y.a.prototype.toBool=function(){return this.throwIfDisposed(),Object(q.a)(this,"bool")},Y.a.prototype.toFloat=function(){return this.throwIfDisposed(),Object(q.a)(this,"float32")},Y.a.prototype.toInt=function(){return this.throwIfDisposed(),Object(q.a)(this,"int32")};var Ns=n(161);Y.a.prototype.topk=function(t,e){return this.throwIfDisposed(),Object(Ns.a)(this,t,e)},Y.a.prototype.transpose=function(t){return this.throwIfDisposed(),Object(vt.a)(this,t)};var Ts=n(162);Y.a.prototype.unique=function(t){return this.throwIfDisposed(),Object(Ts.a)(this,t)},Y.a.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Object(Tr.a)(this,t,e)},Y.a.prototype.unstack=function(t){return this.throwIfDisposed(),Object(la.a)(this,t)},Y.a.prototype.where=function(t,e){return this.throwIfDisposed(),Object(Kn.a)(t,this,e)},Y.a.prototype.zerosLike=function(){return this.throwIfDisposed(),Object(ae.a)(this)}},function(t,e,n){"use strict";n.d(e,"c",(function(){return c})),n.d(e,"a",(function(){return l})),n.d(e,"b",(function(){return d}));var r=n(5),a=n(22),o=n(6),s=n(7),i=n(10);function c(t,e){let n=t;if(Object(s.A)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Object(s.A)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function t(e,n,r){if(r=r||[],!Array.isArray(e)&&!Object(s.A)(e))return void Object(s.b)(0===n.length,()=>"Element arr[".concat(r.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(n[0]," elements"));Object(s.b)(n.length>0,()=>"Element arr[".concat(r.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements")),Object(s.b)(e.length===n[0],()=>"Element arr[".concat(r.join("]["),"] should have ").concat(n[0]," ")+"elements, but has ".concat(e.length," elements"));const a=n.slice(1);for(let o=0;o<e.length;++o)t(e[o],a,r.concat(o))}(t,r,[]),r}function u(t,e,n,r){if("string_or_numeric"!==t){if(null==t)throw new Error("Expected dtype cannot be null.");if("numeric"!==t&&t!==e||"numeric"===t&&"string"===e)throw new Error("Argument '".concat(n,"' passed to '").concat(r,"' must ")+"be ".concat(t," tensor, but got ").concat(e," tensor"))}}function l(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(t instanceof o.a)return u(a,t.dtype,e,n),t;let l=Object(s.r)(t);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),u(a,l,e,n),null==t||!Object(s.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t){const r=null==t?"null":t.constructor.name;throw new Error("Argument '".concat(e,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(r,"'"))}const d=c(t,l);Object(s.A)(t)||Array.isArray(t)||(t=[t]);const h=!0,p="string"!==l?Object(i.toTypedArray)(t,l):Object(s.m)(t,[],h);return r.a.makeTensor(p,d,l)}function d(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(t))throw new Error("Argument ".concat(e," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");const a=t;return a.map((t,a)=>l(t,"".concat(e,"[").concat(a,"]"),n,r))}},function(t,e,n){"use strict";n.d(e,"d",(function(){return a})),n.d(e,"e",(function(){return o})),n.d(e,"f",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"g",(function(){return u})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n(0);function a(t,e,n,a,s){const i=e.inputParams[t];if(i&&void 0!==i.inputIndexStart){const t=i.inputIndexStart,c=0===i.inputIndexEnd?void 0:void 0===i.inputIndexEnd?t+1:i.inputIndexEnd;if("tensor"===i.type)return o(e.inputNames[i.inputIndexStart],n,a,s);if("tensors"===i.type){return e.inputNames.slice(t,c).map(t=>o(t,n,a,s))}const u=o(e.inputNames.slice(t)[0],n,a,s),l=u.dataSync();return"number"===i.type?l[0]:r.util.toNestedArray(u.shape,l)}const c=e.attrParams[t];return c&&c.value}function o(t,e,n,r){const[a,o]=u(t);if(null!=r){const t=r.getHashTableHandleByName(a);if(null!=t)return t}const s=n.currentContextIds.find(t=>!!e[c(a,t)]);return void 0!==s?e[c(a,s)][o]:void 0}function s(t,e,n){return e[c(t,n.currentContextId)]}function i(t,e){const[n,r]=u(t);return[c(n,e&&e.currentContextId),r]}function c(t,e){return e?"".concat(t,"-").concat(e):t}function u(t){const e=t.split(":");if(1===e.length)return[t,0];return[e[0],Number(e[e.length-1])]}function l(t,e,n){let r=a("pad",t,e,n);if("explicit"===r){r=a("explicitPaddings",t,e,n);const o=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)o[t][0]=r[2*t],o[t][1]=r[2*t+1];return o}return r}function d(t){return t.kept?t:Object(r.clone)(t)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"f",(function(){return c})),n.d(e,"g",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"i",(function(){return d})),n.d(e,"j",(function(){return h})),n.d(e,"k",(function(){return p})),n.d(e,"l",(function(){return f})),n.d(e,"n",(function(){return m})),n.d(e,"m",(function(){return b})),n.d(e,"o",(function(){return g})),n.d(e,"r",(function(){return y})),n.d(e,"p",(function(){return v})),n.d(e,"q",(function(){return x})),n.d(e,"s",(function(){return w})),n.d(e,"t",(function(){return k})),n.d(e,"u",(function(){return O})),n.d(e,"v",(function(){return I})),n.d(e,"w",(function(){return S})),n.d(e,"x",(function(){return N})),n.d(e,"y",(function(){return T})),n.d(e,"z",(function(){return j})),n.d(e,"A",(function(){return C})),n.d(e,"B",(function(){return E})),n.d(e,"C",(function(){return A})),n.d(e,"D",(function(){return _})),n.d(e,"E",(function(){return R})),n.d(e,"F",(function(){return D})),n.d(e,"G",(function(){return F})),n.d(e,"H",(function(){return M})),n.d(e,"I",(function(){return z})),n.d(e,"J",(function(){return L})),n.d(e,"L",(function(){return P})),n.d(e,"K",(function(){return B})),n.d(e,"M",(function(){return W})),n.d(e,"N",(function(){return V})),n.d(e,"O",(function(){return U})),n.d(e,"P",(function(){return G})),n.d(e,"Q",(function(){return H})),n.d(e,"R",(function(){return q})),n.d(e,"S",(function(){return K})),n.d(e,"U",(function(){return X})),n.d(e,"T",(function(){return Y})),n.d(e,"kc",(function(){return Q})),n.d(e,"V",(function(){return Z})),n.d(e,"W",(function(){return J})),n.d(e,"Y",(function(){return $})),n.d(e,"X",(function(){return tt})),n.d(e,"Z",(function(){return et})),n.d(e,"ab",(function(){return nt})),n.d(e,"bb",(function(){return rt})),n.d(e,"cb",(function(){return at})),n.d(e,"db",(function(){return ot})),n.d(e,"eb",(function(){return st})),n.d(e,"fb",(function(){return it})),n.d(e,"gb",(function(){return ct})),n.d(e,"ib",(function(){return ut})),n.d(e,"mb",(function(){return lt})),n.d(e,"lb",(function(){return dt})),n.d(e,"nb",(function(){return ht})),n.d(e,"ob",(function(){return pt})),n.d(e,"qb",(function(){return ft})),n.d(e,"pb",(function(){return mt})),n.d(e,"rb",(function(){return bt})),n.d(e,"sb",(function(){return gt})),n.d(e,"tb",(function(){return yt})),n.d(e,"ub",(function(){return vt})),n.d(e,"xb",(function(){return xt})),n.d(e,"yb",(function(){return wt})),n.d(e,"zb",(function(){return kt})),n.d(e,"Ab",(function(){return Ot})),n.d(e,"Bb",(function(){return It})),n.d(e,"Cb",(function(){return St})),n.d(e,"Eb",(function(){return Nt})),n.d(e,"Fb",(function(){return Tt})),n.d(e,"Gb",(function(){return jt})),n.d(e,"Db",(function(){return Ct})),n.d(e,"vb",(function(){return Et})),n.d(e,"wb",(function(){return At})),n.d(e,"Hb",(function(){return _t})),n.d(e,"Nb",(function(){return Rt})),n.d(e,"Ib",(function(){return Dt})),n.d(e,"Lb",(function(){return Ft})),n.d(e,"Jb",(function(){return Mt})),n.d(e,"Kb",(function(){return zt})),n.d(e,"Mb",(function(){return Lt})),n.d(e,"Ob",(function(){return Pt})),n.d(e,"Pb",(function(){return Bt})),n.d(e,"Qb",(function(){return Wt})),n.d(e,"Rb",(function(){return Vt})),n.d(e,"Sb",(function(){return Ut})),n.d(e,"Tb",(function(){return Gt})),n.d(e,"Ub",(function(){return Ht})),n.d(e,"Vb",(function(){return qt})),n.d(e,"Zb",(function(){return Kt})),n.d(e,"Wb",(function(){return Xt})),n.d(e,"Xb",(function(){return Yt})),n.d(e,"Yb",(function(){return Qt})),n.d(e,"bc",(function(){return Zt})),n.d(e,"ac",(function(){return Jt})),n.d(e,"cc",(function(){return $t})),n.d(e,"dc",(function(){return te})),n.d(e,"ec",(function(){return ee})),n.d(e,"fc",(function(){return ne})),n.d(e,"gc",(function(){return re})),n.d(e,"hc",(function(){return ae})),n.d(e,"ic",(function(){return oe})),n.d(e,"jc",(function(){return se})),n.d(e,"lc",(function(){return ie})),n.d(e,"mc",(function(){return ce})),n.d(e,"oc",(function(){return ue})),n.d(e,"rc",(function(){return le})),n.d(e,"sc",(function(){return de})),n.d(e,"pc",(function(){return he})),n.d(e,"qc",(function(){return pe})),n.d(e,"nc",(function(){return fe})),n.d(e,"tc",(function(){return me})),n.d(e,"vc",(function(){return be})),n.d(e,"wc",(function(){return ge})),n.d(e,"xc",(function(){return ye})),n.d(e,"yc",(function(){return ve})),n.d(e,"zc",(function(){return xe})),n.d(e,"Ec",(function(){return we})),n.d(e,"Cc",(function(){return ke})),n.d(e,"Dc",(function(){return Oe})),n.d(e,"Bc",(function(){return Ie})),n.d(e,"Ac",(function(){return Se})),n.d(e,"Gc",(function(){return Ne})),n.d(e,"Kc",(function(){return Te})),n.d(e,"Qc",(function(){return je})),n.d(e,"Hc",(function(){return Ce})),n.d(e,"Jc",(function(){return Ee})),n.d(e,"Fc",(function(){return Ae})),n.d(e,"Mc",(function(){return _e})),n.d(e,"Lc",(function(){return Re})),n.d(e,"Pc",(function(){return De})),n.d(e,"Ic",(function(){return Fe})),n.d(e,"Oc",(function(){return Me})),n.d(e,"Rc",(function(){return ze})),n.d(e,"Sc",(function(){return Le})),n.d(e,"Tc",(function(){return Pe})),n.d(e,"Uc",(function(){return Be})),n.d(e,"Vc",(function(){return We})),n.d(e,"Wc",(function(){return Ve})),n.d(e,"Xc",(function(){return Ue})),n.d(e,"Yc",(function(){return Ge})),n.d(e,"Zc",(function(){return He})),n.d(e,"Nc",(function(){return qe})),n.d(e,"hb",(function(){return Ke})),n.d(e,"uc",(function(){return Xe})),n.d(e,"ad",(function(){return Ye})),n.d(e,"jb",(function(){return Qe})),n.d(e,"kb",(function(){return Ze}));const r="Abs",a="Acos",o="Acosh",s="Add",i="AddN",c="All",u="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",O="Bincount",I="BroadcastTo",S="Cast",N="Ceil",T="ClipByValue",j="Complex",C="ComplexAbs",E="Concat",A="Conv2D",_="Conv2DBackpropFilter",R="Conv2DBackpropInput",D="Conv3D",F="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",z="Cos",L="Cosh",P="Cumsum",B="CropAndResize",W="DenseBincount",V="DepthToSpace",U="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",q="Diag",K="Dilation2D",X="Dilation2DBackpropInput",Y="Dilation2DBackpropFilter",Q="RealDiv",Z="Elu",J="EluGrad",$="Erf",tt="Equal",et="Exp",nt="ExpandDims",rt="Expm1",at="FFT",ot="Fill",st="FlipLeftRight",it="Floor",ct="FloorDiv",ut="FusedBatchNorm",lt="GatherV2",dt="GatherNd",ht="Greater",pt="GreaterEqual",ft="Identity",mt="IFFT",bt="Imag",gt="IsFinite",yt="IsInf",vt="IsNan",xt="LeakyRelu",wt="Less",kt="LessEqual",Ot="LinSpace",It="Log",St="Log1p",Nt="LogicalAnd",Tt="LogicalNot",jt="LogicalOr",Ct="LogSoftmax",Et="LRN",At="LRNGrad",_t="Max",Rt="Maximum",Dt="MaxPool",Ft="MaxPoolGrad",Mt="MaxPool3D",zt="MaxPool3DGrad",Lt="MaxPoolWithArgmax",Pt="Mean",Bt="Min",Wt="Minimum",Vt="MirrorPad",Ut="Mod",Gt="Multinomial",Ht="Multiply",qt="Neg",Kt="NotEqual",Xt="NonMaxSuppressionV3",Yt="NonMaxSuppressionV4",Qt="NonMaxSuppressionV5",Zt="OnesLike",Jt="OneHot",$t="Pack",te="PadV2",ee="Pool",ne="Pow",re="Prelu",ae="Prod",oe="Range",se="Real",ie="Reciprocal",ce="Relu",ue="Reshape",le="ResizeNearestNeighbor",de="ResizeNearestNeighborGrad",he="ResizeBilinear",pe="ResizeBilinearGrad",fe="Relu6",me="Reverse",be="Round",ge="Rsqrt",ye="ScatterNd",ve="Select",xe="Selu",we="Slice",ke="Sin",Oe="Sinh",Ie="Sign",Se="Sigmoid",Ne="Softplus",Te="Sqrt",je="Sum",Ce="SpaceToBatchND",Ee="SplitV",Ae="Softmax",_e="SquaredDifference",Re="Square",De="Sub",Fe="SparseToDense",Me="StridedSlice",ze="Tan",Le="Tanh",Pe="Tile",Be="TopK",We="Transpose",Ve="Unique",Ue="Unpack",Ge="UnsortedSegmentSum",He="ZerosLike",qe="Step",Ke="FromPixels",Xe="RotateWithOffset",Ye="_FusedMatMul",Qe="FusedConv2D",Ze="FusedDepthwiseConv2D"},function(t,e,n){"use strict";n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return s}));var r=n(5),a=n(7);const o="__op";function s(t){const e=Object.keys(t);if(1!==e.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(e.length," keys."));let n=e[0];const s=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=o;const i=function(){r.a.startScope(n);try{const t=s(...arguments);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(t){throw r.a.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},function(t,e,n){"use strict";n.d(e,"b",(function(){return g})),n.d(e,"a",(function(){return y}));var r=n(124),a=n(22),o=n(128),s=n(3),i=n(60),c=n(7);class u{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new d)}profileKernel(t,e,n){let r;const o=this.backendTimer.time(()=>{r=n()});if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let a=0;a<r.length;a++){const e=r[a];e.data().then(n=>{l(n,e.dtype,t)})}return{kernelName:t,outputs:r,inputs:e,timeMs:o.then(t=>t.kernelMs),extraInfo:o.then(t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:a,extraInfo:o}=t;n.forEach(t=>{Promise.all([t.data(),r,o]).then(n=>{this.logger.logKernelProfile(e,t,n[0],n[1],a,n[2])})})}}function l(t,e,n){if("float32"!==e)return!1;for(let r=0;r<t.length;r++){const e=t[r];if(isNaN(e)||!isFinite(e))return console.warn("Found ".concat(e," in the result of '").concat(n,"'")),!0}return!1}class d{logKernelProfile(t,e,n,r,a,o){const s="number"===typeof r?c.L("".concat(r,"ms"),9):r.error,i=c.L(t,25),u=e.rank,l=e.size,d=c.L(e.shape.toString(),14);let h="";for(const c in a){const t=a[c];if(null!=t){const n=t.shape||e.shape,r=n.length;h+="".concat(c,": ").concat(r,"D ").concat(r>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(s,"\t%c").concat(u,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(o),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var h=n(6),p=n(21),f=n(10);class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class b{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error("The highest priority backend '".concat(t,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return t in this.registryFactory?(console.warn("".concat(t," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error("Backend name '".concat(t,"' not found in registry"));if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new u(this.backendInstance),!0}setupRegisteredKernels(){Object(i.d)(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Object(i.d)(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error("Cannot initialize backend ".concat(t,", no registration found."));try{const n=e.factory();if(!n||n instanceof r.b||"function"!==typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then(n=>!(e<this.pendingBackendInitId)&&(this.registry[t]=n,this.pendingBackendInit=null,!0)).catch(n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return console.warn("Initialization of backend ".concat(t," failed")),console.warn(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error("".concat(t," backend not found in registry"));this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,a=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!==typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!==typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(r){throw e(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],t=>({x:()=>{const e={x:t},n={dtype:"float32"};return y.runKernelFunc(e=>e.cast(t,"float32"),e,null,s.w,n)}}),[],{}),e}runKernel(t,e,n,r,a){return this.runKernelFunc(null,e,null,t,n,r,a)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let a=0;n.forEach(t=>{a+="complex64"===t.dtype?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-e-a-o;if(s>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(s," data ids) after running '").concat(t,"'"))}runKernelFunc(t,e,n,r,a,o,s){let c,u=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const d=this.state.numBytes,h=this.state.numTensors;let p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const f=Object(i.c)(r,this.backendName);let m,b;if(null!=f)p=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:a,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const i=n.map(t=>{if(null!=t.rank)return t;const{dataId:e,shape:n,dtype:r}=t;return this.makeTensorFromDataId(e,n,r)});if(l){let t=this.getTensorsForGradient(r,e,i);if(null==t){null==s&&(s=[]);const e=i.filter((t,e)=>s[e]);t=(o||[]).slice().concat(e)}u=this.saveTensorsForBackwardMode(t)}return i};else{if(null==t)throw new Error("Error running ".concat(r,": Neither modular kernel nor forward func passed"));const e=t=>{l&&(u=t.map(t=>this.keep(this.clone(t))))};p=()=>{const n=this.backend.numDataIds();m=this.tidy(()=>t(this.backend,e));const a=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,a),a}}return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(b=this.profiler.profileKernel(r,e,()=>p()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(b),c=b.outputs):c=p()}),l&&this.addTapeNode(r,e,c,n,u,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-d,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-h,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(t=>null!=e[t]?e[t].shape:null),outputShapes:c.map(t=>t.shape),kernelTimeMs:b.timeMs,extraInfo:b.extraInfo}),Array.isArray(m)?c:c[0]}saveTensorsForBackwardMode(t){return t.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(t,e,n){const r=Object(i.b)(t);if(null!=r){const t=r.inputsToSave||[],a=r.outputsToSave||[];let o;r.saveAllInputs?(c.b(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(e).map(t=>e[t])):o=t.map(t=>e[t]);const s=n.filter((t,e)=>a[e]);return o.concat(s)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=t;"string"===n&&c.z(t[0])&&(a=t.map(t=>f.encodeString(t)));const o=r.write(a,e,n),s=new h.a(e,n,o,this.nextTensorId());if(this.incRef(s,r),"string"===n){const t=this.state.tensorInfo.get(o),e=Object(c.f)(a);this.state.numBytes+=e-t.bytes,t.bytes=e}return s}makeTensorFromDataId(t,e,n,r){n=n||"float32";const a=new h.a(e,n,t,this.nextTensorId());return this.incRef(a,r),a}makeVariable(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const a=new h.c(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name ".concat(a.name," was already registered"));return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*c.g(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof h.c||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):(e.backend.decComplexRef(t.dataId),this.state.tensorInfo.get(t.dataId).refCount--)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(t=>t.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,a,o){const s={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:a},u=Object(i.b)(t);null!=u&&(r=u.gradFunc),null!=r&&(s.gradient=t=>(t=t.map((t,e)=>{if(null==t){const t=n[e],r=c.F(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t}),r(t.length>1?t:t[0],a,o))),this.state.activeTape.push(s)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=Object(p.getTensorsInContainer)(t),n=new Set(e.map(t=>t.id));for(let a=0;a<this.state.activeScope.track.length;a++){const t=this.state.activeScope.track[a];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(t=>{t.kept||t.scopeId!==r.id||this.track(t)})}gradients(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(c.b(e.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));c.b(a instanceof h.a,()=>"The result y returned by f() must be a tensor.");const o=function(t,e,n){const r={},a={};for(let c=0;c<e.length;c++)r[e[c].id]=!0;for(let c=0;c<t.length;c++){const n=t[c],o=n.inputs;for(const t in o){const s=o[t];let i=!1;for(let t=0;t<e.length;t++)if(r[s.id]){n.outputs.forEach(t=>r[t.id]=!0),i=!0,a[n.id]=!0;break}if(i)break}}const o={};o[n.id]=!0;const s={};for(let c=t.length-1;c>=0;c--){const e=t[c],n=e.inputs;for(let t=0;t<e.outputs.length;t++)if(o[e.outputs[t].id]){for(const t in n)o[n[t].id]=!0,s[e.id]=!0;break}}const i=[];for(let c=0;c<t.length;c++){const e=t[c];if(a[e.id]&&s[e.id]){const t={};for(const a in e.inputs){const n=e.inputs[a];r[n.id]&&(t[a]=n)}const n=Object.assign({},e);n.inputs=t,n.outputs=e.outputs,i.push(n)}}return i}(this.state.activeTape,e,a);if(!r&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const t={};t[a.id]=null==n?function(t){const e=Object(c.D)(Object(c.N)(t),"float32");return y.makeTensor(e,t,"float32")}(a.shape):n,function(t,e,n,r){for(let a=e.length-1;a>=0;a--){const o=e[a],s=[];if(o.outputs.forEach(e=>{const n=t[e.id];null!=n?s.push(n):s.push(null)}),null==o.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(o.kernelName,"."));const i=o.gradient(s);for(const e in o.inputs){if(!(e in i))throw new Error("Cannot backprop through input ".concat(e,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const a=n(()=>i[e]());if("float32"!==a.dtype)throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"".concat(e," must have 'float32' dtype, but has '").concat(a.dtype,"'"));const s=o.inputs[e];if(!c.a(a.shape,s.shape))throw new Error("Error in gradient for op ".concat(o.kernelName,". The gradient of input ")+"'".concat(e,"' has shape '").concat(a.shape,"', which does not match ")+"the shape of the input '".concat(s.shape,"'"));if(null==t[s.id])t[s.id]=a;else{const e=t[s.id];t[s.id]=r(e,a),e.dispose()}}}}(t,o,t=>this.tidy(t),v);const r=e.map(e=>t[e.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(t=>{for(const e of t.saved)e.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(t){var e=this;return c.b(c.u(t),()=>"The f passed in customGrad(f) must be a function."),function(){for(var n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];let o;c.b(r.every(t=>t instanceof h.a),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const s={};return r.forEach((t,e)=>{s[e]=t}),e.runKernelFunc((e,n)=>(o=t(...r,n),c.b(o.value instanceof h.a,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),c.b(c.u(o.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),o.value),s,(t,e)=>{const n=o.gradFunc(t,e),a=Array.isArray(n)?n:[n];c.b(a.length===r.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),c.b(a.every(t=>t instanceof h.a),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const s={};return a.forEach((t,e)=>{s[e]=()=>t}),s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=Object(f.now)(),n=await this.backend.time(t);return n.wallMs=Object(f.now)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function g(){const t=Object(o.b)();if(null==t._tfengine){const e=new a.b(t);t._tfengine=new b(e)}return Object(a.d)(t._tfengine.ENV),Object(h.f)(()=>t._tfengine),t._tfengine}b.nextTensorId=0,b.nextVariableId=0;const y=g();function v(t,e){const n={a:t,b:e};return y.runKernel(s.d,n)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return u})),n.d(e,"f",(function(){return p})),n.d(e,"e",(function(){return f})),n.d(e,"d",(function(){return m})),n.d(e,"a",(function(){return b})),n.d(e,"c",(function(){return g}));var r=n(7);function a(t,e,n,a){const c=Object(r.j)(e),u=function(t,e,n,a){const s=Object(r.N)(e),c=a[a.length-1],u=new Array(c).fill(0),l=e.length,d="complex64"===n?i(t):t;if(l>1)for(let r=0;r<s/c;r++){const t=r*c;for(let e=0;e<c;e++)u[e]=Math.max(u[e],o(d[t+e],0,n).length)}return u}(t,e,n,c),l=e.length,d=function t(e,n,r,a,c){let u=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const l="complex64"===r?2:1,d=n[0],h=n.length;if(0===h){if("complex64"===r){return[o(i(e)[0],0,r)]}return"bool"===r?[s(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*l;let n=Array.from(e.slice(0,t)),a=Array.from(e.slice((d-3)*l,d*l));return"complex64"===r&&(n=i(n),a=i(a)),["["+n.map((t,e)=>o(t,c[e],r)).join(", ")+", ..., "+a.map((t,e)=>o(t,c[d-3+e],r)).join(", ")+"]"]}return["["+("complex64"===r?i(e):Array.from(e)).map((t,e)=>o(t,c[e],r)).join(", ")+"]"]}const p=n.slice(1),f=a.slice(1),m=a[0]*l,b=[];if(d>20){for(let n=0;n<3;n++){const a=n*m,o=a+m;b.push(...t(e.slice(a,o),p,r,f,c,!1))}b.push("...");for(let n=d-3;n<d;n++){const a=n*m,o=a+m;b.push(...t(e.slice(a,o),p,r,f,c,n===d-1))}}else for(let o=0;o<d;o++){const n=o*m,a=n+m;b.push(...t(e.slice(n,a),p,r,f,c,o===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let o=1;o<b.length-1;o++)b[o]=" "+b[o]+g;let y=",\n";for(let o=2;o<h;o++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(u?"":y),b}(t,e,n,c,u),h=["Tensor"];return a&&(h.push("  dtype: ".concat(n)),h.push("  rank: ".concat(l)),h.push("  shape: [".concat(e,"]")),h.push("  values:")),h.push(d.map(t=>"    "+t).join("\n")),h.join("\n")}function o(t,e,n){let a;return a=Array.isArray(t)?"".concat(parseFloat(t[0].toFixed(7))," + ")+"".concat(parseFloat(t[1].toFixed(7)),"j"):Object(r.z)(t)?"'".concat(t,"'"):"bool"===n?s(t):parseFloat(t.toFixed(7)).toString(),Object(r.L)(a,e)}function s(t){return 0===t?"false":"true"}function i(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var c=n(10);class u{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.N(t),null!=n){const t=n.length;r.b(t===this.size,()=>"Length of values '".concat(t,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'."))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.n(e,this.size),this.strides=Object(r.j)(t)}set(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),a=1;a<e;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.b(n.length===this.rank,()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")"));const o=this.locToIndex(n);this.values[o]=t}get(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];0===e.length&&(e=[0]);let r=0;for(const o of e){if(o<0||o>=this.shape[r]){const t="Requested out of range element at ".concat(e,". ")+"  Buffer shape=".concat(this.shape);throw new Error(t)}r++}let a=e[e.length-1];for(let o=0;o<e.length-1;++o)a+=this.strides[o]*e[o];return this.values[a]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return l().makeTensor(this.values,this.shape,this.dtype)}}let l=null,d=null,h=null;function p(t){l=t}function f(t){d=t}function m(t){h=t}class b{constructor(t,e,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.N(t),this.strides=Object(r.j)(t),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return d.buffer(this.shape,this.dtype,t)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Object(r.S)(this.shape,t)}arraySync(){return Object(r.S)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=l().read(this.dataId);if("string"===this.dtype){const n=await t;try{return n.map(t=>c.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=l().readSync(this.dataId);if("string"===this.dtype)try{return t.map(t=>c.decodeString(t))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await l().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(l().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return d.print(this,t)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(){let t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return a(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),d.cast(this,t)}variable(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),l().makeVariable(this,t,e,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class g extends b{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(t.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.a(t.shape,this.shape))throw new Error("shape of the new value (".concat(t.shape,") and ")+"previous value (".concat(this.shape,") must match"));l().disposeTensor(this),this.dataId=t.dataId,l().incRef(this,null)}dispose(){l().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(g,Symbol.hasInstance,{value:t=>t instanceof b&&null!=t.assign&&t.assign instanceof Function})},function(t,e,n){"use strict";function r(t){let e=t.length,n=0,r=0;for(;e>0;)r=Math.random()*e|0,e--,n=t[e],t[e]=t[r],t[r]=n}function a(t,e,n){return Math.max(t,Math.min(e,n))}function o(t){return t%2===0?t:t+1}function s(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function i(t,e){const n=Math.random();return e*n+(1-n)*t}function c(t,e){let n=0;for(let r=0;r<t.length;r++){const a=Number(t[r])-Number(e[r]);n+=a*a}return n}function u(t,e){if(!t)throw new Error("string"===typeof e?e:e())}function l(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";u(m(t,e),()=>n+" Shapes ".concat(t," and ").concat(e," must match"))}function d(t){u(null!=t,()=>"The input to the tensor constructor must be a non-null value.")}function h(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e&&(e=[]),Array.isArray(t)||E(t)&&!n)for(let r=0;r<t.length;++r)h(t[r],e,n);else e.push(t);return e}function p(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function f(t){return 0===t.length}function m(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function b(t){return t%1===0}function g(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function y(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function v(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return r(e),e}function x(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function w(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>0,n=arguments.length>2?arguments[2]:void 0;return new Promise((r,a)=>{let o=0;const s=()=>{if(t())return void r();o++;const i=e(o);null!=n&&o>=n?a():setTimeout(s,i)};s()})}function k(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(r," and dim ").concat(o));r=o}else if(t[o]<0)throw Error("Shapes can not be < 0. Found ".concat(t[o]," at dim ").concat(o));if(-1===r){if(e>0&&e!==n)throw Error("Size(".concat(e,") must match the product of shape ").concat(t));return t}if(0===n)throw Error("Cannot infer the missing size in [".concat(t,"] when ")+"there are 0 elements");if(e%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(e," / ").concat(n));const a=t.slice();return a[r]=e/n,a}function O(t,e){const n=e.length;return u((t=null==t?e.map((t,e)=>e):[].concat(t)).every(t=>t>=-n&&t<n),()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(t)),u(t.every(t=>b(t)),()=>"All values in axis param must be integers but "+"got axis ".concat(t)),t.map(t=>t<0?n+t:t)}function I(t,e){const n=[],r=[],a=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||a?null:O(e,t).sort();let s=0;for(let i=0;i<t.length;++i){if(null!=o){if(o[s]===i&&1!==t[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(t[i],"' is not 1"));(null==o[s]||o[s]>i)&&1===t[i]&&(n.push(t[i]),r.push(i)),o[s]<=i&&s++}1!==t[i]&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function S(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error("Unknown data type ".concat(t));n=new Uint8Array(e)}return n}function N(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error("Unknown data type ".concat(t));n=new Array(e)}return n}function T(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type ".concat(e," being uploaded contains ").concat(r,"."))}}function j(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function C(t,e){return"complex64"!==e&&(("float32"!==e||"complex64"===t)&&(("int32"!==e||"float32"===t||"complex64"===t)&&("bool"!==e||"bool"!==t)))}function E(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function A(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error("Unknown dtype ".concat(t))}function _(t){if(null==t)return 0;let e=0;return t.forEach(t=>e+=t.length),e}function R(t){return"string"===typeof t||t instanceof String}function D(t){return"boolean"===typeof t}function F(t){return"number"===typeof t}function M(t){return Array.isArray(t)?M(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":F(t)?"float32":R(t)?"string":D(t)?"bool":"float32"}function z(t){return!!(t&&t.constructor&&t.call&&t.apply)}function L(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function P(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function B(t,e){if(0===t.length)return e[0];const n=t.reduce((t,e)=>t*e);if(0===n)return[];if(n!==e.length)throw new Error("[".concat(t,"] does not match the input size ").concat(e.length,"."));return function t(e,n,r){const a=new Array;if(1===n.length){const t=n[0];for(let n=0;n<t;n++)a[n]=r[e+n]}else{const o=n[0],s=n.slice(1),i=s.reduce((t,e)=>t*e);for(let n=0;n<o;n++)a[n]=t(e+n*i,s,r)}return a}(0,t,e)}function W(t,e){const n=V(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function V(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error("Unknown data type ".concat(e))}function U(t,e){const n=t.reduce((t,e)=>t*e,1);if(null==e||"float32"===e)return B(t,new Float32Array(n));if("int32"===e)return B(t,new Int32Array(n));if("bool"===e)return B(t,new Uint8Array(n));throw new Error("Unknown data type ".concat(e))}function G(t){t.forEach(e=>{u(Number.isInteger(e)&&e>=0,()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(t,"]."))})}function H(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let a=0;a<t.length-1;++a)r+=n[a]*t[a];return r}function q(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(t/n[a]),t-=r[a]*n[a];return r[r.length-1]=t,r}function K(t){return t&&t.then&&"function"===typeof t.then}n.d(e,"M",(function(){return r})),n.d(e,"i",(function(){return a})),n.d(e,"H",(function(){return o})),n.d(e,"Q",(function(){return s})),n.d(e,"J",(function(){return i})),n.d(e,"l",(function(){return c})),n.d(e,"b",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"d",(function(){return d})),n.d(e,"m",(function(){return h})),n.d(e,"N",(function(){return p})),n.d(e,"y",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"R",(function(){return g})),n.d(e,"O",(function(){return y})),n.d(e,"k",(function(){return v})),n.d(e,"L",(function(){return x})),n.d(e,"K",(function(){return w})),n.d(e,"s",(function(){return k})),n.d(e,"I",(function(){return O})),n.d(e,"P",(function(){return I})),n.d(e,"o",(function(){return S})),n.d(e,"n",(function(){return N})),n.d(e,"h",(function(){return T})),n.d(e,"B",(function(){return j})),n.d(e,"p",(function(){return C})),n.d(e,"A",(function(){return E})),n.d(e,"g",(function(){return A})),n.d(e,"f",(function(){return _})),n.d(e,"z",(function(){return R})),n.d(e,"t",(function(){return D})),n.d(e,"w",(function(){return F})),n.d(e,"r",(function(){return M})),n.d(e,"u",(function(){return z})),n.d(e,"G",(function(){return L})),n.d(e,"j",(function(){return P})),n.d(e,"S",(function(){return B})),n.d(e,"D",(function(){return W})),n.d(e,"F",(function(){return V})),n.d(e,"E",(function(){return U})),n.d(e,"c",(function(){return G})),n.d(e,"C",(function(){return H})),n.d(e,"q",(function(){return q})),n.d(e,"x",(function(){return K}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({reshape_:function(t,e){const n={x:Object(o.a)(t,"x","reshape","string_or_numeric")},s={shape:e};return r.a.runKernel(a.oc,n,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({mul_:function(t,e){let n=Object(s.a)(t,"a","mul"),i=Object(s.a)(e,"b","mul");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Ub,c)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"createScalarValue",(function(){return o})),n.d(e,"toTypedArray",(function(){return s})),n.d(e,"now",(function(){return i})),n.d(e,"fetch",(function(){return c})),n.d(e,"encodeString",(function(){return u})),n.d(e,"decodeString",(function(){return l}));var r=n(22),a=n(7);function o(t,e){return"string"===e?u(t):s([t],e)}function s(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=a.m(t)),Object(r.c)().getBool("DEBUG")&&a.h(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error("Unknown data type ".concat(e))}function i(){return Object(r.c)().platform.now()}function c(t,e){return Object(r.c)().platform.fetch(t,e)}function u(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(r.c)().platform.encode(t,e)}function l(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return e=e||"utf-8",Object(r.c)().platform.decode(t,e)}n.d(e,"shuffle",(function(){return a.M})),n.d(e,"clamp",(function(){return a.i})),n.d(e,"nearestLargerEven",(function(){return a.H})),n.d(e,"sum",(function(){return a.Q})),n.d(e,"randUniform",(function(){return a.J})),n.d(e,"distSquared",(function(){return a.l})),n.d(e,"assert",(function(){return a.b})),n.d(e,"assertShapesMatch",(function(){return a.e})),n.d(e,"assertNonNull",(function(){return a.d})),n.d(e,"flatten",(function(){return a.m})),n.d(e,"sizeFromShape",(function(){return a.N})),n.d(e,"isScalarShape",(function(){return a.y})),n.d(e,"arraysEqual",(function(){return a.a})),n.d(e,"isInt",(function(){return a.v})),n.d(e,"tanh",(function(){return a.R})),n.d(e,"sizeToSquarishShape",(function(){return a.O})),n.d(e,"createShuffledIndices",(function(){return a.k})),n.d(e,"rightPad",(function(){return a.L})),n.d(e,"repeatedTry",(function(){return a.K})),n.d(e,"inferFromImplicitShape",(function(){return a.s})),n.d(e,"parseAxisParam",(function(){return a.I})),n.d(e,"squeezeShape",(function(){return a.P})),n.d(e,"getTypedArrayFromDType",(function(){return a.o})),n.d(e,"getArrayFromDType",(function(){return a.n})),n.d(e,"checkConversionForErrors",(function(){return a.h})),n.d(e,"isValidDtype",(function(){return a.B})),n.d(e,"hasEncodingLoss",(function(){return a.p})),n.d(e,"isTypedArray",(function(){return a.A})),n.d(e,"bytesPerElement",(function(){return a.g})),n.d(e,"bytesFromStringArray",(function(){return a.f})),n.d(e,"isString",(function(){return a.z})),n.d(e,"isBoolean",(function(){return a.t})),n.d(e,"isNumber",(function(){return a.w})),n.d(e,"inferDtype",(function(){return a.r})),n.d(e,"isFunction",(function(){return a.u})),n.d(e,"nearestDivisor",(function(){return a.G})),n.d(e,"computeStrides",(function(){return a.j})),n.d(e,"toNestedArray",(function(){return a.S})),n.d(e,"makeOnesTypedArray",(function(){return a.D})),n.d(e,"makeZerosTypedArray",(function(){return a.F})),n.d(e,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(e,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(e,"locToIndex",(function(){return a.C})),n.d(e,"indexToLoc",(function(){return a.q})),n.d(e,"isPromise",(function(){return a.x}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({cast_:function(t,e){const n=Object(o.a)(t,"x","cast");if(!s.B(e))throw new Error("Failed to cast to unknown dtype ".concat(e));if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:e};return r.a.runKernel(a.w,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({add_:function(t,e){let n=Object(s.a)(t,"a","add"),i=Object(s.a)(e,"b","add");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.d,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({sub_:function(t,e){let n=Object(s.a)(t,"a","sub"),i=Object(s.a)(e,"b","sub");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Pc,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(101),c=n(4);const u=Object(c.b)({div_:function(t,e){let n=Object(s.a)(t,"a","div"),c=Object(s.a)(e,"b","div");if([n,c]=Object(o.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return Object(i.a)(n,c);const u={a:n,b:c};return r.a.runKernel(a.kc,u,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(7),a=n(43);function o(t,e){if((Object(r.A)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Object(r.A)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(t,[],[],e)}},function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let a=0;a<n;a++){const o=n-1-a,s=t[o]||1;(e[e.length-1-a]||1)>1&&1===s&&r.unshift(o)}return r}function a(t,e){const n=[];for(let r=0;r<e.length;r++){const a=t[t.length-r-1],o=e.length-r-1,s=e[o];(null==a||1===a&&s>1)&&n.unshift(o)}return n}function o(t,e){const n=[],r=Math.max(t.length,e.length);for(let a=0;a<r;a++){let r=t[t.length-a-1];null==r&&(r=1);let o=e[e.length-a-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o){const n="Operands could not be broadcast together with shapes "+"".concat(t," and ").concat(e,".");throw Error(n)}n.unshift(r)}}return n}n.d(e,"b",(function(){return r})),n.d(e,"c",(function(){return a})),n.d(e,"a",(function(){return o}))},function(t,e,n){"use strict";n.d(e,"b",(function(){return a.a})),n.d(e,"c",(function(){return o.a})),n.d(e,"d",(function(){return s.a})),n.d(e,"e",(function(){return i.a})),n.d(e,"f",(function(){return c.a})),n.d(e,"h",(function(){return u.a})),n.d(e,"i",(function(){return l.a})),n.d(e,"j",(function(){return d.a})),n.d(e,"k",(function(){return h.a})),n.d(e,"l",(function(){return p.a})),n.d(e,"m",(function(){return f.a})),n.d(e,"n",(function(){return m.a})),n.d(e,"o",(function(){return b.a})),n.d(e,"p",(function(){return g.a})),n.d(e,"q",(function(){return y.a})),n.d(e,"r",(function(){return v.a})),n.d(e,"s",(function(){return j})),n.d(e,"x",(function(){return C.a})),n.d(e,"t",(function(){return E.a})),n.d(e,"u",(function(){return _})),n.d(e,"v",(function(){return R})),n.d(e,"w",(function(){return D})),n.d(e,"y",(function(){return F.a})),n.d(e,"A",(function(){return M.a})),n.d(e,"B",(function(){return z.a})),n.d(e,"C",(function(){return L.a})),n.d(e,"D",(function(){return P.a})),n.d(e,"E",(function(){return B.a})),n.d(e,"F",(function(){return W.a})),n.d(e,"G",(function(){return V.a})),n.d(e,"H",(function(){return w.a})),n.d(e,"I",(function(){return U})),n.d(e,"J",(function(){return G})),n.d(e,"K",(function(){return H})),n.d(e,"L",(function(){return q})),n.d(e,"M",(function(){return K.a})),n.d(e,"N",(function(){return X.a})),n.d(e,"O",(function(){return Y.a})),n.d(e,"P",(function(){return Q.a})),n.d(e,"Q",(function(){return J})),n.d(e,"R",(function(){return $.a})),n.d(e,"S",(function(){return tt.a})),n.d(e,"U",(function(){return et.a})),n.d(e,"V",(function(){return nt.a})),n.d(e,"W",(function(){return rt.a})),n.d(e,"X",(function(){return at.a})),n.d(e,"Y",(function(){return it})),n.d(e,"Z",(function(){return ct.a})),n.d(e,"ab",(function(){return ut.a})),n.d(e,"bb",(function(){return lt.a})),n.d(e,"db",(function(){return dt.a})),n.d(e,"fb",(function(){return ht.a})),n.d(e,"hb",(function(){return pt.a})),n.d(e,"jb",(function(){return ft.a})),n.d(e,"kb",(function(){return mt.a})),n.d(e,"lb",(function(){return bt.a})),n.d(e,"mb",(function(){return gt.a})),n.d(e,"nb",(function(){return xt})),n.d(e,"pb",(function(){return wt.a})),n.d(e,"qb",(function(){return kt.a})),n.d(e,"rb",(function(){return Ot.a})),n.d(e,"tb",(function(){return It.a})),n.d(e,"vb",(function(){return St.a})),n.d(e,"wb",(function(){return Nt.a})),n.d(e,"Ab",(function(){return Tt.a})),n.d(e,"Eb",(function(){return jt.a})),n.d(e,"Fb",(function(){return Ct.a})),n.d(e,"Gb",(function(){return Et.a})),n.d(e,"Hb",(function(){return At.a})),n.d(e,"Ib",(function(){return _t.a})),n.d(e,"Jb",(function(){return Rt.a})),n.d(e,"Nb",(function(){return Dt.a})),n.d(e,"Ob",(function(){return Ft.a})),n.d(e,"Pb",(function(){return Mt.a})),n.d(e,"Qb",(function(){return zt.a})),n.d(e,"Rb",(function(){return Lt.a})),n.d(e,"Sb",(function(){return Pt.a})),n.d(e,"Tb",(function(){return Bt.a})),n.d(e,"Ub",(function(){return Wt.a})),n.d(e,"Vb",(function(){return Vt.a})),n.d(e,"Wb",(function(){return Ut.a})),n.d(e,"Xb",(function(){return Gt.a})),n.d(e,"Zb",(function(){return k.a})),n.d(e,"ac",(function(){return Ht.a})),n.d(e,"bc",(function(){return qt.a})),n.d(e,"cc",(function(){return Kt.a})),n.d(e,"dc",(function(){return Xt.a})),n.d(e,"ec",(function(){return Yt.a})),n.d(e,"gc",(function(){return Qt.a})),n.d(e,"hc",(function(){return Zt.a})),n.d(e,"ic",(function(){return Jt.a})),n.d(e,"kc",(function(){return $t.a})),n.d(e,"lc",(function(){return te.a})),n.d(e,"nc",(function(){return ae})),n.d(e,"pc",(function(){return O.a})),n.d(e,"rc",(function(){return oe})),n.d(e,"sc",(function(){return se.a})),n.d(e,"tc",(function(){return ie.a})),n.d(e,"vc",(function(){return ce.a})),n.d(e,"xc",(function(){return ue.a})),n.d(e,"yc",(function(){return le.a})),n.d(e,"zc",(function(){return de.a})),n.d(e,"Bc",(function(){return he})),n.d(e,"Cc",(function(){return pe.a})),n.d(e,"Dc",(function(){return fe})),n.d(e,"Ec",(function(){return me})),n.d(e,"Fc",(function(){return be})),n.d(e,"Gc",(function(){return ge})),n.d(e,"Hc",(function(){return ye.a})),n.d(e,"Ic",(function(){return ve.a})),n.d(e,"Kc",(function(){return xe.a})),n.d(e,"Lc",(function(){return we.a})),n.d(e,"Mc",(function(){return ke.a})),n.d(e,"Nc",(function(){return Oe})),n.d(e,"Oc",(function(){return Se})),n.d(e,"Pc",(function(){return Ne})),n.d(e,"Qc",(function(){return Te.a})),n.d(e,"Rc",(function(){return je.a})),n.d(e,"Sc",(function(){return Ce.a})),n.d(e,"Tc",(function(){return Ee.a})),n.d(e,"Uc",(function(){return Ae.a})),n.d(e,"Vc",(function(){return _e.a})),n.d(e,"Wc",(function(){return yt.a})),n.d(e,"Xc",(function(){return Re.a})),n.d(e,"Yc",(function(){return De})),n.d(e,"Zc",(function(){return Fe})),n.d(e,"ad",(function(){return Me})),n.d(e,"bd",(function(){return ze})),n.d(e,"dd",(function(){return Le.a})),n.d(e,"ed",(function(){return Pe.a})),n.d(e,"fd",(function(){return Be.a})),n.d(e,"hd",(function(){return We.a})),n.d(e,"id",(function(){return Ve.a})),n.d(e,"jd",(function(){return Ue.a})),n.d(e,"kd",(function(){return S.a})),n.d(e,"ld",(function(){return Ge.a})),n.d(e,"nd",(function(){return He.a})),n.d(e,"od",(function(){return qe.a})),n.d(e,"pd",(function(){return N.a})),n.d(e,"qd",(function(){return Ke})),n.d(e,"rd",(function(){return Xe})),n.d(e,"sd",(function(){return Ye})),n.d(e,"td",(function(){return Qe})),n.d(e,"ud",(function(){return Ze.a})),n.d(e,"vd",(function(){return Je.a})),n.d(e,"wd",(function(){return $e.a})),n.d(e,"ob",(function(){return tn.a})),n.d(e,"zb",(function(){return en.a})),n.d(e,"Db",(function(){return nn.a})),n.d(e,"cd",(function(){return rn.a})),n.d(e,"zd",(function(){return an.a})),n.d(e,"Ad",(function(){return on.a})),n.d(e,"Bd",(function(){return ne.a})),n.d(e,"Cd",(function(){return sn.a})),n.d(e,"Ed",(function(){return cn.a})),n.d(e,"Fd",(function(){return un.a})),n.d(e,"Gd",(function(){return ln.a})),n.d(e,"Hd",(function(){return dn.a})),n.d(e,"Id",(function(){return re.a})),n.d(e,"Kd",(function(){return hn.a})),n.d(e,"Ld",(function(){return pn.a})),n.d(e,"Md",(function(){return T.a})),n.d(e,"Nd",(function(){return fn.a})),n.d(e,"Od",(function(){return mn.a})),n.d(e,"Pd",(function(){return gn})),n.d(e,"Qd",(function(){return yn.a})),n.d(e,"Rd",(function(){return vn})),n.d(e,"Sd",(function(){return xn})),n.d(e,"Td",(function(){return wn})),n.d(e,"Ud",(function(){return vt.a})),n.d(e,"Vd",(function(){return kn.a})),n.d(e,"Xd",(function(){return On.a})),n.d(e,"Yd",(function(){return In.a})),n.d(e,"Zd",(function(){return Sn.a})),n.d(e,"ae",(function(){return Nn.a})),n.d(e,"be",(function(){return Tn})),n.d(e,"ce",(function(){return jn.a})),n.d(e,"de",(function(){return Cn.a})),n.d(e,"ee",(function(){return En.a})),n.d(e,"fe",(function(){return An.a})),n.d(e,"z",(function(){return _n})),n.d(e,"ib",(function(){return Rn.a})),n.d(e,"xb",(function(){return Rn.b})),n.d(e,"yb",(function(){return Rn.c})),n.d(e,"Kb",(function(){return Rn.d})),n.d(e,"Lb",(function(){return Rn.e})),n.d(e,"wc",(function(){return Rn.f})),n.d(e,"g",(function(){return Dn.a})),n.d(e,"cb",(function(){return Dn.b})),n.d(e,"fc",(function(){return Dn.c})),n.d(e,"jc",(function(){return Dn.d})),n.d(e,"mc",(function(){return Dn.e})),n.d(e,"qc",(function(){return Dn.f})),n.d(e,"Jc",(function(){return Dn.g})),n.d(e,"Dd",(function(){return Dn.h})),n.d(e,"Jd",(function(){return Dn.i})),n.d(e,"Wd",(function(){return Fn.a})),n.d(e,"uc",(function(){return Mn.a})),n.d(e,"oc",(function(){return Ln})),n.d(e,"gd",(function(){return Pn.a})),n.d(e,"xd",(function(){return Bn.a})),n.d(e,"ub",(function(){return Wn.a})),n.d(e,"eb",(function(){return Un})),n.d(e,"gb",(function(){return Gn})),n.d(e,"T",(function(){return Hn})),n.d(e,"Cb",(function(){return qn})),n.d(e,"Ac",(function(){return I.b})),n.d(e,"a",(function(){return I.a})),n.d(e,"Bb",(function(){return Br})),n.d(e,"Mb",(function(){return Wr})),n.d(e,"Yb",(function(){return Vr})),n.d(e,"yd",(function(){return Lr})),n.d(e,"sb",(function(){return r})),n.d(e,"md",(function(){return Pr}));var r={};n.r(r),n.d(r,"conv2d",(function(){return $n})),n.d(r,"depthwiseConv2d",(function(){return nr})),n.d(r,"matMul",(function(){return rr}));var a=n(36),o=n(172),s=n(173),i=n(12),c=n(174),u=n(134),l=n(135),d=n(136),h=n(137),p=n(175),f=n(176),m=n(177),b=n(138),g=n(178),y=n(103),v=n(179),x=n(1),w=n(28),k=n(25),O=n(9),I=n(4),S=n(74),N=n(24),T=n(125);const j=Object(I.b)({basicLSTMCell_:function(t,e,n,r,a,o){const s=Object(x.a)(t,"forgetBias","basicLSTMCell"),c=Object(x.a)(e,"lstmKernel","basicLSTMCell"),u=Object(x.a)(n,"lstmBias","basicLSTMCell"),l=Object(x.a)(r,"data","basicLSTMCell"),d=Object(x.a)(a,"c","basicLSTMCell"),h=Object(x.a)(o,"h","basicLSTMCell"),p=Object(w.a)([l,h],1),f=Object(k.a)(p,c),m=Object(i.a)(f,u),b=m.shape[0],g=m.shape[1]/4,y=[b,g],v=Object(N.a)(m,[0,0],y),I=Object(N.a)(m,[0,g],y),j=Object(N.a)(m,[0,2*g],y),C=Object(N.a)(m,[0,3*g],y),E=Object(i.a)(Object(O.a)(Object(S.a)(v),Object(T.a)(I)),Object(O.a)(d,Object(S.a)(Object(i.a)(s,j))));return[E,Object(O.a)(Object(T.a)(E),Object(S.a)(C))]}});var C=n(80),E=n(73),A=n(7);const _=Object(I.b)({batchNorm2d_:function(t,e,n,r,a,o){const s=Object(x.a)(t,"x","batchNorm"),i=Object(x.a)(e,"mean","batchNorm"),c=Object(x.a)(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(x.a)(a,"scale","batchNorm")),null!=r&&(l=Object(x.a)(r,"offset","batchNorm")),A.b(2===s.rank,()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(s.rank,".")),A.b(2===i.rank||1===i.rank,()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,".")),A.b(2===c.rank||1===c.rank,()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&A.b(2===u.rank||1===u.rank,()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&A.b(2===l.rank||1===l.rank,()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(E.a)(s,i,c,l,u,o)}});const R=Object(I.b)({batchNorm3d_:function(t,e,n,r,a,o){const s=Object(x.a)(t,"x","batchNorm"),i=Object(x.a)(e,"mean","batchNorm"),c=Object(x.a)(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(x.a)(a,"scale","batchNorm")),null!=r&&(l=Object(x.a)(r,"offset","batchNorm")),A.b(3===s.rank,()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(s.rank,".")),A.b(3===i.rank||1===i.rank,()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,".")),A.b(3===c.rank||1===c.rank,()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&A.b(3===u.rank||1===u.rank,()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&A.b(3===l.rank||1===l.rank,()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(E.a)(s,i,c,l,u,o)}});const D=Object(I.b)({batchNorm4d_:function(t,e,n,r,a,o){const s=Object(x.a)(t,"x","batchNorm"),i=Object(x.a)(e,"mean","batchNorm"),c=Object(x.a)(n,"variance","batchNorm");let u,l;return null!=a&&(u=Object(x.a)(a,"scale","batchNorm")),null!=r&&(l=Object(x.a)(r,"offset","batchNorm")),A.b(4===s.rank,()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(s.rank,".")),A.b(4===i.rank||1===i.rank,()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,".")),A.b(4===c.rank||1===c.rank,()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,".")),null!=u&&A.b(4===u.rank||1===u.rank,()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(u.rank,".")),null!=l&&A.b(4===l.rank||1===l.rank,()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,".")),Object(E.a)(s,i,c,l,u,o)}});var F=n(180),M=n(92),z=n(40),L=n(11),P=n(181),B=n(182),W=n(58),V=n(50);const U=Object(I.b)({concat1d_:function(t){return Object(w.a)(t,0)}});const G=Object(I.b)({concat2d_:function(t,e){return Object(w.a)(t,e)}});const H=Object(I.b)({concat3d_:function(t,e){return Object(w.a)(t,e)}});const q=Object(I.b)({concat4d_:function(t,e){return Object(w.a)(t,e)}});var K=n(139),X=n(56),Y=n(140),Q=n(183),Z=n(165);const J=Object(I.b)({conv3dTranspose_:function(t,e,n,r,a){const o=Object(x.a)(t,"x","conv3dTranspose"),s=Object(x.a)(e,"filter","conv3dTranspose");return Object(Z.a)(n,o,s,r,a)}});var $=n(104),tt=n(141),et=n(105),nt=n(184),rt=n(142),at=n(67),ot=n(5),st=n(3);const it=Object(I.b)({diag_:function(t){const e={x:Object(x.a)(t,"x","diag")};return ot.a.runKernel(st.R,e)}});var ct=n(143),ut=n(14),lt=n(144),dt=n(145),ht=n(106),pt=n(68),ft=n(185),mt=n(35),bt=n(53),gt=n(186),yt=n(8),vt=n(75);const xt=Object(I.b)({eye_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==e&&(e=t);const a=Object(z.a)([t,e],r),o=t<=e?t:e;for(let i=0;i<o;++i)a.set(1,i,i);const s=Object(yt.a)(a.toTensor(),[t,e]);if(null==n)return s;if(1===n.length)return Object(vt.a)(Object(bt.a)(s,0),[n[0],1,1]);if(2===n.length)return Object(vt.a)(Object(bt.a)(Object(bt.a)(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(vt.a)(Object(bt.a)(Object(bt.a)(Object(bt.a)(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var wt=n(102),kt=n(107),Ot=n(101),It=n(81),St=n(39),Nt=n(46),Tt=n(108),jt=n(187),Ct=n(188),Et=n(189),At=n(109),_t=n(82),Rt=n(47),Dt=n(190),Ft=n(146),Mt=n(62),zt=n(147),Lt=n(191),Pt=n(192),Bt=n(110),Wt=n(51),Vt=n(83),Ut=n(111),Gt=n(149),Ht=n(59),qt=n(112),Kt=n(193),Xt=n(194),Yt=n(66),Qt=n(78),Zt=n(93),Jt=n(84),$t=n(150),te=n(113),ee=n(33),ne=n(23),re=n(13);const ae=Object(I.b)({moments_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t=Object(x.a)(t,"x","moments");const r=Object(A.I)(e,t.shape),a=Object(Qt.a)(t,r,n);let o=a.shape;n||(o=Object(ee.e)(a.shape,r));const s=Object(ne.a)(Object(re.a)(Object(L.a)(t,"float32"),Object(yt.a)(a,o))),i=Object(Qt.a)(s,r,n);return{mean:a,variance:i}}});const oe=Object(I.b)({multiRNNCell_:function(t,e,n,r){const a=Object(x.a)(e,"data","multiRNNCell"),o=Object(x.b)(n,"c","multiRNNCell"),s=Object(x.b)(r,"h","multiRNNCell");let i=a;const c=[];for(let d=0;d<t.length;d++){const e=t[d](i,o[d],s[d]);c.push(e[0]),c.push(e[1]),i=e[1]}const u=[],l=[];for(let d=0;d<c.length;d+=2)u.push(c[d]),l.push(c[d+1]);return[u,l]}});var se=n(195),ie=n(27),ce=n(85),ue=n(94),le=n(69),de=n(196);const he=Object(I.b)({outerProduct_:function(t,e){const n=Object(x.a)(t,"v1","outerProduct"),r=Object(x.a)(e,"v2","outerProduct");A.b(1===n.rank&&1===r.rank,()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(r.rank,"."));const a=Object(yt.a)(n,[-1,1]),o=Object(yt.a)(r,[1,-1]);return Object(k.a)(a,o)}});var pe=n(48);const fe=Object(I.b)({pad1d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(A.b)(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Object(pe.a)(t,[e],n)}});const me=Object(I.b)({pad2d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(A.b)(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(pe.a)(t,e,n)}});const be=Object(I.b)({pad3d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(A.b)(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(pe.a)(t,e,n)}});const ge=Object(I.b)({pad4d_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return Object(A.b)(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Object(pe.a)(t,e,n)}});var ye=n(151),ve=n(41),xe=n(114),we=n(133),ke=n(152);const Oe=Object(I.b)({rand_:function(t,e,n){const r=Object(A.N)(t);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));a=new Uint8Array(r)}for(let o=0;o<r;o++)a[o]=e();return ot.a.makeTensor(a,t,n)}});var Ie=n(90);const Se=Object(I.b)({randomGamma_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",a=arguments.length>4?arguments[4]:void 0;if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type ".concat(r));const o=new Ie.b(e,n,r,a),s=Object(z.a)(t,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Ne=Object(I.b)({randomNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,a=arguments.length>4?arguments[4]:void 0;if(null!=r&&"bool"===r)throw new Error("Unsupported data type ".concat(r));const o=new Ie.a(e,n,r,!1,a),s=Object(z.a)(t,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});var Te=n(153),je=n(126),Ce=n(95),Ee=n(197),Ae=n(70),_e=n(115),Re=n(42);const De=Object(I.b)({reverse1d_:function(t){const e=Object(x.a)(t,"x","reverse");return A.b(1===e.rank,()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(e.rank,".")),Object(Re.a)(e,0)}});const Fe=Object(I.b)({reverse2d_:function(t,e){const n=Object(x.a)(t,"x","reverse");return A.b(2===n.rank,()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,".")),Object(Re.a)(n,e)}});const Me=Object(I.b)({reverse3d_:function(t,e){const n=Object(x.a)(t,"x","reverse");return A.b(3===n.rank,()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,".")),Object(Re.a)(n,e)}});const ze=Object(I.b)({reverse4d_:function(t,e){const n=Object(x.a)(t,"x","reverse");return A.b(4===n.rank,()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,".")),Object(Re.a)(n,e)}});var Le=n(198),Pe=n(154),Be=n(15),We=n(155),Ve=n(156),Ue=n(199),Ge=n(200),He=n(157),qe=n(158);const Ke=Object(I.b)({slice1d_:function(t,e,n){const r=Object(x.a)(t,"x","slice1d");return A.b(1===r.rank,()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(r.rank," tensor")),Object(N.a)(r,[e],[n])}});const Xe=Object(I.b)({slice2d_:function(t,e,n){const r=Object(x.a)(t,"x","slice2d");return A.b(2===r.rank,()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(r.rank," tensor")),Object(N.a)(r,e,n)}});const Ye=Object(I.b)({slice3d_:function(t,e,n){const r=Object(x.a)(t,"x","slice3d");return A.b(3===r.rank,()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(r.rank," tensor")),Object(N.a)(r,e,n)}});const Qe=Object(I.b)({slice4d_:function(t,e,n){const r=Object(x.a)(t,"x","slice4d");return A.b(4===r.rank,()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(r.rank," tensor")),Object(N.a)(r,e,n)}});var Ze=n(201),Je=n(148),$e=n(86),tn=n(116),en=n(96),nn=n(159),rn=n(117),an=n(63),on=n(32),sn=n(87),cn=n(88),un=n(52),ln=n(71),dn=n(202),hn=n(18),pn=n(203),fn=n(89),mn=n(64),bn=n(43);function gn(t,e,n){if(Object(A.d)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(x.c)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(bn.a)(t,e,r,n)}var yn=n(160);function vn(t,e,n){if(Object(A.d)(t),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(x.c)(t,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(t,e,r,n)}function xn(t,e,n){if(Object(A.d)(t),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(x.c)(t,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(t,e,r,n)}function wn(t,e,n){if(Object(A.d)(t),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(x.c)(t,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,Object(bn.a)(t,e,r,n)}var kn=n(161),On=n(204),In=n(162),Sn=n(118),Nn=n(72);function Tn(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0;return ot.a.makeVariable(t,e,n,r)}var jn=n(31),Cn=n(163),En=n(57),An=n(20);const _n=async function(t,e,n){const r=Object(x.a)(t,"tensor","boolMask"),a=Object(x.a)(e,"mask","boolMask","bool"),o=null==n?0:n,s=a.rank,i=r.shape;A.b(s>0,()=>"mask cannot be scalar"),A.e(i.slice(o,o+s),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let m=o;m<o+s;m++)c*=i[m];const u=i.slice(0,o).concat([c],i.slice(o+s)),l=Object(yt.a)(r,u),d=Object(yt.a)(a,[-1]),h=await Object(Cn.a)(d),p=Object(cn.a)(h,[1]),f=Object(It.a)(l,p,o);return t!==r&&r.dispose(),e!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var Rn=n(205),Dn=n(206),Fn=n(44),Mn=n(119),zn=n(21);const Ln=Object(I.b)({movingAverage_:function(t,e,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const o=Object(x.a)(t,"v","movingAverage"),s=Object(x.a)(e,"x","movingAverage"),c=Object(x.a)(n,"decay","movingAverage");Object(zn.assertTypesMatch)(o,s),A.b(A.a(o.shape,s.shape),()=>"Shape mismatch in v and x");const u=Object(Be.a)(1),l=Object(re.a)(u,c);let d=Object(O.a)(Object(re.a)(s,o),l);if(a){A.b(null!=r,()=>"When using zeroDebias: true, step is required.");const t=Object(x.a)(r,"step","movingAverage");d=Object(ut.a)(d,Object(re.a)(u,Object(ve.a)(c,t)))}return Object(i.a)(o,d)}});var Pn=n(207),Bn=n(210),Wn=n(208),Vn=n(6);const Un=Object(I.b)({dropout_:function(t,e,n,r){const a=Object(x.a)(t,"x","dropout");if(A.b("float32"===a.dtype,()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(a.dtype," tensor instead.")),A.b(e>=0&&e<1,()=>"rate must be a float in the range [0, 1), but got ".concat(e,".")),0===e)return t instanceof Vn.a?a.clone():a;const o=function(t,e){if(null==e)return t.shape.slice();if(A.a(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(a,n),s=1-e,c=Object(ut.a)(Object(kt.a)(Object(i.a)(Object(Te.a)(o,0,1,"float32",r),s)),s);return Object(O.a)(a,c)}});function Gn(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Hn(t,e,n){const r=1-t%2,a=new Float32Array(t);for(let o=0;o<t;++o){const s=2*Math.PI*o/(t+r-1);a[o]=e-n*Math.cos(s)}return Object(mn.a)(a,"float32")}const qn=async function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const r=Object(x.a)(t,"predictions","inTopK"),a=Object(x.a)(e,"targets","inTopK");Object(A.b)(r.rank>1,()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(r.rank)),Object(A.b)(r.rank-1===a.rank,()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(r.rank," and targets rank ").concat(a.rank)),Object(A.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];Object(A.b)(n>0&&n<=o,()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(o,"), but got ").concat(n));const s=await r.data(),i=await a.data(),[c,u]=[s.length/o,o],l=Object(A.o)("bool",c);for(let d=0;d<c;d++){const t=d*u,e=s.subarray(t,t+u),r=[];for(let n=0;n<e.length;n++)r.push({value:e[n],index:n});r.sort((t,e)=>e.value-t.value),l[d]=0;for(let a=0;a<n;a++)if(r[a].index===i[d]){l[d]=1;break}}return t!==r&&r.dispose(),e!==a&&a.dispose(),Object(fn.a)(l,a.shape,"bool")};var Kn=n(29),Xn=n(16),Yn=n(122),Qn=n(120),Zn=n(26),Jn=n(37);const $n=Object(I.b)({fusedConv2d_:function(t){let{x:e,filter:n,strides:r,pad:a,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:c,bias:u,activation:l="linear",preluActivationWeights:d,leakyreluAlpha:h}=t;if(l=l||"linear",!1===Object(Jn.d)(ot.a.state.gradientDepth,l)){let t=Object(X.a)(e,n,r,a,o,s,c);return null!=u&&(t=Object(i.a)(t,u)),Object(Jn.a)(t,l,d,h)}const p=Object(x.a)(e,"x","conv2d"),f=Object(x.a)(n,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(yt.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A.b(4===m.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(m.rank,".")),A.b(4===f.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")),null!=c&&A.b(A.v(a),()=>"Error in fused conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(c," but got pad ").concat(a,".")),A.b(m.shape[3]===f.shape[2],()=>"Error in conv2d: depth of input (".concat(m.shape[3],") must match ")+"input depth for filter ".concat(f.shape[2],".")),A.b(Zn.h(r,s),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(r," and dilations '").concat(s,"'")),A.b("NHWC"===o,()=>"Error in conv2d: got dataFormat of ".concat(o," but only NHWC is currently supported."));const g=Zn.a(m.shape,f.shape,r,s,a,c);let y,v;null!=u&&(y=Object(x.a)(u,"bias","fused conv2d"),[y]=Object(zn.makeTypesMatch)(y,p),Xn.a(g.outShape,y.shape)),null!=d&&(v=Object(x.a)(d,"prelu weights","fused conv2d"));const w=(t,e)=>{const[n,o,i,c]=e,u=Object(Jn.c)(t,i,l);A.b(Zn.i(s),()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"));const d=[Object(Qn.a)(o.shape,u,n,r,a),Object(Yn.a)(o,u,n.shape,r,a)];if(null!=c){const t=Object(Jn.b)(c,u);d.push(t)}return d},k={x:m,filter:f,bias:y,preluActivationWeights:v},O={strides:r,pad:a,dataFormat:o,dilations:s,dimRoundingMode:c,activation:l,leakyreluAlpha:h};if(null==u){return Object(Kn.a)((t,e,n)=>{let r=ot.a.runKernel(st.jb,k,O);return n([e,t,r]),b&&(r=Object(yt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(m,f)}return Object(Kn.a)((t,e,n,r)=>{let a=ot.a.runKernel(st.jb,k,O);return r([e,t,a,n]),b&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}})(m,f,y)}});var tr=n(169),er=n(168);const nr=Object(I.b)({fusedDepthwiseConv2d_:function(t){let{x:e,filter:n,strides:r,pad:a,dataFormat:o="NHWC",dilations:s=[1,1],dimRoundingMode:c,bias:u,activation:l="linear",preluActivationWeights:d,leakyreluAlpha:h}=t;if(!1===Object(Jn.d)(ot.a.state.gradientDepth,l)){let t=Object(at.a)(e,n,r,a,o,s,c);return null!=u&&(t=Object(i.a)(t,u)),Object(Jn.a)(t,l,d,h)}const p=Object(x.a)(e,"x","depthwiseConv2d"),f=Object(x.a)(n,"filter","depthwiseConv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(yt.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),A.b(4===m.rank,()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),A.b(4===f.rank,()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(f.rank,".")),A.b(m.shape[3]===f.shape[2],()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(m.shape[3],") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],".")),null==s&&(s=[1,1]),A.b(Zn.h(r,s),()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(r," and dilations '").concat(s,"'")),null!=c&&A.b(A.v(a),()=>"Error in fused depthwiseConv2d: pad must be an integer when "+"using dimRoundingMode ".concat(c," but got pad ").concat(a,"."));const g=Zn.a(m.shape,f.shape,r,s,a,c,!0);let y,v;null!=u&&(y=Object(x.a)(u,"bias","fused conv2d"),[y]=Object(zn.makeTypesMatch)(y,p),Xn.a(g.outShape,y.shape)),null!=d&&(v=Object(x.a)(d,"prelu weights","fused depthwiseConv2d"));const w=(t,e)=>{A.b(Zn.i(s),()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(s,"'"));const[n,o,i,u]=e,d=Object(Jn.c)(t,i,l),h=Object(er.a)(o.shape,d,n,r,a,s,c),p=Object(tr.a)(o,d,n.shape,r,a,s,c);if(null!=u){return[h,p,Object(Jn.b)(y,d)]}return[h,p]},k={x:m,filter:f,bias:y,preluActivationWeights:v},O={strides:r,pad:a,dataFormat:o,dilations:s,dimRoundingMode:c,activation:l,leakyreluAlpha:h};if(null==u){return Object(Kn.a)((t,e,n)=>{let r=ot.a.runKernel(st.kb,k,O);return n([e,t,r]),b&&(r=Object(yt.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:w}})(m,f)}return Object(Kn.a)((t,e,n,r)=>{let a=ot.a.runKernel(st.kb,k,O);return r([e,t,a,n]),b&&(a=Object(yt.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:w}})(m,f,y)}});const rr=Object(I.b)({fusedMatMul_:function(t){let{a:e,b:n,transposeA:r=!1,transposeB:a=!1,bias:o,activation:s="linear",preluActivationWeights:c,leakyreluAlpha:u}=t;if(!1===Object(Jn.d)(ot.a.state.gradientDepth,s)){let t=Object(k.a)(e,n,r,a);return null!=o&&(t=Object(i.a)(t,o)),Object(Jn.a)(t,s,c,u)}let l=Object(x.a)(e,"a","fused matMul"),d=Object(x.a)(n,"b","fused matMul");[l,d]=Object(zn.makeTypesMatch)(l,d);const h=r?l.shape[l.rank-2]:l.shape[l.rank-1],p=a?d.shape[d.rank-1]:d.shape[d.rank-2],f=r?l.shape[l.rank-1]:l.shape[l.rank-2],m=a?d.shape[d.rank-2]:d.shape[d.rank-1],b=l.shape.slice(0,-2),g=d.shape.slice(0,-2),y=A.N(b),v=A.N(g);A.b(l.rank>=2&&d.rank>=2&&l.rank===d.rank,()=>"Error in fused matMul: inputs must have the same rank of at "+"least 2, got ranks ".concat(l.rank," and ").concat(d.rank,".")),A.b(A.a(b,g),()=>"Error in fused matMul: outer dimensions (".concat(b,") and (")+"".concat(g,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(d.shape," must match.")),A.b(h===p,()=>"Error in fused matMul: inner shapes (".concat(h,") and (")+"".concat(p,") of Tensors with shapes ").concat(l.shape," and ")+"".concat(d.shape," and transposeA=").concat(r)+" and transposeB=".concat(a," must match."));const w=l.shape.slice(0,-2).concat([f,m]),O=r?Object(yt.a)(l,[y,h,f]):Object(yt.a)(l,[y,f,h]),I=a?Object(yt.a)(d,[v,m,p]):Object(yt.a)(d,[v,p,m]);let S,N;null!=o&&(S=Object(x.a)(o,"bias","fused matMul"),[S]=Object(zn.makeTypesMatch)(S,l),Xn.a(w,S.shape)),null!=c&&(N=Object(x.a)(c,"prelu weights","fused matMul"));const T=(t,e)=>{const[n,i,c,u]=e,l=Object(Jn.c)(Object(yt.a)(t,c.shape),c,s);let d,h;if(r||a?!r&&a?(d=Object(k.a)(l,i,!1,!1),h=Object(k.a)(l,n,!0,!1)):r&&!a?(d=Object(k.a)(i,l,!1,!0),h=Object(k.a)(n,l,!1,!1)):(d=Object(k.a)(i,l,!0,!0),h=Object(k.a)(l,n,!0,!0)):(d=Object(k.a)(l,i,!1,!0),h=Object(k.a)(n,l,!0,!1)),null!=o){return[d,h,Object(Jn.b)(u,l)]}return[d,h]},j={a:O,b:I,bias:S,preluActivationWeights:N},C={transposeA:r,transposeB:a,activation:s,leakyreluAlpha:u};if(null==o){return Object(Kn.a)((t,e,n)=>{const r=ot.a.runKernel(st.ad,j,C);return n([t,e,r]),{value:Object(yt.a)(r,w),gradFunc:T}})(O,I)}return Object(Kn.a)((t,e,n,r)=>{const a=ot.a.runKernel(st.ad,j,C);return r([t,e,a,n]),{value:Object(yt.a)(a,w),gradFunc:T}})(O,I,S)}});const ar=Object(I.b)({hammingWindow_:function(t){return Hn(t,.54,.46)}});const or=Object(I.b)({hannWindow_:function(t){return Hn(t,.5,.5)}});const sr=Object(I.b)({frame_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=0;const s=[];for(;o+e<=t.size;)s.push(Object(N.a)(t,o,e)),o+=n;if(r)for(;o<t.size;){const r=o+e-t.size,i=Object(w.a)([Object(N.a)(t,o,e-r),Object(wt.a)([r],a)]);s.push(i),o+=n}return 0===s.length?gn([],[0,e]):Object(yt.a)(Object(w.a)(s),[s.length,e])}});const ir=Object(I.b)({stft_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:or;null==r&&(r=Gn(e));const o=sr(t,e,n),s=Object(O.a)(o,a(e)),i=[];for(let c=0;c<o.shape[0];c++)i.push(Object(rn.a)(Object(N.a)(s,[c,0],[1,e]),r));return Object(w.a)(i)}});const cr=Object(I.b)({cropAndResize_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=Object(x.a)(t,"image","cropAndResize"),i=Object(x.a)(e,"boxes","cropAndResize","float32"),c=Object(x.a)(n,"boxInd","cropAndResize","int32"),u=i.shape[0];A.b(4===s.rank,()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(s.rank,".")),A.b(2===i.rank&&4===i.shape[1],()=>"Error in cropAndResize: boxes must be have size [".concat(u,",4] ")+"but had shape ".concat(i.shape,".")),A.b(1===c.rank&&c.shape[0]===u,()=>"Error in cropAndResize: boxInd must be have size [".concat(u,"] ")+"but had shape ".concat(i.shape,".")),A.b(2===r.length,()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(r.length,".")),A.b(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was ".concat(r)),A.b("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was ".concat(a));const l={image:s,boxes:i,boxInd:c},d={method:a,extrapolationValue:o,cropSize:r},h=ot.a.runKernel(st.K,l,d);return h}});const ur=Object(I.b)({flipLeftRight_:function(t){const e=Object(x.a)(t,"image","flipLeftRight","float32");A.b(4===e.rank,()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(e.rank,"."));const n={image:e};return ot.a.runKernel(st.eb,n,{})}});const lr=Object(I.b)({rotateWithOffset_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const a=Object(x.a)(t,"image","rotateWithOffset","float32");A.b(4===a.rank,()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(a.rank,"."));const o={image:a},s={radians:e,fillValue:n,center:r},i=ot.a.runKernel(st.uc,o,s);return i}});function dr(t,e,n,r,a,o){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=t.shape[0];return n=Math.min(n,s),A.b(0<=r&&r<=1,()=>"iouThreshold must be in [0, 1], but was '".concat(r,"'")),A.b(2===t.rank,()=>"boxes must be a 2D tensor, but was of rank '".concat(t.rank,"'")),A.b(4===t.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was ".concat(t.shape[1])),A.b(1===e.rank,()=>"scores must be a 1D tensor"),A.b(e.shape[0]===s,()=>"scores has incompatible shape with boxes. Expected ".concat(s,", ")+"but was ".concat(e.shape[0])),A.b(0<=o&&o<=1,()=>"softNmsSigma must be in [0, 1], but was '".concat(o,"'")),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o}}const hr=Object(I.b)({nonMaxSuppression_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=Object(x.a)(t,"boxes","nonMaxSuppression"),s=Object(x.a)(e,"scores","nonMaxSuppression"),i=dr(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const c={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return ot.a.runKernel(st.Wb,{boxes:o,scores:s},c)}});var pr=n(65);const fr=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const o=Object(x.a)(t,"boxes","nonMaxSuppressionAsync"),s=Object(x.a)(e,"scores","nonMaxSuppressionAsync"),i=dr(o,s,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const c=await Promise.all([o.data(),s.data()]),u=c[0],l=c[1],{selectedIndices:d}=Object(pr.a)(u,l,n,r,a);return o!==t&&o.dispose(),s!==e&&s.dispose(),Object(mn.a)(d,"int32")};const mr=Object(I.b)({nonMaxSuppressionWithScore_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=Object(x.a)(t,"boxes","nonMaxSuppression"),i=Object(x.a)(e,"scores","nonMaxSuppression"),c=dr(s,i,n,r,a,o);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,o=c.softNmsSigma;const u={boxes:s,scores:i},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:o},d=ot.a.runKernel(st.Yb,u,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const br=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const s=Object(x.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(x.a)(e,"scores","nonMaxSuppressionAsync"),c=dr(s,i,n,r,a,o);n=c.maxOutputSize,r=c.iouThreshold,a=c.scoreThreshold,o=c.softNmsSigma;const u=await Promise.all([s.data(),i.data()]),l=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=Object(pr.c)(l,d,n,r,a,o);return s!==t&&s.dispose(),i!==e&&i.dispose(),{selectedIndices:Object(mn.a)(h,"int32"),selectedScores:Object(mn.a)(p)}};const gr=Object(I.b)({nonMaxSuppressionPadded_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=Object(x.a)(t,"boxes","nonMaxSuppression"),i=Object(x.a)(e,"scores","nonMaxSuppression"),c=dr(s,i,n,r,a,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,h={boxes:s,scores:i},p={maxOutputSize:u,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},f=ot.a.runKernel(st.Xb,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const yr=async function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,o=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const s=Object(x.a)(t,"boxes","nonMaxSuppressionAsync"),i=Object(x.a)(e,"scores","nonMaxSuppressionAsync"),c=dr(s,i,n,r,a,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[h,p]=await Promise.all([s.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Object(pr.b)(h,p,u,l,d,o);return s!==t&&s.dispose(),i!==e&&i.dispose(),{selectedIndices:Object(mn.a)(f,"int32"),validOutputs:Object(Be.a)(m,"int32")}};var vr=n(167),xr=n(166);const wr=Object(I.b)({bandPart_:function(t,e,n){Object(A.b)(e%1===0,()=>"bandPart(): numLower must be an integer, got ".concat(e,".")),Object(A.b)(n%1===0,()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."));const r=Object(x.a)(t,"a","bandPart");Object(A.b)(r.rank>=2,()=>"bandPart(): Rank must be at least 2, got ".concat(r.rank,"."));const a=r.shape,[o,s]=r.shape.slice(-2);if(!(e<=o))throw new Error("bandPart(): numLower (".concat(e,")")+" must not be greater than the number of rows (".concat(o,")."));if(!(n<=s))throw new Error("bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(s,")."));e<0&&(e=o),n<0&&(n=s);const i=Object(yt.a)(Object(je.a)(0,o,1,"int32"),[-1,1]),c=Object(je.a)(0,s,1,"int32"),u=Object(re.a)(i,c),l=Object(Wt.a)(Object(Rt.a)(u,Object(Be.a)(+e,"int32")),Object(Nt.a)(u,Object(Be.a)(-n,"int32"))),d=Object(En.a)([o,s],r.dtype);return Object(yt.a)(Object(un.a)(Object(Nn.a)(Object(yt.a)(r,[-1,o,s])).map(t=>Object(jn.a)(l,t,d))),a)}});const kr=Object(I.b)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,Object(A.b)(null!=t&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=t[0].shape[0];for(let e=1;e<t.length;++e)Object(A.b)(t[e].shape[0]===n,()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(t[e].shape[0]," vs. ").concat(n,")"))}else e=!0,t=Object(an.a)(t,t.shape[0],0).map(t=>Object(cn.a)(t,[0]));Object(A.b)(t.length<=t[0].shape[0],()=>"Gram-Schmidt: Number of vectors (".concat(t.length,") exceeds ")+"number of dimensions (".concat(t[0].shape[0],")."));const n=[],r=t;for(let a=0;a<t.length;++a)n.push(ot.a.tidy(()=>{let t=r[a];if(a>0)for(let e=0;e<a;++e){const r=Object(O.a)(Object(hn.a)(Object(O.a)(n[e],t)),n[e]);t=Object(re.a)(t,r)}return Object(ut.a)(t,Object(Mn.a)(t,"euclidean"))}));return e?Object(un.a)(n,0):n}});var Or=n(19);function Ir(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return ot.a.tidy(()=>{Object(A.b)(2===t.shape.length,()=>"qr2d() requires a 2D Tensor, but got a ".concat(t.shape.length,"D Tensor."));const n=t.shape[0],r=t.shape[1];let a=xt(n),o=Object(W.a)(t);const s=gn([[1]],[1,1]);let i=Object(W.a)(s);const c=n>=r?r:n;for(let t=0;t<c;++t){const e=o,c=i,u=a;[i,o,a]=ot.a.tidy(()=>{const e=Object(N.a)(o,[t,t],[n-t,1]),c=Object(Mn.a)(e),u=Object(N.a)(o,[t,t],[1,1]),l=Object(jn.a)(Object(St.a)(u,0),gn([[-1]]),gn([[1]])),d=Object(re.a)(u,Object(O.a)(l,c)),h=Object(ut.a)(e,d);i=1===h.shape[0]?Object(W.a)(s):Object(w.a)([s,Object(N.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(ie.a)(Object(ut.a)(Object(k.a)(l,d),c)),f=Object(N.a)(o,[t,0],[n-t,r]),m=Object(O.a)(p,i),b=Object(Fn.a)(i);if(0===t)o=Object(re.a)(f,Object(k.a)(m,Object(k.a)(b,f)));else{const e=Object(re.a)(f,Object(k.a)(m,Object(k.a)(b,f)));o=Object(w.a)([Object(N.a)(o,[0,0],[t,r]),e],0)}const g=Object(Fn.a)(m),y=Object(N.a)(a,[0,t],[n,a.shape[1]-t]);if(0===t)a=Object(re.a)(y,Object(k.a)(Object(k.a)(y,i),g));else{const e=Object(re.a)(y,Object(k.a)(Object(k.a)(y,i),g));a=Object(w.a)([Object(N.a)(a,[0,0],[n,t]),e],1)}return[i,o,a]}),Object(Or.d)([e,c,u])}return!e&&n>r&&(a=Object(N.a)(a,[0,0],[n,r]),o=Object(N.a)(o,[0,0],[r,r])),[a,o]})}const Sr=Object(I.b)({qr_:function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(Object(A.b)(t.rank>=2,()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(t.rank)),2===t.rank)return Ir(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((t,e)=>t*e),r=Object(Nn.a)(Object(yt.a)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),a=[],o=[];r.forEach(t=>{const[n,r]=Ir(t,e);a.push(n),o.push(r)});return[Object(yt.a)(Object(un.a)(a,0),t.shape),Object(yt.a)(Object(un.a)(o,0),t.shape)]}}});var Nr=n(30);const Tr=Object(I.b)({computeWeightedLoss_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Nr.a.SUM_BY_NONZERO_WEIGHTS;const r=Object(x.a)(t,"losses","computeWeightedLoss");let a=null;null!=e&&(a=Object(x.a)(e,"weights","computeWeightedLoss"));const o=null==a?r:Object(O.a)(r,a);if(n===Nr.a.NONE)return o;if(n===Nr.a.SUM)return Object(hn.a)(o);if(n===Nr.a.MEAN){if(null==a)return Object(Qt.a)(o);{const t=r.size/a.size,e=Object(ut.a)(Object(hn.a)(o),Object(hn.a)(a));return t>1?Object(ut.a)(e,Object(Be.a)(t)):e}}if(n===Nr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ut.a)(Object(hn.a)(o),Object(Be.a)(r.size));{const t=Object(O.a)(a,Object(le.a)(r.shape)),e=Object(L.a)(Object(hn.a)(Object(ce.a)(t,Object(Be.a)(0))),"float32");return Object(ut.a)(Object(hn.a)(o),e)}}throw Error("Unknown reduction: ".concat(n))}});const jr=Object(I.b)({absoluteDifference_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Nr.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(x.a)(t,"labels","absoluteDifference"),s=Object(x.a)(e,"predictions","absoluteDifference");let i=null;null!=n&&(i=Object(x.a)(n,"weights","absoluteDifference")),Object(A.e)(o.shape,s.shape,"Error in absoluteDifference: ");const c=Object(a.a)(Object(re.a)(o,s));return Tr(c,i,r)}});const Cr=Object(I.b)({cosineDistance_:function(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Nr.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(x.a)(t,"labels","cosineDistance"),s=Object(x.a)(e,"predictions","cosineDistance");let i=null;null!=r&&(i=Object(x.a)(r,"weights","cosineDistance")),Object(A.e)(o.shape,s.shape,"Error in cosineDistance: ");const c=Object(Be.a)(1),u=Object(re.a)(c,Object(hn.a)(Object(O.a)(o,s),n,!0));return Tr(u,i,a)}});const Er=Object(I.b)({hingeLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Nr.a.SUM_BY_NONZERO_WEIGHTS,a=Object(x.a)(t,"labels","hingeLoss");const o=Object(x.a)(e,"predictions","hingeLoss");let s=null;null!=n&&(s=Object(x.a)(n,"weights","hingeLoss")),Object(A.e)(a.shape,o.shape,"Error in hingeLoss: ");const i=Object(Be.a)(1);a=Object(re.a)(Object(O.a)(Object(Be.a)(2),a),i);const c=Object(Ae.a)(Object(re.a)(i,Object(O.a)(a,o)));return Tr(c,s,r)}});const Ar=Object(I.b)({huberLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Nr.a.SUM_BY_NONZERO_WEIGHTS;const s=Object(x.a)(t,"labels","huberLoss"),c=Object(x.a)(e,"predictions","huberLoss");let u=null;null!=n&&(u=Object(x.a)(n,"weights","huberLoss")),Object(A.e)(s.shape,c.shape,"Error in huberLoss: ");const l=Object(Be.a)(r),d=Object(a.a)(Object(re.a)(c,s)),h=Object(Jt.a)(d,l),p=Object(re.a)(d,h),f=Object(i.a)(Object(O.a)(Object(Be.a)(.5),Object(ne.a)(h)),Object(O.a)(l,p));return Tr(f,u,o)}});const _r=Object(I.b)({logLoss_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Nr.a.SUM_BY_NONZERO_WEIGHTS;const o=Object(x.a)(t,"labels","logLoss"),s=Object(x.a)(e,"predictions","logLoss");let c=null;null!=n&&(c=Object(x.a)(n,"weights","logLoss")),Object(A.e)(o.shape,s.shape,"Error in logLoss: ");const u=Object(Be.a)(1),l=Object(Be.a)(r),d=Object(ie.a)(Object(O.a)(o,Object(Mt.a)(Object(i.a)(s,l)))),h=Object(O.a)(Object(re.a)(u,o),Object(Mt.a)(Object(i.a)(Object(re.a)(u,s),l))),p=Object(re.a)(d,h);return Tr(p,c,a)}});const Rr=Object(I.b)({meanSquaredError_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Nr.a.SUM_BY_NONZERO_WEIGHTS;const a=Object(x.a)(t,"labels","meanSquaredError"),o=Object(x.a)(e,"predictions","meanSquaredError");let s=null;null!=n&&(s=Object(x.a)(n,"weights","meanSquaredError")),Object(A.e)(a.shape,o.shape,"Error in meanSquaredError: ");const i=Object(sn.a)(a,o);return Tr(i,s,r)}});function Dr(t,e){const n=Object(x.a)(t,"labels","sigmoidCrossEntropyWithLogits"),r=Object(x.a)(e,"logits","sigmoidCrossEntropyWithLogits");Object(A.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=Object(Ae.a)(r),s=Object(O.a)(r,n),c=Object(zt.a)(Object(mt.a)(Object(ie.a)(Object(a.a)(r))));return Object(i.a)(Object(re.a)(o,s),c)}const Fr=Object(I.b)({sigmoidCrossEntropy_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Nr.a.SUM_BY_NONZERO_WEIGHTS,o=Object(x.a)(t,"multiClassLabels","sigmoidCrossEntropy");const s=Object(x.a)(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(x.a)(n,"weights","sigmoidCrossEntropy")),Object(A.e)(o.shape,s.shape,"Error in sigmoidCrossEntropy: "),r>0){const t=Object(Be.a)(r),e=Object(Be.a)(1),n=Object(Be.a)(.5);o=Object(i.a)(Object(O.a)(o,Object(re.a)(e,t)),Object(O.a)(n,t))}const u=Dr(o,s);return Tr(u,c,a)}});function Mr(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(e.rank," ")+"and dim was ".concat(n));const r=Object(Kn.a)((t,e,r)=>{const a=Object(Bt.a)(e,[n],!0),o=Object(re.a)(Object(L.a)(e,"float32"),a);r([t,o]);const s=Object(ie.a)(Object(O.a)(o,t));return{value:Object(hn.a)(s,[n]),gradFunc:(t,e)=>{const[r,a]=e,o=Object(ee.e)(t.shape,[n]);return[Object(O.a)(Object(yt.a)(t,o),Object(re.a)(Object(L.a)(r,"float32"),Object(mt.a)(a))),Object(O.a)(Object(yt.a)(t,o),Object(re.a)(Object(mt.a)(a),Object(L.a)(r,"float32")))]}}});return r(t,e)}const zr=Object(I.b)({softmaxCrossEntropy_:function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Nr.a.SUM_BY_NONZERO_WEIGHTS,o=Object(x.a)(t,"onehotLabels","softmaxCrossEntropy");const s=Object(x.a)(e,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=Object(x.a)(n,"weights","softmaxCrossEntropy")),Object(A.e)(o.shape,s.shape,"Error in softmaxCrossEntropy: "),r>0){const t=Object(Be.a)(r),e=Object(Be.a)(1),n=Object(Be.a)(o.shape[1]);o=Object(i.a)(Object(O.a)(o,Object(re.a)(e,t)),Object(ut.a)(t,n))}const u=Mr(o,s);return Tr(u,c,a)}}),Lr={fft:tn.a,ifft:en.a,rfft:rn.a,irfft:nn.a},Pr={hammingWindow:ar,hannWindow:or,frame:sr,stft:ir},Br={flipLeftRight:ur,resizeNearestNeighbor:xr.a,resizeBilinear:vr.a,rotateWithOffset:lr,cropAndResize:cr,nonMaxSuppression:hr,nonMaxSuppressionAsync:fr,nonMaxSuppressionWithScore:mr,nonMaxSuppressionWithScoreAsync:br,nonMaxSuppressionPadded:gr,nonMaxSuppressionPaddedAsync:yr},Wr={bandPart:wr,gramSchmidt:kr,qr:Sr},Vr={absoluteDifference:jr,computeWeightedLoss:Tr,cosineDistance:Cr,hingeLoss:Er,huberLoss:Ar,logLoss:_r,meanSquaredError:Rr,sigmoidCrossEntropy:Fr,softmaxCrossEntropy:zr}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(11),i=n(4);const c=Object(i.b)({sum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","sum");"bool"===i.dtype&&(i=Object(s.a)(i,"int32"));const c={x:i},u={axis:e,keepDims:n};return r.a.runKernel(a.Qc,c,u)}})},function(t,e,n){"use strict";n.d(e,"g",(function(){return i})),n.d(e,"f",(function(){return c})),n.d(e,"c",(function(){return u})),n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"m",(function(){return p})),n.d(e,"n",(function(){return f})),n.d(e,"t",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"l",(function(){return g})),n.d(e,"u",(function(){return y})),n.d(e,"r",(function(){return v})),n.d(e,"o",(function(){return x})),n.d(e,"k",(function(){return w})),n.d(e,"q",(function(){return k})),n.d(e,"i",(function(){return O})),n.d(e,"j",(function(){return I})),n.d(e,"p",(function(){return S})),n.d(e,"a",(function(){return N})),n.d(e,"s",(function(){return T}));var r=n(5),a=n(22),o=n(6),s=n(21);function i(){Object(a.c)().set("PROD",!0)}function c(){Object(a.c)().set("DEBUG",!0)}function u(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(t){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function h(){return r.a}function p(){return r.a.memory()}function f(t){return r.a.profile(t)}function m(t,e){return r.a.tidy(t,e)}function b(t){Object(s.getTensorsInContainer)(t).forEach(t=>t.dispose())}function g(t){return r.a.keep(t)}function y(t){return r.a.time(t)}function v(t){return r.a.setBackend(t)}function x(){return r.a.ready()}function w(){return r.a.backendName}function k(t){r.a.removeBackend(t)}function O(t){return r.a.findBackend(t)}function I(t){return r.a.findBackendFactory(t)}function S(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return r.a.registerBackend(t,e,n)}function N(){return r.a.backend}function T(t,e){Object(a.c)().setPlatform(t,e)}Object(o.d)(l)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({zerosLike_:function(t){const e={x:Object(o.a)(t,"x","zerosLike")};return r.a.runKernel(a.Zc,e)}})},function(t,e,n){"use strict";n.r(e),n.d(e,"makeTypesMatch",(function(){return s})),n.d(e,"assertTypesMatch",(function(){return i})),n.d(e,"isTensorInList",(function(){return c})),n.d(e,"getTensorsInContainer",(function(){return u}));var r=n(6),a=n(79),o=n(7);function s(t,e){if(t.dtype===e.dtype)return[t,e];const n=Object(a.c)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function i(t,e){Object(o.b)(t.dtype===e.dtype,()=>"The dtypes of the first(".concat(t.dtype,") and")+" second(".concat(e.dtype,") input must match"))}function c(t,e){return e.some(e=>e.id===t.id)}function u(t){const e=[];return function t(e,n,a){if(null==e)return;if(e instanceof r.a)return void n.push(e);if(o=e,!Array.isArray(o)&&"object"!==typeof o)return;var o;const s=e;for(const r in s){const e=s[r];a.has(e)||(a.add(e),t(e,n,a))}}(t,e,new Set),e}},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"a",(function(){return i})),n.d(e,"d",(function(){return c}));var r=n(7);class a{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,".")),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn("Setting feature override from URL ".concat(t,": ").concat(e,".")),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Object(r.x)(e))throw new Error("Flag ".concat(t," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error("Cannot set flag ".concat(t," as it has not been registered."));this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error("Cannot evaluate flag '".concat(t,"': no evaluation function found."));return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),a=1;a<n;a++)r[a-1]=arguments[a];return o(e,r[0],r[1]),r.join("=")})),e}(this.global.location.search);if("tfjsflags"in t){t.tfjsflags.split(",").forEach(t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if("".concat(+e)===e)return+e;throw new Error("Could not parse value flag value ".concat(e," for flag ").concat(t,"."))}(e,n)})}}}function o(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function s(){return i}let i=null;function c(t){i=t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(5),a=n(1),o=n(4);const s=Object(o.b)({square_:function(t){const e=Object(a.a)(t,"x","square");return r.a.runKernel("Square",{x:e},{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({slice_:function(t,e,n){const s=Object(o.a)(t,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const i={x:s},c={begin:e,size:n};return r.a.runKernel(a.Ec,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({matMul_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=Object(s.a)(t,"a","matMul"),u=Object(s.a)(e,"b","matMul");[c,u]=Object(o.makeTypesMatch)(c,u);const l={a:c,b:u},d={transposeA:n,transposeB:i};return r.a.runKernel(a.s,l,d)}})},function(t,e,n){"use strict";function r(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",o=arguments.length>5?arguments[5]:void 0;const i=t[3],c=[...e,i],u=g(a);return s(t,c,n,o,r,null,null,u)}function a(t,e,n,r,a,o){let i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(e);let d;if("channelsLast"===i)d=[c,l,t[3],t[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));d=[c,l,t[1],t[1]]}return s(t,d,n,r,a,o,!1,i)}function o(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[c,u,d]=l(e);let h,p;if("NDHWC"===s)p="channelsLast",h=[c,u,d,t[4],t[4]];else{if("NCDHW"!==s)throw new Error("Unknown dataFormat ".concat(s));p="channelsFirst",h=[c,u,d,t[1],t[1]]}return i(t,h,n,r,a,!1,p,o)}function s(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,p,f]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,p,f]=t;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,f,l,p]=t}const[m,b,,g]=e,[y,v]=u(n),[x,w]=u(r),k=d(m,x),O=d(b,w),{padInfo:I,outHeight:S,outWidth:N}=h(a,l,p,y,v,k,O,o,i),T=s?g*f:g;let j;return"channelsFirst"===i?j=[c,T,S,N]:"channelsLast"===i&&(j=[c,S,N,T]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:p,inChannels:f,outHeight:S,outWidth:N,outChannels:T,padInfo:I,strideHeight:y,strideWidth:v,filterHeight:m,filterWidth:b,effectiveFilterHeight:k,effectiveFilterWidth:O,dilationHeight:x,dilationWidth:w,inShape:t,outShape:j,filterShape:e}}function i(t,e,n,r,a){let o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,u,h,f,m]=[-1,-1,-1,-1,-1];if("channelsLast"===s)[c,u,h,f,m]=t;else{if("channelsFirst"!==s)throw new Error("Unknown dataFormat ".concat(s));[c,m,u,h,f]=t}const[b,g,y,,v]=e,[x,w,k]=l(n),[O,I,S]=l(r),N=d(b,O),T=d(g,I),j=d(y,S),{padInfo:C,outDepth:E,outHeight:A,outWidth:_}=p(a,u,h,f,x,w,k,N,T,j,i),R=o?v*m:v;let D;return"channelsFirst"===s?D=[c,R,E,A,_]:"channelsLast"===s&&(D=[c,E,A,_,R]),{batchSize:c,dataFormat:s,inDepth:u,inHeight:h,inWidth:f,inChannels:m,outDepth:E,outHeight:A,outWidth:_,outChannels:R,padInfo:C,strideDepth:x,strideHeight:w,strideWidth:k,filterDepth:b,filterHeight:g,filterWidth:y,effectiveFilterDepth:N,effectiveFilterHeight:T,effectiveFilterWidth:j,dilationDepth:O,dilationHeight:I,dilationWidth:S,inShape:t,outShape:D,filterShape:e}}function c(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const a=d(e,r);return Math.floor((t[0]*(n-1)-n+a)/2)}function u(t){return"number"===typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function l(t){return"number"===typeof t?[t,t,t]:t}function d(t,e){return e<=1?t:t+(t-1)*(e-1)}function h(t,e,n,r,a,o,s,i,u){let l,d,h;if("number"===typeof t){l={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const a=function(t,e,n,r,a){null==r&&(r=c(t,e,n));const o=t[0],s=t[1];return[f((o-e+2*r)/n+1,a),f((s-e+2*r)/n+1,a)]}([e,n],o,r,t,i);d=a[0],h=a[1]}else if("same"===t){d=Math.ceil(e/r),h=Math.ceil(n/a);const t=Math.max(0,(d-1)*r+o-e),i=Math.max(0,(h-1)*a+s-n),c=Math.floor(t/2),u=t-c,p=Math.floor(i/2);l={top:c,bottom:u,left:p,right:i-p,type:"SAME"}}else if("valid"===t)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-o+1)/r),h=Math.ceil((n-s+1)/a);else{if("object"!==typeof t)throw Error("Unknown padding parameter: ".concat(t));{const c="channelsLast"===u?t[1][0]:t[2][0],p="channelsLast"===u?t[1][1]:t[2][1],m="channelsLast"===u?t[2][0]:t[3][0],b="channelsLast"===u?t[2][1]:t[3][1];l={top:c,bottom:p,left:m,right:b,type:0===c&&0===p&&0===m&&0===b?"VALID":"EXPLICIT"},d=f((e-o+c+p)/r+1,i),h=f((n-s+m+b)/a+1,i)}}return{padInfo:l,outHeight:d,outWidth:h}}function p(t,e,n,r,a,o,s,i,u,l,d){let h,p,m,b;if("number"===typeof t){h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const o=function(t,e,n,r,a,o){null==a&&(a=c(t,e,r));const s=t[0],i=t[1],u=t[2];return[f((s-e+2*a)/r+1,o),f((i-e+2*a)/r+1,o),f((u-e+2*a)/r+1,o),n]}([e,n,r,1],i,1,a,t,d);p=o[0],m=o[1],b=o[2]}else if("same"===t){p=Math.ceil(e/a),m=Math.ceil(n/o),b=Math.ceil(r/s);const t=(p-1)*a+i-e,c=(m-1)*o+u-n,d=(b-1)*s+l-r,f=Math.floor(t/2),g=t-f,y=Math.floor(c/2),v=c-y,x=Math.floor(d/2);h={top:y,bottom:v,left:x,right:d-x,front:f,back:g,type:"SAME"}}else{if("valid"!==t)throw Error("Unknown padding parameter: ".concat(t));h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((e-i+1)/a),m=Math.ceil((n-u+1)/o),b=Math.ceil((r-l+1)/s)}return{padInfo:h,outDepth:p,outHeight:m,outWidth:b}}function f(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error("Unknown roundingMode ".concat(e))}}function m(t){const[e,n,r]=u(t);return 1===e&&1===n&&1===r}function b(t,e){return m(t)||m(e)}function g(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(t))}n.d(e,"d",(function(){return r})),n.d(e,"e",(function(){return a})),n.d(e,"f",(function(){return o})),n.d(e,"a",(function(){return s})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return c})),n.d(e,"i",(function(){return m})),n.d(e,"h",(function(){return b})),n.d(e,"g",(function(){return g}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({neg_:function(t){const e={x:Object(o.a)(t,"x","neg")};return r.a.runKernel(a.Vb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(58),c=n(4);const u=Object(c.b)({concat_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;Object(s.b)(t.length>=1,()=>"Pass at least one tensor to concat");const n=Object(o.b)(t,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(t=>{if("complex64"!==t.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(t.dtype,". "))}),1===n.length)return Object(i.a)(n[0]);const c=n,u={axis:e};return r.a.runKernel(a.B,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h})),n.d(e,"f",(function(){return d})),n.d(e,"d",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"b",(function(){return i})),n.d(e,"c",(function(){return c}));var r=n(5),a=n(6),o=n(1),s=n(7);function i(t){return s.b(s.u(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const a=Object(o.a)(e,"x","tf.grad","string_or_numeric"),i=null!=n?Object(o.a)(n,"dy","tf.grad"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(a),[a],i);return null!=i&&s.e(e.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]})}}function c(t){return s.b(s.u(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{s.b(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const a=Object(o.b)(e,"args","tf.grads","string_or_numeric"),i=null!=n?Object(o.a)(n,"dy","tf.grads"):null;return r.a.tidy(()=>{const{value:e,grads:n}=r.a.gradients(()=>t(...a),a,i);return null!=i&&s.e(e.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n})}}function u(t){return s.b(s.u(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{s.b(e instanceof a.a,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),s.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:o,value:i}=r.a.gradients(()=>t(e),[e],n);return p(o),{grad:o[0],value:i}}}function l(t){return s.b(s.u(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{s.b(Array.isArray(e)&&e.every(t=>t instanceof a.a),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),s.b(null==n||n instanceof a.a,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const o=r.a.gradients(()=>t(...e),e,n);return null!=n&&s.e(o.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(o.grads),o}}function d(t,e){s.b(s.u(t),()=>"The f passed in variableGrads(f) must be a function"),s.b(null==e||Array.isArray(e)&&e.every(t=>t instanceof a.c),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=e;if(!n){e=[];for(const t in r.a.registeredVariables)e.push(r.a.registeredVariables[t])}const o=n?e.filter(t=>!t.trainable):null,i=e.length;e=e.filter(t=>t.trainable),s.b(e.length>0,()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable.");const{value:c,grads:u}=r.a.gradients(t,e,null,!0);s.b(u.some(t=>null!=t),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),s.b(0===c.rank,()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor"));const l={};return e.forEach((t,e)=>{null!=u[e]&&(l[t.name]=u[e])}),null!=o&&o.forEach(t=>l[t.name]=null),{value:c,grads:l}}function h(t){return r.a.customGrad(t)}function p(t){if(t.filter(t=>null==t).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},function(t,e,n){"use strict";var r;n.d(e,"a",(function(){return r})),function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(92),c=n(16),u=n(4);const l=Object(u.b)({where_:function(t,e,n){const u=Object(o.a)(e,"a","where"),l=Object(o.a)(n,"b","where"),d=Object(o.a)(t,"condition","where","bool"),h=Object(c.a)(u.shape,l.shape),p=Object(i.a)(u,h),f=Object(i.a)(l,h);1===d.rank&&Object(s.b)(d.shape[0]===u.shape[0],()=>"The first dimension of `a` must match the size of `condition`."),1!==d.rank&&Object(s.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:p,e:f};return r.a.runKernel(a.yc,m)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({sqrt_:function(t){const e={x:Object(o.a)(t,"x","sqrt")};return r.a.runKernel(a.Kc,e)}})},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return o})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return i})),n.d(e,"a",(function(){return c})),n.d(e,"f",(function(){return u})),n.d(e,"h",(function(){return l})),n.d(e,"g",(function(){return d}));var r=n(7);function a(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function o(t,e,n){const r=t.length+e.length,a=[];let o=0,s=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(t[o++]):a.push(e[s++]);return a}function s(t,e){const n=[],r=t.length;for(let a=0;a<r;a++)-1===e.indexOf(a)&&n.push(t[a]);return[n,e.map(e=>t[e])]}function i(t,e){return o(t,e.map(t=>1),e)}function c(t,e,n){r.b(a(e,n),()=>"".concat(t," supports only inner-most axes for now. ")+"Got axes ".concat(e," and rank-").concat(n," input."))}function u(t,e){if(a(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(t=>n.push(t)),n}function l(t){return t.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function d(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},function(t,e,n){"use strict";(function(t){n.d(e,"f",(function(){return i})),n.d(e,"e",(function(){return c})),n.d(e,"a",(function(){return h})),n.d(e,"b",(function(){return p})),n.d(e,"d",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b}));var r=n(50),a=n(89),o=n(7),s=n(129);async function i(t,e){const n=[],r=[],a=Array.isArray(t)?t.map(t=>t.name):Object.keys(t);for(let o=0;o<a.length;++o){const s=a[o],i=Array.isArray(t)?t[o].tensor:t[s];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(s,"': ").concat(i.dtype));const c={name:s,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const t=new Promise(async t=>{const e=await i.bytes(),n=e.reduce((t,e)=>t+e.length,0)+4*e.length,r=new Uint8Array(n);let a=0;for(let o=0;o<e.length;o++){const t=e[o],n=new Uint8Array(new Uint32Array([t.length]).buffer);r.set(n,a),a+=4,r.set(t,a),a+=t.length}t(r)});r.push(t)}else r.push(i.data());null!=e&&(c.group=e),n.push(c)}return{data:u(await Promise.all(r)),specs:n}}function c(t,e){const n={};let i,c=0;for(const u of e){const e=u.name,l=u.dtype,d=u.shape,h=Object(o.N)(d);let p;if("quantization"in u){const n=u.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error("Weight ".concat(u.name," with quantization ").concat(n.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==n.dtype)throw new Error("Weight ".concat(u.name," has unknown ")+"quantization dtype ".concat(n.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==l)throw new Error("Weight ".concat(u.name," is quantized with ").concat(n.dtype," ")+"which only supports weights of type float32 not ".concat(l,"."))}const r=s.a[n.dtype],a=t.slice(c,c+h*r),o="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(o.length);for(let t=0;t<o.length;t++){const e=o[t];p[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type float32.");void 0===i&&(i=g()),p=i(o)}else{if("int32"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error("Unsupported quantization type ".concat(n.dtype," ")+"for weight type int32.");p=new Int32Array(o.length);for(let t=0;t<o.length;t++){const e=o[t];p[t]=Math.round(e*n.scale+n.min)}}c+=h*r}else if("string"===l){const e=Object(o.N)(u.shape);p=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(c,c+4))[0];c+=4;const n=new Uint8Array(t.slice(c,c+e));p.push(n),c+=e}}else{const o=s.a[l],i=t.slice(c,c+h*o);if("float32"===l)p=new Float32Array(i);else if("int32"===l)p=new Int32Array(i);else if("bool"===l)p=new Uint8Array(i);else{if("complex64"!==l)throw new Error("Unsupported dtype in weight '".concat(e,"': ").concat(l));{p=new Float32Array(i);const t=new Float32Array(p.length/2),o=new Float32Array(p.length/2);for(let e=0;e<t.length;e++)t[e]=p[2*e],o[e]=p[2*e+1];const s=Object(a.a)(t,d,"float32"),c=Object(a.a)(o,d,"float32");n[e]=Object(r.a)(s,c),s.dispose(),c.dispose()}}c+=h*o}"complex64"!==l&&(n[e]=Object(a.a)(p,d,l))}return n}function u(t){if(null===t)throw new Error("Invalid input value: ".concat(JSON.stringify(t)));let e=0;const n=[];t.forEach(t=>{if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(t.constructor.name))});const r=new Uint8Array(e);let a=0;return n.forEach(t=>{r.set(new Uint8Array(t.buffer),a),a+=t.byteLength}),r.buffer}const l="undefined"!==typeof t&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function d(e){return l?t.byteLength(e):new Blob([e]).size}function h(e){if(l)return t.from(e).toString("base64");const n=new Uint8Array(e);let r="";for(let t=0,a=n.length;t<a;t++)r+=String.fromCharCode(n[t]);return btoa(r)}function p(e){if(l){const n=t.from(e,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(e),r=new Uint8Array(n.length);for(let t=0;t<n.length;++t)r.set([n.charCodeAt(t)],t);return r.buffer}function f(t){if(1===t.length)return t[0];let e=0;t.forEach(t=>{e+=t.byteLength});const n=new Uint8Array(e);let r=0;return t.forEach(t=>{n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function m(t){for(t=t.trim();t.endsWith("/");)t=t.slice(0,t.length-1);const e=t.split("/");return e[e.length-1]}function b(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:d(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:d(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function g(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0===(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const a=new ArrayBuffer(4*r.length),o=new Uint32Array(a);for(let s=0;s<r.length;s++){const a=r[s],i=t[n[a>>10]+(1023&a)]+e[a>>10];o[s]=i}return new Float32Array(a)}}}).call(this,n(170).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({exp_:function(t){const e={x:Object(o.a)(t,"x","exp")};return r.a.runKernel(a.Z,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({abs_:function(t){const e=Object(o.a)(t,"x","abs");if("complex64"===e.dtype){const t={x:e};return r.a.runKernel(a.A,t)}{const t={x:e};return r.a.runKernel(a.a,t)}}})},function(t,e,n){"use strict";n.d(e,"c",(function(){return p})),n.d(e,"b",(function(){return f})),n.d(e,"a",(function(){return m})),n.d(e,"d",(function(){return b}));var r=n(16),a=n(106),o=n(109),s=n(9),i=n(114),c=n(70),u=n(115),l=n(8),d=n(71),h=n(18);function p(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return Object(s.a)(t,Object(d.a)(e));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function f(t,e){let n=e;const a=r.c(t.shape,e.shape);return a.length>0&&(n=Object(h.a)(n,a)),Object(l.a)(n,t.shape)}function m(t,e,n,r){if("linear"===e)return t;if("relu"===e)return Object(c.a)(t);if("elu"===e)return Object(a.a)(t);if("relu6"===e)return Object(u.a)(t);if("prelu"===e)return Object(i.a)(t,n);if("leakyrelu"===e)return Object(o.a)(t,r);throw new Error("Unknown fused activation ".concat(e,"."))}const b=(t,e)=>!(t>0)||"linear"===e},function(t,e,n){"use strict";n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"d",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f})),n.d(e,"b",(function(){return S})),n.d(e,"c",(function(){return r}));var r,a=n(0),o=n(76),s=n(61);function i(t){return t instanceof a.Tensor?{value:t.clone(),recurse:!1}:Object(s.e)(t)?{value:null,recurse:!0}:{value:t,recurse:!1}}class c{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),n=this.get(e);return this.set(e,this.pop()),n}}class u extends c{constructor(){super(u.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),n=this.length();for(let r=0;r<n;r++)e[r]=this.get(this.wrap(this.begin+r));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(t){return new m(t)}function d(t){return new b(t)}function h(t,e){return new T(t,e)}function p(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.FAIL;return new j(t,e)}u.INITIAL_CAPACITY=32;class f{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let n=await t.next();for(;!n.done;)e.push(n.value),n=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),n=t(e.value);for(;!e.done&&n;)e=await this.next(),n=t(e.value)}handleErrors(t){return new O(this,t)}filter(t){return new w(this,t)}map(t){return new k(this,t)}mapAsync(t){return new I(this,t)}serialMapAsync(t){return new I(this,t).serial()}flatmap(t){return new N(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(t=>!0===t)}rowMajorBatch(t){return new x(this,t,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:s.f;return this.rowMajorBatch(t,e).map(t=>Object(s.d)(t,n))}concatenate(t,e){return new T(l([this,t]),e)}take(t){return t<0||null==t?this:new v(this,t)}skip(t){return t<0||null==t?this:new y(this,t)}prefetch(t){return new C(this,t)}shuffle(t,e){return new E(this,t,e)}serial(){return new g(this)}}class m extends f{constructor(t){super(),this.items=t,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:(e=t,Object(s.b)(e,i)),done:!1};var e}}class b extends f{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message="Error thrown while iterating through a dataset: ".concat(t.message),t}}}class g extends f{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;a.dispose(t.value)}return this.upstream.next()}}class v extends f{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class x extends f{constructor(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class w extends f{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;a.dispose(t.value)}}}class k extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const o of e)a.tensor_util.isTensorInList(o,r)||o.dispose();return{value:n,done:!1}}}class O extends f{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class I extends f{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=a.tensor_util.getTensorsInContainer(t.value),n=await this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);for(const o of e)a.tensor_util.isTensorInList(o,r)||o.dispose();return{value:n,done:!1}}}class S extends f{constructor(){super(),this.outputQueue=new u,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class N extends S{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=a.tensor_util.getTensorsInContainer(t.value),n=this.transform(t.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const o of e)a.tensor_util.isTensorInList(o,r)||o.dispose();return!0}}class T extends f{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const t=await this.moreIterators.next();if(t.done)return{value:null,done:!0};this.iterator=t.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}!function(t){t[t.FAIL=0]="FAIL",t[t.SHORTEST=1]="SHORTEST",t[t.LONGEST=2]="LONGEST"}(r||(r={}));class j extends f{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.FAIL;super(),this.iterators=t,this.mismatchMode=e,this.count=0,this.currentPromise=null}summary(){return"{".concat("TODO: fill in upstream of zip summaries","} -> Zip")}async nextState(t){await t;let e=0,n=0;const a=await Object(s.c)(this.iterators,(function(t){if(t instanceof f){return{value:t.next().then(t=>(e++,t.done&&n++,t.value)),recurse:!1}}return{value:null,recurse:!0}}));if(e===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error("Zipped streams should have the same length. "+"Mismatched at element ".concat(this.count,"."));case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class C extends f{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new c(e)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class E extends C{constructor(t,e,n){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=o.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(4);const u=Object(c.b)({greater_:function(t,e){let n=Object(s.a)(t,"a","greater"),c=Object(s.a)(e,"b","greater");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.nb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(6),a=n(7);function o(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return e=e||"float32",a.c(t),new r.b(t,e,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({pow_:function(t,e){let n=Object(s.a)(t,"base","pow"),i=Object(s.a)(e,"exp","pow");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.fc,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({reverse_:function(t,e){const n={x:Object(o.a)(t,"x","reverse")},s={dims:e};return r.a.runKernel(a.tc,n,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(5),a=n(7),o=n(10);function s(t,e,n,s){if(null==s&&(s=Object(a.r)(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(t)&&!Array.isArray(t)&&"number"!==typeof t&&"boolean"!==typeof t&&"string"!==typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Object(a.c)(e);const t=Object(a.N)(e),r=Object(a.N)(n);Object(a.b)(t===r,()=>"Based on the provided shape, [".concat(e,"], the tensor should have ")+"".concat(t," values but has ").concat(r));for(let o=0;o<n.length;++o){const t=n[o],r=o!==n.length-1||t!==Object(a.N)(e.slice(o));Object(a.b)(n[o]===e[o]||!r,()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(e,"). "))}}return Object(a.A)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?Object(o.toTypedArray)(t,s):Object(a.m)(t,[],!0),r.a.makeTensor(t,e,s)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({transpose_:function(t,e){const n=Object(o.a)(t,"x","transpose");if(null==e&&(e=n.shape.map((t,e)=>e).reverse()),s.b(n.rank===e.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of perm ".concat(e,".")),e.forEach(t=>{s.b(t>=0&&t<n.rank,()=>"All entries in 'perm' must be between 0 and ".concat(n.rank-1)+" but got ".concat(e))}),n.rank<=1)return n.clone();const i={x:n},c={perm:e};return r.a.runKernel(a.Vc,i,c)}})},,function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(4);const u=Object(c.b)({greaterEqual_:function(t,e){let n=Object(s.a)(t,"a","greaterEqual"),c=Object(s.a)(e,"b","greaterEqual");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.ob,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(4);const u=Object(c.b)({lessEqual_:function(t,e){let n=Object(s.a)(t,"a","lessEqual"),c=Object(s.a)(e,"b","lessEqual");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.zb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({pad_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=Object(o.a)(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:e,constantValue:n},c={x:s};return r.a.runKernel(a.dc,c,i)}})},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return I})),n.d(e,"i",(function(){return N})),n.d(e,"c",(function(){return T})),n.d(e,"f",(function(){return j})),n.d(e,"e",(function(){return A})),n.d(e,"d",(function(){return _})),n.d(e,"k",(function(){return D})),n.d(e,"g",(function(){return F})),n.d(e,"h",(function(){return M})),n.d(e,"j",(function(){return z})),n.d(e,"b",(function(){return L}));var r=n(0),a=n(77),o=n(91),s=n(2),i=n(212),c=n(213),u=n(214),l=n(215),d=n(216),h=n(217),p=n(218),f=n(219),m=n(220),b=n(221),g=n(222),y=n(223),v=n(224),x=n(225),w=n(226),k=n(227),O=n(228);class I{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[i,c,u,l,d,h,p,g,b,f,y,v,x,w,k,O,m].map(t=>t.json));this.opMappers=t.reduce((t,e)=>(t[e.tfOpName]=e,t),{})}transformGraph(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=t.node,r=[],a=[],o=[],i=n.reduce((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?a.push(t[e.name]):null!=e.input&&0!==e.input.length||o.push(t[e.name]),t),{});let c=[];const u=[];let l={},d={};null!=e&&(l=this.mapSignatureEntries(e.inputs),d=this.mapSignatureEntries(e.outputs));const h=Object.keys(i);h.forEach(t=>{const e=i[t];e.inputNames.forEach(t=>{const[n]=Object(s.b)(t);e.inputs.push(i[n]),i[n].children.push(e)})}),0===Object.keys(d).length?h.forEach(t=>{const e=i[t];0===e.children.length&&u.push(e)}):Object.keys(d).forEach(t=>{const[e]=Object(s.b)(t),n=i[e];null!=n&&(n.signatureKey=d[t],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(t=>{const[e]=Object(s.b)(t),n=i[e];n&&(n.signatureKey=l[t],c.push(n))}):c=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce((t,e)=>(t[e.signature.name]=this.mapFunction(e),t),{}));const f={nodes:i,inputs:c,outputs:u,weights:a,placeholders:r,signature:e,functions:p};return o.length>0&&(f.initNodes=o),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,n)=>(e[t[n].name]=n,e),{})}mapNode(t){const e=Object(o.a)(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(t=>t.startsWith("^")?t.substr(1):t),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce((e,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=N(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=N(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=M(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=j(t.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=F(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=T(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=T(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=L(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=L(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=D(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=z(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=A(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=_(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=E(t.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(t.op))}return e[n.name]={value:a,type:r},e},{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t),{}));const a=[],o=[];t.signature.inputArg.forEach(t=>{const[e]=Object(s.b)(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:C(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,a.push(n),r[e]=n});Object.keys(r).forEach(t=>{const e=r[t];e.inputNames.forEach(t=>{const[n]=Object(s.b)(t);e.inputs.push(r[n]),r[n].children.push(e)})});const i=t.ret;t.signature.outputArg.forEach(t=>{const[e,n]=Object(s.b)(i[t.name]),a=r[e];null!=a&&(a.defaultOutput=n,o.push(a))});const c=this.mapArgsToSignature(t);return{nodes:r,inputs:a,outputs:o,weights:n,placeholders:[],signature:c}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t),{}),outputs:t.signature.outputArg.reduce((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function S(e,n){const a=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const n=Object(r.env)().global;if("undefined"!==typeof n.atob)return n.atob(e);if("undefined"!==typeof t)return new t(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return n?a:a.toLowerCase()}function N(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=t[e];return null!=a?S(a.s,r):n}function T(t,e,n){const r=t[e];return r?r.b:n}function j(t,e,n){const r=t[e]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof a?a:parseInt(a,10)}function C(t){switch("string"===typeof t&&(t=a.a[t]),t){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function E(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function A(t,e,n){const r=t[e];return r&&r.type?C(r.type):n}function _(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(t=>C(t)):n}function R(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(t=>"number"===typeof t.size?t.size:parseInt(t.size,10)):[]}function D(t,e,n){const r=t[e];return r&&r.shape?R(r.shape):n}function F(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(t=>"number"===typeof t?t:parseInt(t,10)):n}function M(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a=t[e];return a&&a.list&&a.list.s?a.list.s.map(t=>S(t,r)):n}function z(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(t=>R(t)):n}function L(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n(170).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({complex_:function(t,e){const n=Object(o.a)(t,"real","complex"),i=Object(o.a)(e,"imag","complex");s.e(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return r.a.runKernel(a.z,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(16),i=n(4);const c=Object(i.b)({logicalAnd_:function(t,e){const n=Object(o.a)(t,"a","logicalAnd","bool"),i=Object(o.a)(e,"b","logicalAnd","bool");Object(s.a)(n.shape,i.shape);const c={a:n,b:i};return r.a.runKernel(a.Eb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({stack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.b)(t,"tensors","stack","string_or_numeric");s.b(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&s.b(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const i=n,c={axis:e};return r.a.runKernel(a.cc,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({expandDims_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","expandDims","string_or_numeric");s.b(e<=n.rank,()=>"Axis must be <= rank of the tensor");const i={input:n},c={dim:e};return r.a.runKernel(a.ab,i,c)}})},function(t,e,n){"use strict";t.exports=n(234)},function(t,e){t.exports=function(){throw new Error("define cannot be used indirect")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(26),c=n(4),u=n(8);const l=Object(c.b)({conv2d_:function(t,e,n,c){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=Object(o.a)(t,"x","conv2d"),f=Object(o.a)(e,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.b(4===m.rank,()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,".")),s.b(4===f.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")),null!=h&&s.b(s.v(c),()=>"Error in conv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(h," but got pad ").concat(c,"."));const g="NHWC"===l?m.shape[3]:m.shape[1];s.b(g===f.shape[2],()=>"Error in conv2d: depth of input (".concat(g,") must match ")+"input depth for filter ".concat(f.shape[2],".")),s.b(i.h(n,d),()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"));const y={x:m,filter:f},v={strides:n,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h},x=r.a.runKernel(a.C,y,v);return b?Object(u.a)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(5),a=n(7),o=n(50);function s(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=s(t,"float32"),n=s(t,"float32");return Object(o.a)(e,n)}const n=Object(a.F)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({clone_:function(t){const e={x:Object(o.a)(t,"x","clone","string_or_numeric")};return r.a.runKernel(a.qb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({max_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","max"),i={x:s},c={reductionIndices:e,keepDims:n};return r.a.runKernel(a.Hb,i,c)}})},function(t,e,n){"use strict";n.d(e,"c",(function(){return i})),n.d(e,"b",(function(){return c})),n.d(e,"d",(function(){return u})),n.d(e,"f",(function(){return l})),n.d(e,"e",(function(){return d})),n.d(e,"h",(function(){return h})),n.d(e,"g",(function(){return p})),n.d(e,"a",(function(){return f}));var r=n(22),a=n(128);const o=Object(a.a)("kernelRegistry",()=>new Map),s=Object(a.a)("gradRegistry",()=>new Map);function i(t,e){const n=m(t,e);return o.get(n)}function c(t){return s.get(t)}function u(t){const e=o.entries(),n=[];for(;;){const{done:r,value:a}=e.next();if(r)break;const[o,s]=a,[i]=o.split("_");i===t&&n.push(s)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=m(e,n);o.has(r)&&console.warn("The kernel '".concat(e,"' for backend ")+"'".concat(n,"' is already registered")),o.set(r,t)}function d(t){const{kernelName:e}=t;s.has(e)&&Object(r.c)().getBool("DEBUG")&&console.warn("Overriding the gradient for '".concat(e,"'")),s.set(e,t)}function h(t,e){const n=m(t,e);if(!o.has(n))throw new Error("The kernel '".concat(t,"' for backend ")+"'".concat(e,"' is not registered"));o.delete(n)}function p(t){if(!s.has(t))throw new Error("The gradient '".concat(t,"' for backend is not registered"));s.delete(t)}function f(t,e){u(t).forEach(t=>{l(Object.assign({},t,{backendName:e}))})}function m(t,e){return"".concat(e,"_").concat(t)}},function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"d",(function(){return s})),n.d(e,"f",(function(){return c})),n.d(e,"c",(function(){return u})),n.d(e,"e",(function(){return l})),n.d(e,"a",(function(){return d}));var r=n(0);function a(t,e){return o(t,e)}function o(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==t)return null;if(r.has(t))throw new Error("Circular references are not supported.");if(n.has(t))return n.get(t);const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(l(t)){const a=Array.isArray(t)?[]:{};r.add(t);for(const s in t){const i=o(t[s],e,n,r);a[s]=i}return r.delete(t),a}throw new Error("Can't recurse into non-iterable type: ".concat(t))}return n.set(t,a.value),a.value}function s(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c;return i(t,e)}function i(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const r=t[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=e(t);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(l(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const o in r){const r=i(t.map(t=>t[o]),e,n);a[o]=r}return n.delete(r),a}throw new Error("Can't recurse into non-iterable type: ".concat(r))}return a.value}function c(t){return null===t?null:l(t[0])?{value:null,recurse:!0}:{value:t,recurse:!1}}async function u(t,e){const n=new Map;o(t,e,n);for(const a of Array.from(n.keys())){const t=n.get(a);if(r.util.isPromise(t)){const e=await t;n.set(a,e)}}return o(t,e,n)}function l(t){return null!=t&&!ArrayBuffer.isView(t)&&(Array.isArray(t)||"object"===typeof t&&!(t instanceof r.Tensor))}function d(t){return null==t||(null===(e=t)||"object"!==typeof e&&"function"!==typeof e)||Array.isArray(t)||"object"===typeof t&&t instanceof r.Tensor||r.util.isTypedArray(t);var e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({log_:function(t){const e={x:Object(o.a)(t,"x","log")};return r.a.runKernel(a.Bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({split_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const s=Object(o.a)(t,"x","split"),i={x:s},c={numOrSizeSplits:e,axis:n};return r.a.runKernel(a.Jc,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(1),a=n(7),o=n(43);function s(t,e){Object(a.d)(t);const n=Object(r.c)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(o.a)(t,null,n,e)}},function(t,e,n){"use strict";function r(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,a=t.length,o=0,s=!1;for(;r<a;){o=r+(a-r>>>1);const i=n(e,t[o]);i>0?r=o+1:(a=o,s=!i)}return s?r:-r-1}(t,e,n||a)}(t,e,n),o=r<0?-(r+1):r;t.splice(o,0,e)}function a(t,e){return t>e?1:t<e?-1:0}function o(t,e,n,r,a){return c(t,e,n,r,a,0)}function s(t,e,n,r,a,o){return c(t,e,n,r,a,0,!1,o,!0)}function i(t,e,n,r,a,o){return c(t,e,n,r,a,o,!0)}function c(t,e,n,a,o,s){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let r=0;r<e.length;r++)e[r]>o&&p.push({score:e[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const f=s>0?-.5/s:0,m=[],b=[];for(;m.length<n&&p.length>0;){const e=p.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=e;if(n<o)break;let c=!1;for(let r=m.length-1;r>=i;--r){const n=u(t,s,m[r]);if(n>=a){c=!0;break}if(e.score=e.score*l(a,f,n),e.score<=o)break}e.suppressBeginIndex=m.length,c||(e.score===n?(m.push(s),b.push(e.score)):e.score>o&&r(p,e,d))}const g=m.length,y=n-g;c&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=b),h&&(v.validOutputs=g),v}function u(t,e,n){const r=t.subarray(4*e,4*e+4),a=t.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),c=Math.max(r[1],r[3]),u=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(i-o)*(c-s),f=(d-u)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(o,u),b=Math.max(s,l),g=Math.min(i,d),y=Math.min(c,h),v=Math.max(g-m,0)*Math.max(y-b,0);return v/(p+f-v)}function l(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function d(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}n.d(e,"a",(function(){return o})),n.d(e,"b",(function(){return s})),n.d(e,"c",(function(){return i}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(11),u=n(4);const l=Object(u.b)({maximum_:function(t,e){let n=Object(s.a)(t,"a","maximum"),u=Object(s.a)(e,"b","maximum");[n,u]=Object(o.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.a)(n.shape,u.shape);const l={a:n,b:u};return r.a.runKernel(a.Nb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4),c=n(8);const u=Object(i.b)({depthwiseConv2d_:function(t,e,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6?arguments[6]:void 0;const h=Object(o.a)(t,"x","depthwiseConv2d"),p=Object(o.a)(e,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.b(4===f.rank,()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(f.rank,".")),s.b(4===p.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(p.rank,".")),s.b(f.shape[3]===p.shape[2],()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(f.shape[3],") must match the inChannels dimension in ")+"filter ".concat(p.shape[2],".")),null!=d&&s.b(s.v(i),()=>"Error in depthwiseConv2d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(i,"."));const b={x:f,filter:p},g={strides:n,pad:i,dataFormat:u,dilations:l,dimRoundingMode:d},y=r.a.runKernel(a.O,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(4);const u=Object(c.b)({equal_:function(t,e){let n=Object(s.a)(t,"a","equal"),c=Object(s.a)(e,"b","equal");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.X,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(7),o=n(50),s=n(57);function i(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if("complex64"===e){const e=i(t,"float32"),n=Object(s.a)(t,"float32");return Object(o.a)(e,n)}const n=Object(a.D)(Object(a.N)(t),e);return r.a.makeTensor(n,t,e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({relu_:function(t){const e={x:Object(o.a)(t,"x","relu")};return r.a.runKernel(a.mc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({step_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","step"),s={x:n},i={alpha:e};return r.a.runKernel(a.Nc,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({unstack_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","unstack","string_or_numeric");s.b(e>=-n.shape.length&&e<n.shape.length,()=>"Axis = ".concat(e," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")"));const i={value:n},c={axis:e};return r.a.runKernel(a.Xc,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(8);var c=n(4);const u=Object(c.b)({batchNorm_:function(t,e,n,c,u,l){null==l&&(l=.001);const d=Object(o.a)(t,"x","batchNorm"),h=Object(o.a)(e,"mean","batchNorm"),p=Object(o.a)(n,"variance","batchNorm");let f,m;null!=u&&(f=Object(o.a)(u,"scale","batchNorm")),null!=c&&(m=Object(o.a)(c,"offset","batchNorm")),s.b(h.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),s.b(null==m||h.rank===m.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),s.b(null==f||h.rank===f.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const b={x:function(t){let e;return e=0===t.rank||1===t.rank?Object(i.a)(t,[1,1,1,t.size]):2===t.rank?Object(i.a)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(d),scale:f,offset:m,mean:h,variance:p},g={varianceEpsilon:l},y=r.a.runKernel(a.ib,b,g);return Object(i.a)(y,d.shape)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({sigmoid_:function(t){const e={x:Object(o.a)(t,"x","sigmoid")};return r.a.runKernel(a.Ac,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({tile_:function(t,e){const n=Object(o.a)(t,"x","tile","string_or_numeric");s.b(n.rank===e.length,()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(e,"."));const i={x:n},c={reps:e};return r.a.runKernel(a.Tc,i,c)}})},function(t,e,n){var r=n(246),a=n(247),o=n(248),s=n(249),i=n(250),c=n(251),u=n(252);u.alea=r,u.xor128=a,u.xorwow=o,u.xorshift7=s,u.xor4096=i,u.tychei=c,t.exports=u},function(t,e,n){"use strict";var r,a;n.d(e,"a",(function(){return r})),function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(a||(a={}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({mean_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","mean"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.Ob,i,c)}})},function(t,e,n){"use strict";var r,a,o,s,i;n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return u})),n.d(e,"b",(function(){return l})),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(a||(a={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(o||(o={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(i||(i={}));const c={float32:s,int32:a,bool:o,complex64:i};function u(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error("Can not upcast ".concat(t," with ").concat(e))}return c[t][e]}function l(t){return u(t,"int32")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({batchToSpaceND_:function(t,e,n){const i=Object(o.a)(t,"x","batchToSpaceND"),c=e.reduce((t,e)=>t*e);s.b(i.rank>=1+e.length,()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(e.length)),s.b(n.length===e.length,()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(e.length)),s.b(i.shape[0]%c===0,()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(e.join(" * ")," === ").concat(c));const u={x:i},l={blockShape:e,crops:n};return r.a.runKernel(a.t,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({gather_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i=Object(o.a)(t,"x","gather"),c=Object(o.a)(e,"indices","gather","int32"),u={x:i,indices:c},l={axis:n,batchDims:s};return r.a.runKernel(a.mb,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(4);const u=Object(c.b)({less_:function(t,e){let n=Object(s.a)(t,"a","less"),c=Object(s.a)(e,"b","less");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.yb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({logicalNot_:function(t){const e={x:Object(o.a)(t,"x","logicalNot","bool")};return r.a.runKernel(a.Fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(11),u=n(4);const l=Object(u.b)({minimum_:function(t,e){let n=Object(s.a)(t,"a","minimum"),u=Object(s.a)(e,"b","minimum");[n,u]=Object(o.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=Object(c.a)(n,"int32"),u=Object(c.a)(u,"int32")),Object(i.a)(n.shape,u.shape);const l={a:n,b:u};return r.a.runKernel(a.Qb,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(4);const u=Object(c.b)({notEqual_:function(t,e){let n=Object(s.a)(t,"a","notEqual"),c=Object(s.a)(e,"b","notEqual");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.Zb,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({spaceToBatchND_:function(t,e,n){const i=Object(o.a)(t,"x","spaceToBatchND");s.b(i.rank>=1+e.length,()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(e.length)),s.b(n.length===e.length,()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(e.length)),s.b(i.shape.reduce((t,r,a)=>a>0&&a<=e.length?t&&(r+n[a-1][0]+n[a-1][1])%e[a-1]===0:t,!0),()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(e.toString()));const c={x:i},u={blockShape:e,paddings:n};return r.a.runKernel(a.Hc,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(16),c=n(4);const u=Object(c.b)({squaredDifference_:function(t,e){let n=Object(s.a)(t,"a","squaredDifference"),c=Object(s.a)(e,"b","squaredDifference");[n,c]=Object(o.makeTypesMatch)(n,c),Object(i.a)(n.shape,c.shape);const u={a:n,b:c};return r.a.runKernel(a.Mc,u,{})}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(1),a=n(7),o=n(4),s=n(8);const i=Object(o.b)({squeeze_:function(t,e){const n=Object(r.a)(t,"x","squeeze");return Object(s.a)(n,Object(a.P)(n.shape,e).newShape)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(1),a=n(43);function o(t,e,n){const o=Object(r.c)(t,n);return Object(a.a)(t,e,o,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return s}));var r=n(76);n(121);class a{constructor(t,e,n,a,o){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=o||Math.random();this.random=r.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,a,o;do{r=2*this.random()-1,a=2*this.random()-1,o=r*r+a*a}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*s,e=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class o{constructor(t,e,n,o){this.alpha=t,this.beta=1/e,this.dtype=n;const s=o||Math.random();this.randu=r.alea(s.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,n,r,a,o;for(;;){do{r=this.randn.nextValue(),o=1+this.c*r}while(o<=0);if(o*=o*o,t=r*r,e=1-.331*t*t,n=.5*t+this.d*(1-o+Math.log(o)),a=this.randu(),a<e||Math.log(a)<n)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class s{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(t," - ").concat(e," <= 1 and dtype is not float"));this.random=r.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));const r={};function a(t){return r[t]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(58),i=n(4),c=n(8);const u=Object(i.b)({broadcastTo_:function(t,e){let n=Object(o.a)(t,"broadcastTo","x");const i=n.shape;if(e.some(t=>!(t>0)||t%1!==0))throw new Error("broadcastTo(): Invalid broadcast shape [".concat(e,"]."));if(e.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(e.length," < input.rank=").concat(n.rank,"."));if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=Object(c.a)(n,t)}const u=n.shape,l=Array.from(e);for(let r=e.length-1;r>=0;r--)if(u[r]===e[r])l[r]=1;else if(1!==n.shape[r])throw new Error("broadcastTo(): [".concat(i,"] cannot be broadcast to [").concat(e,"]."));if(0===l.map((t,e)=>t>1?e:-1).filter(t=>t>=0).length)return Object(s.a)(n);const d={x:n},h={reps:l};return r.a.runKernel(a.Tc,d,h)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({min_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","min"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.Pb,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({oneHot_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;if(e<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(e));const i=Object(o.a)(t,"indices","oneHot","int32"),c={indices:i},u={depth:e,onValue:n,offValue:s};return r.a.runKernel(a.ac,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({real_:function(t){const e={input:Object(o.a)(t,"input","real")};return r.a.runKernel(a.jc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(7),s=n(4);const i=Object(s.b)({ifft_:function(t){Object(o.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return r.a.runKernel(a.pb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return en})),n.d(e,"b",(function(){return nn}));var r=n(0),a=n(49),o=n(2);class s{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(t=>this.getInput(t)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((t,e)=>(t[e]=this.getAttr(e),t),{}))}getInput(t){return Object(o.e)(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return Object(o.e)(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(a.f)(this.node.rawAttrs,t,e);if(null!=n.s)return Object(a.i)(this.node.rawAttrs,t,e);if(null!=n.b)return Object(a.c)(this.node.rawAttrs,t,e);if(null!=n.shape)return Object(a.k)(this.node.rawAttrs,t,e);if(null!=n.type)return Object(a.e)(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(a.g)(this.node.rawAttrs,t,e);if(null!=n.list.s)return Object(a.h)(this.node.rawAttrs,t,e);if(null!=n.list.shape)return Object(a.j)(this.node.rawAttrs,t,e);if(null!=n.list.b)return Object(a.b)(this.node.rawAttrs,t,e);if(null!=n.list.type)return Object(a.d)(this.node.rawAttrs,t,e)}return e}}var i=n(91),c=n(12),u=n(174),l=n(113),d=n(9),h=n(14),p=n(144),f=n(101),m=n(13),b=n(84),g=n(66),y=n(41),v=n(87);var x=n(36),w=n(172),k=n(173),O=n(175),I=n(176),S=n(177),N=n(138),T=n(178),j=n(181),C=n(50),E=n(104),A=n(141),_=n(106),R=n(185),D=n(35),F=n(186),M=n(107),z=n(62),L=n(147),P=n(108),B=n(27),W=n(197),V=n(95),U=n(70),G=n(198),H=n(155),q=n(74),K=n(157),X=n(200),Y=n(158),Q=n(148),Z=n(32),J=n(23),$=n(125),tt=n(203),et=n(182),nt=n(115),rt=n(154),at=n(152),ot=n(109),st=n(114);function it(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";r.util.assert(ct(t,e),()=>n+" Shapes ".concat(t," and ").concat(e," must match"))}function ct(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}class ut{constructor(t,e,n,a,o,s,i){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=o,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(r.scalar)(0),Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||t>=this.size())throw new Error("Tried to read from index ".concat(t,", but array size is: ").concat(this.size()));const e=this.tensors[t];if(e.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(t," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(t=>this.read(t))}write(t,e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error("Tried to write to index ".concat(t,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,",\n          because the value dtype is ").concat(e.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),it(this.elementShape,e.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(t,", because it has already been written."));n.tensor=e,Object(r.keep)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(t.length," is not the same as tensors size: ").concat(e.length,"."));t.forEach((t,n)=>this.write(t,e[n]))}gather(t,e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(e));if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return Object(r.tensor)([],[0].concat(this.elementShape));const n=this.readMany(t);return it(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(r.stack)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(t));if(0===this.size())return Object(r.tensor)([],[0].concat(this.elementShape));const e=[];for(let r=0;r<this.size();r++)e.push(r);const n=this.readMany(e);return it(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),Object(r.concat)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(t,Object(r.unstack)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(e.dtype));let n=0;const a=t.map(t=>(n+=t,n));if(n!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(e.shape));if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(t.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const o=0===n?0:e.size/n,s=[];Object(r.tidy)(()=>{e=Object(r.reshape)(e,[1,n,o]);for(let n=0;n<t.length;++n){const i=[0,0===n?0:a[n-1],0],c=[1,t[n],o];s[n]=Object(r.reshape)(Object(r.slice)(e,i,c),this.elementShape)}return s});const i=[];for(let r=0;r<t.length;r++)i[r]=r;this.writeMany(i,s)}}class lt{constructor(t,e,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach(t=>{if(n!==t.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(t.dtype));it(e,t.shape,"TensorList shape mismatch: "),Object(r.keep)(t)}),this.idTensor=Object(r.scalar)(0),this.maxNumElements=a,Object(r.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new lt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));return it(t,this.elementShape,"TensorList shape mismatch: "),Object(r.tidy)(()=>{const e=this.tensors.map(e=>Object(r.reshape)(e,t));return Object(r.stack)(e,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return it(n.shape,t,"TensorList shape mismatch: "),Object(r.reshape)(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(it(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(r.keep)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(t));if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error("TensorListResize input size ".concat(t," is greater maxNumElement ").concat(this.maxNumElements,"."));this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(t<0||t>this.tensors.length)throw new Error("Trying to access element ".concat(t," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[t])throw new Error("element at index ".concat(t," is null."));return it(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error("Trying to set element ".concat(t," in a list with max ").concat(this.maxNumElements," elements."));it(this.elementShape,e.shape,"TensorList shape mismatch: "),Object(r.keep)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e,", but list elements ").concat(this.elementDtype));return it(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?Object(r.tensor)([],[0].concat(this.elementShape)):Object(r.tidy)(()=>{const e=t.map(t=>Object(r.reshape)(this.tensors[t],n));return Object(r.stack)(e,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(t));return it(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?Object(r.tensor)([],[0].concat(this.elementShape)):Object(r.tidy)(()=>{const t=this.tensors.map(t=>Object(r.reshape)(t,e));return Object(r.concat)(t,0)})}}const dt=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=Object(o.d)("thenBranch",t,e,n),a=Object(o.d)("elseBranch",t,e,n),s=Object(o.d)("cond",t,e,n),i=Object(o.d)("args",t,e,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(o.d)("body",t,e,n),a=Object(o.d)("cond",t,e,n),s=Object(o.d)("args",t,e,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),c=s.map(t=>t.id);let u=await i[0].data();i.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||t.dispose()});let l=s;for(;u[0];){const t=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const e=l.map(t=>t.id);t.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()});const o=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await o[0].data(),o.forEach(t=>{t.kept||-1!==c.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()})}return l}case"LoopCond":{const r=Object(o.d)("pred",t,e,n);return[Object(o.a)(r)]}case"Switch":{const r=Object(o.d)("pred",t,e,n);let a=Object(o.d)("data",t,e,n);return a.kept||(a=Object(o.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=t.inputNames.find(t=>void 0!==Object(o.e)(t,e,n));if(r){const t=Object(o.e)(r,e,n);return[Object(o.a)(t)]}return}case"Enter":{const r=Object(o.d)("frameName",t,e,n),a=Object(o.d)("tensor",t,e,n);return n.enterFrame(r),[Object(o.a)(a)]}case"Exit":{const r=Object(o.d)("tensor",t,e,n);return n.exitFrame(),[Object(o.a)(r)]}case"NextIteration":{const r=Object(o.d)("tensor",t,e,n);return n.nextIteration(),[Object(o.a)(r)]}case"TensorArrayV3":{const a=Object(o.d)("size",t,e,n),s=Object(o.d)("dtype",t,e,n),i=Object(o.d)("elementShape",t,e,n),c=Object(o.d)("dynamicSize",t,e,n),u=Object(o.d)("clearAfterRead",t,e,n),l=Object(o.d)("identicalElementShapes",t,e,n),d=Object(o.d)("name",t,e,n),h=new ut(d,s,a,i,l,c,u);return n.addTensorArray(h),[h.idTensor,Object(r.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(o.d)("tensorArrayId",t,e,n),a=Object(o.d)("index",t,e,n),s=Object(o.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(o.d)("tensorArrayId",t,e,n),a=Object(o.d)("index",t,e,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(o.d)("tensorArrayId",t,e,n),a=Object(o.d)("indices",t,e,n),s=Object(o.d)("dtype",t,e,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Object(o.d)("tensorArrayId",t,e,n),a=Object(o.d)("indices",t,e,n),s=Object(o.d)("tensor",t,e,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(o.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id),s=Object(o.d)("dtype",t,e,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Object(o.d)("tensorArrayId",t,e,n),a=Object(o.d)("tensor",t,e,n),s=Object(o.d)("lengths",t,e,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const a=Object(o.d)("tensorArrayId",t,e,n),s=n.getTensorArray(a.id);return[Object(r.scalar)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(o.d)("tensorArrayId",t,e,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(o.d)("tensorListId",t,e,n),a=Object(o.d)("index",t,e,n),s=Object(o.d)("tensor",t,e,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Object(o.d)("tensorListId",t,e,n),a=Object(o.d)("index",t,e,n),s=Object(o.d)("elementShape",t,e,n),i=Object(o.d)("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const a=Object(o.d)("indices",t,e,n),s=function(t,e,n,a){if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const o=Math.max(...e);if(null!=a&&-1!==a&&o>=a)throw new Error("Max index must be < array size (".concat(o,"  vs. ").concat(a,")"));const s=new lt([],n,t.dtype,a),i=Object(r.unstack)(t,0);return e.forEach((t,e)=>{s.setItem(t,i[e])}),s}(Object(o.d)("tensor",t,e,n),a,Object(o.d)("elementShape",t,e,n),Object(o.d)("numElements",t,e,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(o.d)("elementShape",t,e,n),a=Object(o.d)("elementDType",t,e,n);let s;s="TensorListReserve"===t.op?"numElements":"maxNumElements";const i=function(t,e,n){return new lt([],t,e,n)}(r,a,Object(o.d)(s,t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=Object(o.d)("tensorListId",t,e,n),a=Object(o.d)("indices",t,e,n),s=Object(o.d)("elementShape",t,e,n),i=Object(o.d)("elementDType",t,e,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=Object(o.d)("tensorListId",t,e,n),a=Object(o.d)("elementShape",t,e,n),s=Object(o.d)("elementDType",t,e,n),i=Object(o.d)("numElements",t,e,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const a=function(t,e,n){const a=t.dtype;if(t.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(t.shape));if(t.dtype!==n)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(n));it(t.shape.slice(1),e,"TensorList shape mismatch: ");const o=Object(r.unstack)(t);return new lt(o,e,a)}(Object(o.d)("tensor",t,e,n),Object(o.d)("elementShape",t,e,n),Object(o.d)("elementDType",t,e,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const r=Object(o.d)("tensorListId",t,e,n),a=n.getTensorList(r.id),s=Object(o.d)("dtype",t,e,n),i=Object(o.d)("elementShape",t,e,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Object(o.d)("tensorListId",t,e,n),a=Object(o.d)("tensor",t,e,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Object(o.d)("tensorListId",t,e,n),a=Object(o.d)("elementShape",t,e,n),s=Object(o.d)("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const a=Object(o.d)("tensor",t,e,n),s=Object(o.d)("elementShape",t,e,n),i=function(t,e,n){let a=0;const o=e.map(t=>(a+=t,a));if(a!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(t.shape));const s=0===a?0:t.size/a,i=Object(r.tidy)(()=>{const i=[];t=Object(r.reshape)(t,[1,a,s]);for(let a=0;a<e.length;++a){const c=[0,0===a?0:o[a-1],0],u=[1,e[a],s];i[a]=Object(r.reshape)(Object(r.slice)(t,c,u),n)}return t.dispose(),i}),c=new lt([],n,t.dtype,e.length);for(let r=0;r<i.length;r++)c.setItem(r,i[r]);return c}(a,Object(o.d)("lengths",t,e,n),s);return n.addTensorList(i),[i.idTensor]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}};var ht=n(139),pt=n(56),ft=n(17),mt=n(140),bt=n(67),gt=n(183),yt=n(103),vt=n(112),xt=n(194),wt=n(179),kt=n(193),Ot=n(143);function It(t,e,n){const[r,a]=Object(o.d)("fusedOps",t,e,n),s="biasadd"===r,i="prelu"===a,c="fusedbatchnorm"===r,u=Object(o.d)("numArgs",t,e,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const l=Object(o.d)("strides",t,e,n),d=Object(o.c)(t,e,n),h=Object(o.d)("dataFormat",t,e,n).toUpperCase(),p=Object(o.d)("dilations",t,e,n),[f,m]=Object(o.d)("args",t,e,n);return{stride:l,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:Object(o.d)("leakyreluAlpha",t,e,n)}}var St=n(102),Nt=n(190),Tt=n(195),jt=n(94),Ct=n(69),Et=n(196),At=n(153),_t=n(126),Rt=n(204),Dt=n(57),Ft=n(20);var Mt=n(11),zt=n(163),Lt=n(199);function Pt(t,e,n){return{boxes:Object(o.d)("boxes",t,e,n),scores:Object(o.d)("scores",t,e,n),maxOutputSize:Object(o.d)("maxOutputSize",t,e,n),iouThreshold:Object(o.d)("iouThreshold",t,e,n),scoreThreshold:Object(o.d)("scoreThreshold",t,e,n),softNmsSigma:Object(o.d)("softNmsSigma",t,e,n)}}var Bt=n(161),Wt=n(162);var Vt=n(64),Ut=n(15);class Gt{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Object(r.scalar)(0),this.tensorMap=new Map,Object(r.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),Object(r.tidy)(()=>{const t=Object(r.unstack)(e),a=n.length,o=t.length;r.util.assert(a===o,()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(o," ")+"elements.");for(let e=0;e<a;e++){const a=n[e],o=t[e];Object(r.keep)(o),this.tensorMap.set(a,o)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return Object(r.tidy)(()=>{const t=[];for(let r=0;r<n.length;r++){const a=n[r],o=this.findWithDefault(a,e);t.push(o)}return Object(r.stack)(t)})}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(t.dtype));if(e.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(e.dtype))}}var Ht=n(68),qt=n(85),Kt=n(39),Xt=n(46),Yt=n(82),Qt=n(47),Zt=n(51),Jt=n(83),$t=n(111),te=n(31);var ee=n(25),ne=n(44);var re=n(73),ae=n(146),oe=n(201),se=n(192),ie=n(210);var ce=n(59),ue=n(78),le=n(93),de=n(18),he=n(134),pe=n(135),fe=n(136),me=n(137),be=n(105),ge=n(180),ye=n(184);var ve=n(28),xe=n(81),we=n(42),ke=n(24),Oe=n(202),Ie=n(88),Se=n(8),Ne=n(52),Te=n(72),je=n(75),Ce=n(63),Ee=n(207),Ae=n(208);var _e=n(116),Re=n(96),De=n(117),Fe=n(159);var Me=n(53),ze=n(150),Le=n(48),Pe=n(86),Be=n(80),We=n(142),Ve=n(92);function Ue(t,e,n,a){const it=((t,e,n)=>{switch(t.category){case"arithmetic":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[c.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"AddN":return[u.a(Object(o.d)("tensors",t,e,n))];case"FloorMod":case"Mod":return[l.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Mul":return[d.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"RealDiv":case"Div":return[h.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"DivNoNan":return[p.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"FloorDiv":return[f.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Sub":return[m.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Minimum":return[b.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Maximum":return[g.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Pow":return[y.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"SquaredDifference":return[v.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"basic_math":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[x.a(Object(o.d)("x",t,e,n))];case"Acos":return[w.a(Object(o.d)("x",t,e,n))];case"Acosh":return[k.a(Object(o.d)("x",t,e,n))];case"Asin":return[O.a(Object(o.d)("x",t,e,n))];case"Asinh":return[I.a(Object(o.d)("x",t,e,n))];case"Atan":return[S.a(Object(o.d)("x",t,e,n))];case"Atan2":return[N.a(Object(o.d)("x",t,e,n),Object(o.d)("y",t,e,n))];case"Atanh":return[T.a(Object(o.d)("x",t,e,n))];case"Ceil":return[j.a(Object(o.d)("x",t,e,n))];case"Complex":return[C.a(Object(o.d)("real",t,e,n),Object(o.d)("imag",t,e,n))];case"Cos":return[E.a(Object(o.d)("x",t,e,n))];case"Cosh":return[A.a(Object(o.d)("x",t,e,n))];case"Elu":return[_.a(Object(o.d)("x",t,e,n))];case"Erf":return[R.a(Object(o.d)("x",t,e,n))];case"Exp":return[D.a(Object(o.d)("x",t,e,n))];case"Expm1":return[F.a(Object(o.d)("x",t,e,n))];case"Floor":return[M.a(Object(o.d)("x",t,e,n))];case"Log":return[z.a(Object(o.d)("x",t,e,n))];case"Log1p":return[L.a(Object(o.d)("x",t,e,n))];case"Imag":return[P.a(Object(o.d)("x",t,e,n))];case"Neg":return[B.a(Object(o.d)("x",t,e,n))];case"Reciprocal":return[W.a(Object(o.d)("x",t,e,n))];case"Real":return[V.a(Object(o.d)("x",t,e,n))];case"Relu":return[U.a(Object(o.d)("x",t,e,n))];case"Round":return[G.a(Object(o.d)("x",t,e,n))];case"Selu":return[H.a(Object(o.d)("x",t,e,n))];case"Sigmoid":return[q.a(Object(o.d)("x",t,e,n))];case"Sin":return[K.a(Object(o.d)("x",t,e,n))];case"Sign":return[X.a(Object(o.d)("x",t,e,n))];case"Sinh":return[Y.a(Object(o.d)("x",t,e,n))];case"Softplus":return[Q.a(Object(o.d)("x",t,e,n))];case"Sqrt":return[Z.a(Object(o.d)("x",t,e,n))];case"Square":return[J.a(Object(o.d)("x",t,e,n))];case"Tanh":return[$.a(Object(o.d)("x",t,e,n))];case"Tan":return[tt.a(Object(o.d)("x",t,e,n))];case"ClipByValue":return[et.a(Object(o.d)("x",t,e,n),Object(o.d)("clipValueMin",t,e,n),Object(o.d)("clipValueMax",t,e,n))];case"Relu6":return[nt.a(Object(o.d)("x",t,e,n))];case"Rsqrt":return[rt.a(Object(o.e)(t.inputNames[0],e,n))];case"Prod":return[at.a(Object(o.d)("x",t,e,n),Object(o.d)("axes",t,e,n))];case"LeakyRelu":return[ot.a(Object(o.d)("x",t,e,n),Object(o.d)("alpha",t,e,n))];case"Prelu":return[st.a(Object(o.d)("x",t,e,n),Object(o.d)("alpha",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"control":return dt(t,e,n);case"convolution":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=Object(o.d)("stride",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("dataFormat",t,e,n).toUpperCase(),i=Object(o.d)("dilation",t,e,n);return[ht.a(Object(o.d)("x",t,e,n),Object(o.d)("filter",t,e,n),r,a,s,i)]}case"Conv2D":{const r=Object(o.d)("strides",t,e,n),a=Object(o.c)(t,e,n),s=Object(o.d)("dataFormat",t,e,n).toUpperCase(),i=Object(o.d)("dilations",t,e,n);return[pt.a(Object(o.d)("x",t,e,n),Object(o.d)("filter",t,e,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=It(t,e,n);return[ft.sb.conv2d({x:Object(o.d)("x",t,e,n),filter:Object(o.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:c,preluArg:u,activationFunc:l,leakyreluAlpha:d}=It(t,e,n);return[ft.sb.depthwiseConv2d({x:Object(o.d)("x",t,e,n),filter:Object(o.d)("filter",t,e,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:c,activation:l,preluActivationWeights:u,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(o.d)("outputShape",t,e,n),a=Object(o.d)("strides",t,e,n),s=Object(o.c)(t,e,n);return[mt.a(Object(o.d)("x",t,e,n),Object(o.d)("filter",t,e,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(o.d)("strides",t,e,n),a=Object(o.c)(t,e,n),s=Object(o.d)("dilations",t,e,n),i=Object(o.d)("dataFormat",t,e,n).toUpperCase();return[bt.a(Object(o.d)("input",t,e,n),Object(o.d)("filter",t,e,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=Object(o.d)("strides",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("dataFormat",t,e,n).toUpperCase(),i=Object(o.d)("dilations",t,e,n);return[gt.a(Object(o.d)("x",t,e,n),Object(o.d)("filter",t,e,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Object(o.d)("strides",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("kernelSize",t,e,n);return[yt.a(Object(o.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(o.d)("strides",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("kernelSize",t,e,n);return[vt.a(Object(o.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(o.d)("strides",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("kernelSize",t,e,n),i=Object(o.d)("includeBatchInIndex",t,e,n),{result:c,indexes:u}=xt.a(Object(o.d)("x",t,e,n),[s[1],s[2]],[r[1],r[2]],a,i);return[c,u]}case"AvgPool3D":{const r=Object(o.d)("strides",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("kernelSize",t,e,n);return[wt.a(Object(o.d)("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(o.d)("strides",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("kernelSize",t,e,n);return[kt.a(Object(o.d)("x",t,e,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(o.d)("strides",t,e,n),a=Object(o.d)("pad",t,e,n),s=Object(o.d)("dilations",t,e,n),i=r[1],c=r[2],u=s[1],l=s[2];return[Ot.a(Object(o.d)("x",t,e,n),Object(o.d)("filter",t,e,n),[i,c],a,[u,l],"NHWC")]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"creation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=Object(o.d)("shape",t,e,n),a=Object(o.d)("dtype",t,e,n),s=Object(o.d)("value",t,e,n);return[St.a(r,s,a)]}case"LinSpace":{const r=Object(o.d)("start",t,e,n),a=Object(o.d)("stop",t,e,n),s=Object(o.d)("num",t,e,n);return[Nt.a(r,a,s)]}case"Multinomial":{const r=Object(o.d)("logits",t,e,n),a=Object(o.d)("numSamples",t,e,n),s=Object(o.d)("seed",t,e,n);return[Tt.a(r,a,s)]}case"OneHot":{const r=Object(o.d)("indices",t,e,n),a=Object(o.d)("depth",t,e,n),s=Object(o.d)("onValue",t,e,n),i=Object(o.d)("offValue",t,e,n);return[jt.a(r,a,s,i)]}case"Ones":return[Ct.a(Object(o.d)("shape",t,e,n),Object(o.d)("dtype",t,e,n))];case"OnesLike":return[Et.a(Object(o.d)("x",t,e,n))];case"RandomUniform":return[At.a(Object(o.d)("shape",t,e,n),Object(o.d)("minval",t,e,n),Object(o.d)("maxval",t,e,n),Object(o.d)("dtype",t,e,n))];case"Range":{const r=Object(o.d)("start",t,e,n),a=Object(o.d)("stop",t,e,n),s=Object(o.d)("step",t,e,n);return[_t.a(r,a,s,Object(o.d)("dtype",t,e,n))]}case"TruncatedNormal":{const r=Object(o.d)("shape",t,e,n),a=Object(o.d)("mean",t,e,n),s=Object(o.d)("stdDev",t,e,n),i=Object(o.d)("seed",t,e,n);return[Rt.a(r,a,s,Object(o.d)("dtype",t,e,n),i)]}case"Zeros":return[Dt.a(Object(o.d)("shape",t,e,n),Object(o.d)("dtype",t,e,n))];case"ZerosLike":return[Ft.a(Object(o.d)("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i,softNmsSigma:c}=Pt(t,e,n),u=await ft.Bb.nonMaxSuppressionWithScoreAsync(r,a,o,s,i,c);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=Pt(t,e,n),u=Object(o.d)("padToMaxOutputSize",t,e,n),l=await ft.Bb.nonMaxSuppressionPaddedAsync(r,a,s,i,c,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:o,iouThreshold:s,scoreThreshold:i}=Pt(t,e,n);return[await ft.Bb.nonMaxSuppressionAsync(r,a,o,s,i)]}case"Where":{const r=Mt.a(Object(o.d)("condition",t,e,n),"bool"),a=[await zt.a(r)];return r.dispose(),a}case"ListDiff":return Lt.a(Object(o.d)("x",t,e,n),Object(o.d)("y",t,e,n));default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n);case"evaluation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=Object(o.d)("x",t,e,n),a=Object(o.d)("k",t,e,n),s=Object(o.d)("sorted",t,e,n),i=Bt.a(r,a,s);return[i.values,i.indices]}case"Unique":{const r=Object(o.d)("x",t,e,n),a=Wt.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(o.d)("x",t,e,n),a=Object(o.d)("axis",t,e,n),s=Wt.a(r,a);return[s.values,s.indices]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"image":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=Object(o.d)("images",t,e,n),a=Object(o.d)("size",t,e,n),s=Object(o.d)("alignCorners",t,e,n),i=Object(o.d)("halfPixelCenters",t,e,n);return[ft.Bb.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=Object(o.d)("images",t,e,n),a=Object(o.d)("size",t,e,n),s=Object(o.d)("alignCorners",t,e,n),i=Object(o.d)("halfPixelCenters",t,e,n);return[ft.Bb.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=Object(o.d)("image",t,e,n),a=Object(o.d)("boxes",t,e,n),s=Object(o.d)("boxInd",t,e,n),i=Object(o.d)("cropSize",t,e,n),c=Object(o.d)("method",t,e,n),u=Object(o.d)("extrapolationValue",t,e,n);return[ft.Bb.cropAndResize(r,a,s,i,c,u)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"graph":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=Object(o.d)("default",t,e,n);return[Object(o.e)(t.name,e,n)||r];case"Placeholder":return[Object(o.e)(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(o.d)("x",t,e,n);return[Object(o.a)(r)]}case"IdentityN":return Object(o.d)("x",t,e,n).map(t=>Object(o.a)(t));case"Snapshot":const a=Object(o.d)("x",t,e,n);return[Object(o.a)(a)];case"Shape":return[Vt.a(Object(o.d)("x",t,e,n).shape,"int32")];case"ShapeN":return Object(o.d)("x",t,e,n).map(t=>Vt.a(t.shape));case"Size":return[Ut.a(Object(o.d)("x",t,e,n).size,"int32")];case"Rank":return[Ut.a(Object(o.d)("x",t,e,n).rank,"int32")];case"NoOp":return[Ut.a(1)];case"Print":const s=Object(o.d)("x",t,e,n),i=Object(o.d)("data",t,e,n),c=Object(o.d)("message",t,e,n),u=Object(o.d)("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(c);for(let t=0;t<i.length;t++)console.log(Array.prototype.slice.call(i[t].dataSync()).slice(0,u));return[s];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"logical":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Equal":return[Ht.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"NotEqual":return[qt.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Greater":return[Kt.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"GreaterEqual":return[Xt.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Less":return[Yt.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"LessEqual":return[Qt.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"LogicalAnd":return[Zt.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"LogicalNot":return[Jt.a(Object(o.d)("a",t,e,n))];case"LogicalOr":return[$t.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];case"Select":case"SelectV2":return[te.a(Object(o.d)("condition",t,e,n),Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"matrices":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ee.a(Object(o.d)("a",t,e,n),Object(o.d)("b",t,e,n),Object(o.d)("transposeA",t,e,n),Object(o.d)("transposeB",t,e,n))];case"Transpose":return[ne.a(Object(o.d)("x",t,e,n),Object(o.d)("perm",t,e,n))];case"_FusedMatMul":const[r,a]=Object(o.d)("fusedOps",t,e,n),s="biasadd"===r,i="prelu"===a,c=Object(o.d)("numArgs",t,e,n),u=Object(o.d)("leakyreluAlpha",t,e,n);if(s){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,d]=Object(o.d)("args",t,e,n);return[ft.sb.matMul({a:Object(o.d)("a",t,e,n),b:Object(o.d)("b",t,e,n),transposeA:Object(o.d)("transposeA",t,e,n),transposeB:Object(o.d)("transposeB",t,e,n),bias:l,activation:a,preluActivationWeights:d,leakyreluAlpha:u})];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"normalization":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[re.a(Object(o.d)("x",t,e,n),Object(o.d)("mean",t,e,n),Object(o.d)("variance",t,e,n),Object(o.d)("offset",t,e,n),Object(o.d)("scale",t,e,n),Object(o.d)("epsilon",t,e,n))];case"LRN":return[ae.a(Object(o.d)("x",t,e,n),Object(o.d)("radius",t,e,n),Object(o.d)("bias",t,e,n),Object(o.d)("alpha",t,e,n),Object(o.d)("beta",t,e,n))];case"Softmax":return[oe.a(Object(o.d)("x",t,e,n))];case"LogSoftmax":return[se.a(Object(o.d)("x",t,e,n))];case"SparseToDense":return[ie.a(Object(o.d)("sparseIndices",t,e,n),Object(o.d)("outputShape",t,e,n),Object(o.d)("sparseValues",t,e,n),Object(o.d)("defaultValue",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"reduction":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Max":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("keepDims",t,e,n);return[ce.a(Object(o.d)("x",t,e,n),r,a)]}case"Mean":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("keepDims",t,e,n);return[ue.a(Object(o.d)("x",t,e,n),r,a)]}case"Min":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("keepDims",t,e,n);return[le.a(Object(o.d)("x",t,e,n),r,a)]}case"Sum":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("keepDims",t,e,n);return[de.a(Object(o.d)("x",t,e,n),r,a)]}case"All":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("keepDims",t,e,n);return[he.a(Object(o.d)("x",t,e,n),r,a)]}case"Any":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("keepDims",t,e,n);return[pe.a(Object(o.d)("x",t,e,n),r,a)]}case"ArgMax":{const r=Object(o.d)("axis",t,e,n);return[fe.a(Object(o.d)("x",t,e,n),r)]}case"ArgMin":{const r=Object(o.d)("axis",t,e,n);return[me.a(Object(o.d)("x",t,e,n),r)]}case"Prod":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("keepDims",t,e,n);return[at.a(Object(o.d)("x",t,e,n),r,a)]}case"Cumsum":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("exclusive",t,e,n),s=Object(o.d)("reverse",t,e,n);return[be.a(Object(o.d)("x",t,e,n),r,a,s)]}case"Bincount":const r=Object(o.d)("x",t,e,n),a=Object(o.d)("weights",t,e,n),s=Object(o.d)("size",t,e,n);return[ge.a(r,a,s)];case"DenseBincount":{const r=Object(o.d)("x",t,e,n),a=Object(o.d)("weights",t,e,n),s=Object(o.d)("size",t,e,n),i=Object(o.d)("binaryOutput",t,e,n);return[ye.a(r,a,s,i)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"slice_join":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=Object(o.d)("n",t,e,n),a=Object(o.d)("axis",t,e,n);let s=Object(o.d)("tensors",t,e,n);return s=s.slice(0,r),[ve.a(s,a)]}case"Gather":{const r=Object(o.d)("x",t,e,n),a=Object(o.d)("indices",t,e,n);return[xe.a(r,Mt.a(a,"int32"),0)]}case"GatherV2":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("batchDims",t,e,n),s=Object(o.d)("x",t,e,n),i=Object(o.d)("indices",t,e,n);return[xe.a(s,Mt.a(i,"int32"),r,a)]}case"Reverse":{const r=Object(o.d)("dims",t,e,n),a=[];for(let t=0;t<r.length;t++)r[t]&&a.push(t);const s=Object(o.d)("x",t,e,n);return[we.a(s,a)]}case"ReverseV2":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("x",t,e,n);return[we.a(a,r)]}case"Slice":{const r=Object(o.d)("begin",t,e,n),a=Object(o.d)("size",t,e,n);return[ke.a(Object(o.d)("x",t,e,n),r,a)]}case"StridedSlice":{const r=Object(o.d)("begin",t,e,n),a=Object(o.d)("end",t,e,n),s=Object(o.d)("strides",t,e,n),i=Object(o.d)("beginMask",t,e,n),c=Object(o.d)("endMask",t,e,n),u=Object(o.d)("ellipsisMask",t,e,n),l=Object(o.d)("newAxisMask",t,e,n),d=Object(o.d)("shrinkAxisMask",t,e,n),h=Object(o.d)("x",t,e,n);return[Oe.a(h,r,a,s,i,c,u,l,d)]}case"Pack":return Object(r.tidy)(()=>{const a=Object(o.d)("axis",t,e,n),s=Object(o.d)("tensors",t,e,n),i=s[0].shape,c=Ie.a(s[0]).shape,u=s.map(t=>{const e=r.util.arraysEqual(t.shape,i);if(!e&&!r.util.arraysEqual(Ie.a(t).shape,c))throw new Error("the input tensors shape does not match");return e?t:Se.a(t,i)});return[Ne.a(u,a)]});case"Unpack":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("tensor",t,e,n);return Te.a(a,r)}case"Tile":{const r=Object(o.d)("reps",t,e,n);return[je.a(Object(o.d)("x",t,e,n),r)]}case"Split":case"SplitV":{const r=Object(o.d)("axis",t,e,n),a=Object(o.d)("numOrSizeSplits",t,e,n),s=Object(o.d)("x",t,e,n);return Ce.a(s,a,r)}case"ScatterNd":{const r=Object(o.d)("indices",t,e,n),a=Object(o.d)("values",t,e,n),s=Object(o.d)("shape",t,e,n);return[Ee.a(r,a,s)]}case"GatherNd":{const r=Object(o.d)("x",t,e,n),a=Object(o.d)("indices",t,e,n);return[Ae.a(r,a)]}case"SparseToDense":{const r=Object(o.d)("sparseIndices",t,e,n),a=Object(o.d)("outputShape",t,e,n),s=Object(o.d)("sparseValues",t,e,n),i=Object(o.d)("defaultValue",t,e,n);return[ie.a(r,s,a,s.dtype===i.dtype?i:Mt.a(i,s.dtype))]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"spectral":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"FFT":return[_e.a(Object(o.d)("x",t,e,n))];case"IFFT":return[Re.a(Object(o.d)("x",t,e,n))];case"RFFT":return[De.a(Object(o.d)("x",t,e,n))];case"IRFFT":return[Fe.a(Object(o.d)("x",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"transformation":return r.tidy(()=>((t,e,n)=>{switch(t.op){case"Cast":return[Mt.a(Object(o.d)("x",t,e,n),Object(o.d)("dtype",t,e,n))];case"ExpandDims":{const r=Object(o.d)("axis",t,e,n);return[Me.a(Object(o.d)("x",t,e,n),r)]}case"Squeeze":{const r=Object(o.d)("axis",t,e,n);return[Ie.a(Object(o.d)("x",t,e,n),r)]}case"Reshape":return[Se.a(Object(o.d)("x",t,e,n),Object(o.d)("shape",t,e,n))];case"MirrorPad":return[ze.a(Object(o.d)("x",t,e,n),Object(o.d)("padding",t,e,n),Object(o.d)("mode",t,e,n))];case"PadV2":case"Pad":return[Le.a(Object(o.d)("x",t,e,n),Object(o.d)("padding",t,e,n),Object(o.d)("constantValue",t,e,n))];case"SpaceToBatchND":{const r=Object(o.d)("blockShape",t,e,n),a=Object(o.d)("paddings",t,e,n);return[Pe.a(Object(o.d)("x",t,e,n),r,a)]}case"BatchToSpaceND":{const r=Object(o.d)("blockShape",t,e,n),a=Object(o.d)("crops",t,e,n);return[Be.a(Object(o.d)("x",t,e,n),r,a)]}case"DepthToSpace":{const r=Object(o.d)("blockSize",t,e,n),a=Object(o.d)("dataFormat",t,e,n).toUpperCase();return[We.a(Object(o.d)("x",t,e,n),r,a)]}case"BroadcastTo":return[Ve.a(Object(o.d)("x",t,e,n),Object(o.d)("shape",t,e,n))];default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const a=Object(o.d)("keyDType",t,e,n),s=Object(o.d)("valueDType",t,e,n),i=new Gt(a,s);return r.addHashTable(t.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(o.d)("tableHandle",t,e,n,r),s=Object(o.d)("keys",t,e,n),i=Object(o.d)("values",t,e,n),c=r.getHashTableById(a.id);return[await c.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(o.d)("tableHandle",t,e,n,r),s=Object(o.d)("keys",t,e,n),i=Object(o.d)("defaultValue",t,e,n),c=r.getHashTableById(a.id);return[await c.find(s,i)]}default:throw TypeError("Node type ".concat(t.op," is not implemented"))}})(t,e,n,a);case"custom":const it=Object(i.a)(t.op);if(it&&it.customExecutor)return it.customExecutor(new s(t,e,n));throw TypeError("Custom op ".concat(t.op," is not registered."));default:throw TypeError("Unknown op '".concat(t.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(t,e,n);return r.util.isPromise(it)?it.then(t=>[].concat(t)):[].concat(it)}class Ge{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(t=>0===t.id&&0===t.iterationId?"":"".concat(t.frameName,"-").concat(t.iterationId)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function He(t,e,n,r){const a=new Set,s=[];let i=null,c=null;const u=new Set,l=Object.keys(t).map(t=>Object(o.g)(t)[0]);let d=[];null!=r&&(d=r.map(t=>Object(o.g)(t.name)[0]));const h=[...e];for(;h.length>0;){const t=h.pop();(Ye(t)||Qe(t)||Ze(t))&&null==i&&(i=t,c=i.children.map(t=>t.name).filter(t=>a.has(t))),a.add(t.name),null==n[t.name]&&(-1===l.indexOf(t.name)&&-1===d.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach(t=>{u.has(t.name)||(u.add(t.name),h.push(t))}):s.push(t.name)))}return{inputs:t,outputs:e,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:c}}const qe=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Ke=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Xe=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function Ye(t){return qe.indexOf(t.op)>=0}function Qe(t){return Ke.indexOf(t.op)>=0}function Ze(t){return Xe.indexOf(t.op)>=0}class Je{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(e=>{this._functionExecutorMap[e]=new Je(t.functions[e],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(e=>t[e].map(t=>t.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?"".concat(e,":").concat(t.defaultOutput):e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const n=t.map(t=>t.name).sort(),r=e.map(t=>t.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=He(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error("This execution contains the node '".concat(a.name,"', which has ")+"the dynamic op '".concat(a.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(r.length>0){const n=e.map(t=>t.name),a=Object.keys(t);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(a,"]. Missing the following inputs: [").concat(r,"]"))}return function(t,e,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(t=>Object(o.g)(t)[0]).map(e=>t.nodes[e]),c=t.initNodes;i.forEach(t=>{r.has(t.name)&&s.push(t)}),t.weights.forEach(t=>{r.has(t.name)&&s.push(t)}),null!=c&&c.forEach(t=>{r.has(t.name)&&s.push(t)});const u=new Set,l=[];for(;s.length>0;){const t=s.pop();u.add(t.name),e[t.name]||l.push(t),t.children.forEach(t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every(t=>u.has(t.name))&&s.push(t)})}return l}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=n.map(t=>this.graph.nodes[Object(o.g)(t)[0]]),s=e.map(t=>Object(o.g)(t)[0]);let i=s.map(t=>this.graph.nodes[t]);0===i.length&&(i=this._outputs);const c=this.getCompilationKey(a,i);let u=this.compiledMap.get(c);null==u&&(u=this.compile(t,i),this.compiledMap.set(c,u));const l={},d={};return Object(r.tidy)(()=>{const n=new Ge(this.weightMap,l,d,this.functionExecutorMap),a=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(o.g)(e),s=[];s[r]=t[e],a[n]=s});const i=this.getFrozenTensorIds(a),c={};for(let t=0;t<u.length;t++){const e=u[t];if(!a[e.name]){const t=Ue(e,a,n,this._resourceManager);if(r.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.checkTensorForDisposal(e.name,e,a,n,i,s,c)}}return null==this.parent&&n.dispose(i),e.map(t=>Object(o.e)(t,a,n))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(e=>t[e]).map(t=>t.map(t=>t.id)));return new Set(e)}checkTensorForDisposal(t,e,n,r,a,s,i){"control"!==e.category&&-1===s.indexOf(t)&&(n[t].forEach(t=>{null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)}),e.inputs.forEach(t=>{if("control"!==t.category){const e=Object(o.f)(t.name,n,r);null!=e&&e.forEach(t=>{if(t&&!a.has(t.id)){const e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}})}}))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const s=new Ge(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(t,s,e,n),c=e.map(t=>Object(o.e)(t,i,s)),u=c.map(t=>t.id),l=Object.keys(t).map(e=>t[e].id),d=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach(t=>{i[t].forEach(t=>{!t||t.isDisposed||d.has(t.id)||t.dispose()})}),null==this.parent&&s.dispose(d),c}async executeFunctionAsync(t,e,n){const r=t.reduce((t,e,n)=>(t[this.inputs[n].name]=e,t),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const a=Object.keys(t),s=a.map(t=>this.graph.nodes[Object(o.g)(t)[0]]),i=n.map(t=>Object(o.g)(t)[0]);let c=i.map(t=>this.graph.nodes[t]);0===c.length&&(c=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:d,syncInputs:h}=He(t,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map(t=>({node:t,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(e=>{const[n,r]=Object(o.g)(e),a=[];a[r]=t[e],f[n]=a});const m={},b=this.getFrozenTensorIds(f),g={};for(;p.length>0;){const t=this.processStack(s,p,e,f,g,b,i,m,u);await Promise.all(t)}null!=d||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=c.filter(t=>!Ye(t)&&!Object(o.e)(t.name,f,e)).map(t=>t.name);if(y.length>0){let t="";throw null!=d&&(t="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(y,"] from the provided ")+"inputs [".concat(a,"]. Consider providing the following inputs: ")+"[".concat(l,"]. ").concat(t))}return f}processStack(t,e,n,a,s,i,c,u,l){const d=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let h="";if("Enter"===t.node.op&&Object(o.d)("isConstant",t.node,a,n)&&([h]=Object(o.b)(t.node.name,n)),null==a[t.node.name]){const p=Ue(t.node,a,n,this._resourceManager);h||([h]=Object(o.b)(t.node.name,n));const f=n.currentContext;r.util.isPromise(p)?d.push(p.then(r=>(a[h]=r,n.currentContext=f,this.checkTensorForDisposal(h,t.node,a,n,i,c,u),this.processChildNodes(t.node,e,n,a,s,l),r))):(a[h]=p,this.checkTensorForDisposal(h,t.node,a,n,i,c,u),this.processChildNodes(t.node,e,n,a,s,l))}else this.processChildNodes(t.node,e,n,a,s,l)}return d}processChildNodes(t,e,n,r,a,s){t.children.forEach(t=>{const[i]=Object(o.b)(t.name,n);!a[i]&&s.has(t.name)&&("Merge"===t.op?t.inputNames.some(t=>!!Object(o.e)(t,r,n))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(t=>!!Object(o.e)(t,r,n))&&(a[i]=!0,e.push({contexts:n.currentContext,node:t})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(t=>t.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const n=t[e],[a]=Object(o.g)(e),s=this.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){const t=s.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every((e,n)=>-1===t[n]||t[n]===e);r.util.assert(e,()=>"The shape of dict['".concat(s.name,"'] provided in ")+"model.execute(dict) must be [".concat(t,"], but was ")+"[".concat(n.shape,"]"))}s.attrParams.dtype&&s.attrParams.dtype.value&&r.util.assert(n.dtype===s.attrParams.dtype.value,()=>"The dtype of dict['".concat(s.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(s.attrParams.dtype.value,", but was ").concat(n.dtype))})}mapInputs(t){const e={};for(const n in t)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){e[this._signature.inputs[n].name]=t[n]}else e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter(t=>{const[e]=Object(o.g)(t);return null==this.graph.nodes[e]});if(e.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(e,"] that are not part of graph"))}mapOutputs(t){return t.map(t=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]){return this._signature.outputs[t].name}return t},{})}checkOutputs(t){t.forEach(t=>{const[e]=Object(o.g)(t);if(!this.graph.nodes[e])throw new Error("The output '".concat(t,"' is not found in the graph"))})}}class $e{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class tn{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new $e}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=r.io.browserHTTPRequest(t,this.loadOptions);else{const e=r.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(r.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error("Found more than one (".concat(e.length,") load handlers for ")+"URL '".concat([t],"'"));this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version="".concat(e.versions.producer,".").concat(e.versions.minConsumer);const o=r.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Je(a.a.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(o),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const e=a.a.Instance.transformGraph(t.modelInitializer);this.initializer=new Je(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"===typeof t){const e=r.io.getSaveHandlers(t);if(0===e.length)throw new Error("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new Error("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof r.Tensor)&&!Array.isArray(t))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,"+"the graph model has ".concat(this.inputNodes.length," placeholders, ")+"while there are ".concat(t.length," input tensors."));return this.inputNodes.reduce((e,n,r)=>(e[n]=t[r],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,n)=>(e[n]=[t[n]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function en(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t="".concat(t).concat("model.json").concat("?tfjs-format=file"));const n=new tn(t,e);return await n.load(),n}const nn="2.8.6"},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,n){"use strict";n.r(e),n.d(e,"validateUpdateShape",(function(){return a})),n.d(e,"validateInput",(function(){return o})),n.d(e,"calculateShapes",(function(){return s}));var r=n(7);function a(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,a=e.rank>1?e.rank-1:1,o="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(e.shape,", shape: ").concat(t)+", sliceDim: ".concat(r,", and batchDim: ").concat(a,".");if(n.rank<a)throw new Error(o+" update.rank < ".concat(a,". "));if(t.length<r+(n.rank-a))throw new Error(o+" Output shape length < ".concat(r+(n.rank-a)));if(n.rank!==a+t.length-r)throw new Error(o+" update.rank != ".concat(a+t.length-r));for(let s=0;s<a;++s)if(n.shape[s]!==e.shape[s])throw new Error(o+" updates.shape[".concat(s,"] (").concat(n.shape[s],") != indices.shape[").concat(s,"] (").concat(e.shape[s],")."));for(let s=0;s<n.rank-a;++s)if(n.shape[s+a]!==t[s+r])throw new Error(o+" updates.shape[".concat(s+a,"] (").concat(n.shape[s+a],") != shape[").concat(s+a,"] (").concat(t[s+a],")"))}function o(t,e,n){if(e.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if(t.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if("int32"!==e.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(e.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===e.size)throw new Error("Indices specified for empty output. indices shape: ".concat(e.shape));if(0===t.size)throw new Error("Updates specified for empty output. updates shape: ".concat(t.shape))}a(n,e,t)}function s(t,e,n){const a=e.shape.length,o=a>1?e.shape[a-1]:1,s=n.length;let i=1;for(let r=o;r<s;++r)i*=n[r];const c=o<1?1:o;return{sliceRank:o,numUpdates:Object(r.N)(e.shape)/c,sliceSize:i,strides:[...Object(r.j)(n.slice(0,o)),1],outputSize:Object(r.N)(n)}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({floorDiv_:function(t,e){let n=Object(s.a)(t,"a","floorDiv"),i=Object(s.a)(e,"b","floorDiv");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.gb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(5),a=n(3);function o(t,e,n){const o={shape:t,value:e,dtype:n};return r.a.runKernel(a.db,{},o)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(11),c=n(26),u=n(4),l=n(8);const d=Object(u.b)({avgPool_:function(t,e,n,u,d){const h=Object(o.a)(t,"x","avgPool","float32");s.b(c.h(n,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"));let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.b(4===p.rank,()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,".")),null!=d&&s.b(s.v(u),()=>"Error in avgPool: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(u,"."));const m={x:p},b={filterSize:e,strides:n,pad:u,dimRoundingMode:d};let g=r.a.runKernel(a.o,m,b);return g=Object(i.a)(g,h.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({cos_:function(t){const e={x:Object(o.a)(t,"x","cos")};return r.a.runKernel(a.I,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({cumsum_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=Object(o.a)(t,"x","cumsum"),c={x:i},u={axis:e,exclusive:n,reverse:s};return r.a.runKernel(a.L,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({elu_:function(t){const e={x:Object(o.a)(t,"x","elu")};return r.a.runKernel(a.V,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({floor_:function(t){const e={x:Object(o.a)(t,"x","floor")};return r.a.runKernel(a.fb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({imag_:function(t){const e={input:Object(o.a)(t,"input","imag")};return r.a.runKernel(a.rb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({leakyRelu_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=Object(o.a)(t,"x","leakyRelu"),s={x:n},i={alpha:e};return r.a.runKernel(a.xb,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n(1),a=n(7),o=n(12),s=n(33),i=n(35),c=n(62),u=n(59),l=n(4),d=n(8),h=n(13),p=n(18);const f=Object(l.b)({logSumExp_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const l=Object(r.a)(t,"x","logSumExp"),f=Object(a.I)(e,l.shape),m=Object(u.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(i.a)(b),y=Object(p.a)(g,f),v=Object(c.a)(y),x=Object(o.a)(Object(d.a)(m,v.shape),v);if(n){const t=Object(s.e)(x.shape,f);return Object(d.a)(x,t)}return x}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(16),i=n(4);const c=Object(i.b)({logicalOr_:function(t,e){const n=Object(o.a)(t,"a","logicalOr","bool"),i=Object(o.a)(e,"b","logicalOr","bool");Object(s.a)(n.shape,i.shape);const c={a:n,b:i};return r.a.runKernel(a.Gb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(26),c=n(4),u=n(8);const l=Object(c.b)({maxPool_:function(t,e,n,c,l){const d=Object(o.a)(t,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.b(4===h.rank,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,".")),s.b(i.h(n,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")),null!=l&&s.b(s.v(c),()=>"Error in maxPool: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const f={x:h},m={filterSize:e,strides:n,pad:c,dimRoundingMode:l},b=r.a.runKernel(a.Ib,f,m);return p?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({mod_:function(t,e){let n=Object(s.a)(t,"a","mod"),i=Object(s.a)(e,"b","mod");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.Sb,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({prelu_:function(t,e){const n={x:Object(o.a)(t,"x","prelu"),alpha:Object(o.a)(e,"alpha","prelu")};return r.a.runKernel(a.gc,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({relu6_:function(t){const e={x:Object(o.a)(t,"x","relu6")};return r.a.runKernel(a.nc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(7),s=n(4);const i=Object(s.b)({fft_:function(t){Object(o.b)("complex64"===t.dtype,()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(t.dtype,"."));const e={input:t};return r.a.runKernel(a.cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return m}));var r=n(7),a=n(50),o=n(28),s=n(108),i=n(4),c=n(95),u=n(8),l=n(24),d=n(63),h=n(57),p=n(20),f=n(116);const m=Object(i.b)({rfft_:function(t,e){Object(r.b)("float32"===t.dtype,()=>"The dtype for rfft() must be real value but got ".concat(t.dtype));let n=t.shape[t.shape.length-1];const i=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map(t=>0),a=t.shape.map(t=>t);a[t.shape.length-1]=e,m=Object(l.a)(t,r,a),n=e}else if(null!=e&&e>n){const r=t.shape.map(t=>t);r[t.shape.length-1]=e-n,m=Object(o.a)([t,Object(h.a)(r)],t.shape.length-1),n=e}else m=t;const b=Object(p.a)(m),g=Object(u.a)(Object(a.a)(m,b),[i,n]),y=Object(f.a)(g),v=Math.floor(n/2)+1,x=Object(c.a)(y),w=Object(s.a)(y),k=Object(d.a)(x,[v,n-v],x.shape.length-1),O=Object(d.a)(w,[v,n-v],w.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=v,Object(u.a)(Object(a.a)(k[0],O[0]),I)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({unsortedSegmentSum_:function(t,e,n){const i=Object(o.a)(t,"x","unsortedSegmentSum"),c=Object(o.a)(e,"segmentIds","unsortedSegmentSum","int32");Object(s.b)(Object(s.v)(n),()=>"numSegments must be of dtype int");const u={x:i,segmentIds:c},l={numSegments:n};return r.a.runKernel(a.Yc,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return g}));var r=n(1),a=n(7),o=n(36),s=n(33),i=n(59),c=n(93),u=n(4),l=n(41),d=n(8),h=n(15),p=n(32),f=n(23),m=n(18);function b(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===t.rank)return Object(o.a)(t);if(1!==t.rank&&null===n)return b(Object(d.a)(t,[-1]),e,n);if(1===t.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===e)return Object(m.a)(Object(o.a)(t),n);if(e===1/0)return Object(i.a)(Object(o.a)(t),n);if(e===-1/0)return Object(c.a)(Object(o.a)(t),n);if("euclidean"===e||2===e)return Object(p.a)(Object(m.a)(Object(l.a)(Object(o.a)(t),Object(h.a)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}if(Array.isArray(n)&&2===n.length){if(1===e)return Object(i.a)(Object(m.a)(Object(o.a)(t),n[0]),n[1]-1);if(e===1/0)return Object(i.a)(Object(m.a)(Object(o.a)(t),n[1]),n[0]);if(e===-1/0)return Object(c.a)(Object(m.a)(Object(o.a)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return Object(p.a)(Object(m.a)(Object(f.a)(t),n));throw new Error("Error in norm: invalid ord value: ".concat(e))}throw new Error("Error in norm: invalid axis: ".concat(n))}const g=Object(u.b)({norm_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=b(t=Object(r.a)(t,"x","norm"),e,n);let c=i.shape;if(o){const e=Object(a.I)(n,t.shape);c=s.e(i.shape,e)}return Object(d.a)(i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(7),s=n(4),i=n(8);const c=Object(s.b)({conv2DBackpropInput_:function(t,e,n,s,c){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",l=arguments.length>6?arguments[6]:void 0;o.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let d=t,h=e,p=!1;3===e.rank&&(p=!0,h=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),d=[1,t[0],t[1],t[2]]),o.b(4===d.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(d.length,".")),o.b(4===h.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(h.rank)),o.b(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank));const f="NHWC"===u?d[3]:d[1],m="NHWC"===u?h.shape[3]:h.shape[1];o.b(f===n.shape[2],()=>"Error in conv2dDerInput: depth of input (".concat(f,") must ")+"match input depth for filter ".concat(n.shape[2],".")),o.b(m===n.shape[3],()=>"Error in conv2dDerInput: depth of output (".concat(m,") must ")+"match output depth for filter ".concat(n.shape[3],".")),null!=l&&o.b(o.v(c),()=>"Error in conv2dDerInput: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const b={dy:h,filter:n},g={strides:s,pad:c,dataFormat:u,dimRoundingMode:l,inputShape:d},y=r.a.runKernel(a.E,b,g);return p?Object(i.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(t,e,n){"use strict";n.r(e),n.d(e,"TEST_EPSILON_FLOAT16",(function(){return i})),n.d(e,"expectArraysClose",(function(){return c})),n.d(e,"testEpsilon",(function(){return u})),n.d(e,"expectPromiseToFail",(function(){return d})),n.d(e,"expectArraysEqual",(function(){return h})),n.d(e,"expectNumbersClose",(function(){return p})),n.d(e,"expectValuesInRange",(function(){return m})),n.d(e,"expectArrayBuffersEqual",(function(){return b})),n.d(e,"encodeStrings",(function(){return g}));var r=n(5),a=n(1),o=n(7),s=n(10);const i=.1;function c(t,e,n){return null==n&&(n=u()),l(t,e,(t,e)=>f(t,e,n))}function u(){return 32===r.a.backend.floatPrecision()?.001:i}function l(t,e,n){let r=!0;if((Object(o.A)(t)||Object(o.A)(e))&&(r=!1),Object(o.A)(t)&&Object(o.A)(e)&&(r=!0),r){const n=t.constructor.name,r=e.constructor.name;if(n!==r)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(r))}if(Array.isArray(t)&&Array.isArray(e)){const n=Object(a.c)(t),r=Object(a.c)(e);if(!Object(o.a)(n,r))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(r,"]"))}const s=Object(o.A)(t)?t:Object(o.m)(t),i=Object(o.A)(e)?e:Object(o.m)(e);if(s.length!==i.length)throw new Error("Arrays have different lengths actual: ".concat(s.length," vs ")+"expected: ".concat(i.length,".\n")+"Actual:   ".concat(s,".\n")+"Expected: ".concat(i,"."));for(let a=0;a<i.length;++a){const t=s[a],e=i[a];if(!n(t,e))throw new Error("Arrays differ: actual[".concat(a,"] = ").concat(t,", expected[").concat(a,"] = ").concat(e,".\n")+"Actual:   ".concat(s,".\n")+"Expected: ".concat(i,"."))}}function d(t,e){t().then(()=>e.fail(),()=>e())}function h(t,e){const n="string"===typeof e||"number"===typeof e||"boolean"===typeof e?[e]:e;return Object(o.z)(t)||Object(o.z)(t[0])||Object(o.z)(e)||Object(o.z)(e[0])?l(t,n,(t,e)=>t==e):l(t,e,(t,e)=>f(t,e,0))}function p(t,e,n){if(null==n&&(n=u()),!f(t,e,n))throw new Error("Numbers differ: actual === ".concat(t,", expected === ").concat(e))}function f(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function m(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error("Value out of range:".concat(t[r]," low: ").concat(e,", high: ").concat(n))}function b(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}function g(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?g(n):t[e]=Object(s.encodeString)(n)}return t}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(7),s=n(4),i=n(8);const c=Object(s.b)({conv2DBackpropFilter_:function(t,e,n,s,c){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",l=arguments.length>6?arguments[6]:void 0,d=t;3===t.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let h=e;3===h.rank&&(h=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),o.b(4===d.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(d.shape,".")),o.b(4===h.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(h.shape,".")),o.b(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,"."));const p="NHWC"===u?d.shape[3]:d.shape[1],f="NHWC"===u?h.shape[3]:h.shape[1];o.b(p===n[2],()=>"Error in conv2dDerFilter: depth of input ".concat(p,") must ")+"match input depth in filter (".concat(n[2],".")),o.b(f===n[3],()=>"Error in conv2dDerFilter: depth of dy (".concat(f,") must ")+"match output depth for filter (".concat(n[3],").")),null!=l&&o.b(o.v(c),()=>"Error in conv2dDerFilter: pad must be an integer when using, "+"dimRoundingMode ".concat(l," but got pad ").concat(c,"."));const m={x:d,dy:h},b={strides:s,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:n};return r.a.runKernel(a.D,m,b)}})},function(t,e,n){"use strict";(function(t){n(5);var e=n(132),r=n(22);const a=Object(r.c)();a.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),a.registerFlag("IS_BROWSER",()=>e.isBrowser()),a.registerFlag("IS_NODE",()=>"undefined"!==typeof t&&"undefined"!==typeof t.versions&&"undefined"!==typeof t.versions.node),a.registerFlag("IS_CHROME",()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),a.registerFlag("PROD",()=>!1),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>a.getBool("DEBUG")),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),a.registerFlag("IS_TEST",()=>!1),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0)}).call(this,n(131))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return a}));class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class a{decComplexRef(t){}time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(t){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return o("batchMatMul")}fusedBatchMatMul(t){let{a:e,b:n,transposeA:r,transposeB:a,bias:s,activation:i,preluActivationWeights:c}=t;return o("fusedBatchMatMul")}slice(t,e,n){return o("slice")}stridedSlice(t,e,n,r){return o("stridedSlice")}unstack(t,e){return o("unstack")}reverse(t,e){return o("reverse")}concat(t,e){return o("concat")}neg(t){return o("neg")}add(t,e){return o("add")}addN(t){return o("addN")}subtract(t,e){return o("subtract")}multiply(t,e){return o("multiply")}realDivide(t,e){return o("realDivide")}floorDiv(t,e){return o("floorDiv")}sum(t,e){return o("sum")}prod(t,e){return o("prod")}unsortedSegmentSum(t,e,n){return o("unsortedSegmentSum")}argMin(t,e){return o("argMin")}argMax(t,e){return o("argMax")}equal(t,e){return o("equal")}notEqual(t,e){return o("notEqual")}less(t,e){return o("less")}lessEqual(t,e){return o("lessEqual")}greater(t,e){return o("greater")}greaterEqual(t,e){return o("greaterEqual")}logicalNot(t){return o("logicalNot")}logicalAnd(t,e){return o("logicalAnd")}logicalOr(t,e){return o("logicalOr")}where(t){return o("where")}select(t,e,n){return o("select")}topk(t,e,n){return o("topk")}min(t,e){return o("min")}minimum(t,e){return o("minimum")}mod(t,e){return o("mod")}max(t,e){return o("max")}maximum(t,e){return o("maximum")}all(t,e){return o("all")}any(t,e){return o("any")}squaredDifference(t,e){return o("squaredDifference")}ceil(t){return o("ceil")}floor(t){return o("floor")}round(t){return o("round")}sign(t){return o("sign")}isNaN(t){return o("isNaN")}isInf(t){return o("isInf")}isFinite(t){return o("isFinite")}pow(t,e){return o("pow")}exp(t){return o("exp")}expm1(t){return o("expm1")}softmax(t,e){return o("softmax")}log(t){return o("log")}log1p(t){return o("log1p")}sqrt(t){return o("sqrt")}rsqrt(t){return o("rsqrt")}square(t){return o("square")}reciprocal(t){return o("reciprocal")}relu(t){return o("relu")}relu6(t){return o("relu6")}prelu(t,e){return o("prelu")}elu(t){return o("elu")}eluDer(t,e){return o("eluDer")}selu(t){return o("selu")}int(t){return o("int")}clip(t,e,n){return o("clip")}abs(t){return o("abs")}complexAbs(t){return o("complexAbs")}sigmoid(t){return o("sigmoid")}softplus(t){return o("softplus")}sin(t){return o("sin")}cos(t){return o("cos")}tan(t){return o("tan")}asin(t){return o("asin")}acos(t){return o("acos")}atan(t){return o("atan")}atan2(t,e){return o("atan2")}sinh(t){return o("sinh")}cosh(t){return o("cosh")}tanh(t){return o("tanh")}asinh(t){return o("asinh")}acosh(t){return o("acosh")}atanh(t){return o("atanh")}erf(t){return o("erf")}step(t,e){return o("step")}fusedConv2d(t){let{input:e,filter:n,convInfo:r,bias:a,activation:s,preluActivationWeights:i}=t;return o("fusedConv2d")}conv2d(t,e,n){return o("conv2d")}conv2dDerInput(t,e,n){return o("conv2dDerInput")}conv2dDerFilter(t,e,n){return o("conv2dDerFilter")}fusedDepthwiseConv2D(t){let{input:e,filter:n,convInfo:r,bias:a,activation:s,preluActivationWeights:i}=t;return o("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return o("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return o("depthwiseConv2DDerFilter")}conv3d(t,e,n){return o("conv3d")}conv3dDerInput(t,e,n){return o("conv3dDerInput")}conv3dDerFilter(t,e,n){return o("conv3dDerFilter")}maxPool(t,e){return o("maxPool")}maxPoolBackprop(t,e,n,r){return o("maxPoolBackprop")}avgPool(t,e){return o("avgPool")}avgPoolBackprop(t,e,n){return o("avgPoolBackprop")}avgPool3d(t,e){return o("avgPool3d")}avgPool3dBackprop(t,e,n){return o("avgPool3dBackprop")}maxPool3d(t,e){return o("maxPool3d")}maxPool3dBackprop(t,e,n,r){return o("maxPool3dBackprop")}reshape(t,e){return o("reshape")}cast(t,e){return o("cast")}tile(t,e){return o("tile")}pad(t,e,n){return o("pad")}transpose(t,e){return o("transpose")}gather(t,e,n){return o("gather")}gatherND(t,e){return o("gatherND")}scatterND(t,e,n){return o("scatterND")}batchToSpaceND(t,e,n){return o("batchToSpaceND")}spaceToBatchND(t,e,n){return o("spaceToBatchND")}resizeBilinear(t,e,n,r,a){return o("resizeBilinear")}resizeBilinearBackprop(t,e,n){return o("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r,a){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return o("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,a,s){return o("batchNorm")}localResponseNormalization4D(t,e,n,r,a){return o("localResponseNormalization4D")}LRNGrad(t,e,n,r,a,s,i){return o("LRNGrad")}multinomial(t,e,n,r){return o("multinomial")}oneHot(t,e,n,r){return o("oneHot")}cumsum(t,e,n,r){return o("cumsum")}nonMaxSuppression(t,e,n,r,a){return o("nonMaxSuppression")}fft(t){return o("fft")}ifft(t){return o("ifft")}complex(t,e){return o("complex")}real(t){return o("real")}imag(t){return o("imag")}cropAndResize(t,e,n,r,a,s){return o("cropAndResize")}depthToSpace(t,e,n){return o("depthToSpace")}split(t,e,n){return o("split")}sparseToDense(t,e,n,r){return o("sparseToDense")}diag(t){return o("diag")}fill(t,e,n){return o("fill")}onesLike(t){return o("onesLike")}zerosLike(t){return o("zerosLike")}linspace(t,e,n){return o("linspace")}dispose(){return o("dispose")}}function o(t){throw new Error("'".concat(t,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({tanh_:function(t){const e={x:Object(o.a)(t,"x","tanh")};return r.a.runKernel(a.Sc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(5),a=n(3);function o(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:o};return r.a.runKernel(a.ic,{},s)}},function(t,e,n){"use strict";n.d(e,"c",(function(){return ut})),n.d(e,"a",(function(){return B})),n.d(e,"b",(function(){return U}));var r=n(0),a=n(97),o=function(t,e){return(o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function s(t,e){function n(){this.constructor=t}o(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}var i=function(){return(i=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)};function c(t,e,n,r){return new(n||(n=Promise))((function(a,o){function s(t){try{c(r.next(t))}catch(t){o(t)}}function i(t){try{c(r.throw(t))}catch(t){o(t)}}function c(t){t.done?a(t.value):new n((function(e){e(t.value)})).then(s,i)}c((r=r.apply(t,e||[])).next())}))}function u(t,e){var n,r,a,o,s={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function i(o){return function(i){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(a=2&o[0]?r.return:o[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,o[1])).done)return a;switch(r=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!(a=(a=s.trys).length>0&&a[a.length-1])&&(6===o[0]||2===o[0])){s=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){s.label=o[1];break}if(6===o[0]&&s.label<a[1]){s.label=a[1],a=o;break}if(a&&s.label<a[2]){s.label=a[2],s.ops.push(o);break}a[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,i])}}}var l=function(){function t(t,e){this.model=t,this.outputStride=e;var n=this.model.inputs[0].shape;r.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return t.prototype.predict=function(t){var e=this;return Object(r.tidy)((function(){var n=e.preprocessInput(Object(r.cast)(t,"float32")),a=Object(r.expandDims)(n,0),o=e.model.predict(a).map((function(t){return Object(r.squeeze)(t,[0])})),s=e.nameOutputResults(o);return{heatmapScores:Object(r.sigmoid)(s.heatmap),offsets:s.offsets,displacementFwd:s.displacementFwd,displacementBwd:s.displacementBwd}}))},t.prototype.dispose=function(){this.model.dispose()},t}(),d=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.preprocessInput=function(t){return Object(r.tidy)((function(){return Object(r.sub)(Object(r.div)(t,127.5),1)}))},e.prototype.nameOutputResults=function(t){return{offsets:t[0],heatmap:t[1],displacementFwd:t[2],displacementBwd:t[3]}},e}(l);function h(t){return Math.floor(t/2)}var p=function(){function t(t,e){this.priorityQueue=new Array(t),this.numberOfElements=-1,this.getElementValue=e}return t.prototype.enqueue=function(t){this.priorityQueue[++this.numberOfElements]=t,this.swim(this.numberOfElements)},t.prototype.dequeue=function(){var t=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,t},t.prototype.empty=function(){return-1===this.numberOfElements},t.prototype.size=function(){return this.numberOfElements+1},t.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},t.prototype.max=function(){return this.priorityQueue[0]},t.prototype.swim=function(t){for(;t>0&&this.less(h(t),t);)this.exchange(t,h(t)),t=h(t)},t.prototype.sink=function(t){for(;2*t<=this.numberOfElements;){var e=2*t;if(e<this.numberOfElements&&this.less(e,e+1)&&e++,!this.less(t,e))break;this.exchange(t,e),t=e}},t.prototype.getValueAt=function(t){return this.getElementValue(this.priorityQueue[t])},t.prototype.less=function(t,e){return this.getValueAt(t)<this.getValueAt(e)},t.prototype.exchange=function(t,e){var n=this.priorityQueue[t];this.priorityQueue[t]=this.priorityQueue[e],this.priorityQueue[e]=n},t}();function f(t,e,n,r,a,o){for(var s=o.shape,i=s[0],c=s[1],u=!0,l=Math.max(n-a,0),d=Math.min(n+a+1,i),h=l;h<d;++h){for(var p=Math.max(r-a,0),f=Math.min(r+a+1,c),m=p;m<f;++m)if(o.get(h,m,t)>e){u=!1;break}if(!u)break}return u}var m=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],b=m.length,g=m.reduce((function(t,e,n){return t[e]=n,t}),{}),y=[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(t){var e=t[0],n=t[1];return[g[e],g[n]]}));function v(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+b)}}function x(t,e,n){var r=v(t.heatmapY,t.heatmapX,t.id,n),a=r.y,o=r.x;return{x:t.heatmapX*e+o,y:t.heatmapY*e+a}}function w(t,e,n){return t<e?e:t>n?n:t}function k(t,e){return{x:t.x+e.x,y:t.y+e.y}}var O=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(t){var e=t[0],n=t[1];return[g[e],g[n]]})),I=O.map((function(t){return t[1]})),S=O.map((function(t){return t[0]}));function N(t,e,n,r){return{y:w(Math.round(t.y/e),0,n-1),x:w(Math.round(t.x/e),0,r-1)}}function T(t,e,n,r,a,o,s,i){void 0===i&&(i=2);for(var c=r.shape,u=c[0],l=c[1],d=function(t,e,n){var r=n.shape[2]/2;return{y:n.get(e.y,e.x,t),x:n.get(e.y,e.x,r+t)}}(t,N(e.position,o,u,l),s),h=k(e.position,d),p=0;p<i;p++){var f=N(h,o,u,l),b=v(f.y,f.x,n,a);h=k({x:f.x*o,y:f.y*o},{x:b.x,y:b.y})}var g=N(h,o,u,l),y=r.get(g.y,g.x,n);return{position:h,part:m[n],score:y}}function j(t,e,n,r,a,o){var s=e.shape[2],i=I.length,c=new Array(s),u=t.part,l=t.score,d=x(u,r,n);c[u.id]={score:l,part:m[u.id],position:d};for(var h=i-1;h>=0;--h){var p=I[h],f=S[h];c[p]&&!c[f]&&(c[f]=T(h,c[p],f,e,n,r,o))}for(h=0;h<i;++h)p=S[h],f=I[h],c[p]&&!c[f]&&(c[f]=T(h,c[p],f,e,n,r,a));return c}function C(t,e,n,r){var a=n.x,o=n.y;return t.some((function(t){var n=t.keypoints[r].position;return function(t,e,n,r){var a=n-t,o=r-e;return a*a+o*o}(o,a,n.y,n.x)<=e}))}function E(t,e,n){return n.reduce((function(n,r,a){var o=r.position,s=r.score;return C(t,e,o,a)||(n+=s),n}),0)/n.length}function A(t,e,n,r,a,o,s,i){void 0===s&&(s=.5),void 0===i&&(i=20);for(var c=[],u=function(t,e,n){for(var r=n.shape,a=r[0],o=r[1],s=r[2],i=new p(a*o*s,(function(t){return t.score})),c=0;c<a;++c)for(var u=0;u<o;++u)for(var l=0;l<s;++l){var d=n.get(c,u,l);d<t||f(l,d,c,u,e,n)&&i.enqueue({score:d,part:{heatmapY:c,heatmapX:u,id:l}})}return i}(s,1,t),l=i*i;c.length<o&&!u.empty();){var d=u.dequeue();if(!C(c,l,x(d.part,a,e),d.part.id)){var h=j(d,t,e,a,n,r),m=E(c,l,h);c.push({keypoints:h,score:m})}}return c}function _(t){var e=t.shape,n=e[0],a=e[1],o=e[2];return Object(r.tidy)((function(){var e=Object(r.reshape)(t,[n*a,o]),s=Object(r.argMax)(e,0),i=Object(r.expandDims)(Object(r.div)(s,Object(r.scalar)(a,"int32")),1),c=Object(r.expandDims)(function(t,e){return Object(r.tidy)((function(){var n=Object(r.div)(t,Object(r.scalar)(e,"int32"));return Object(r.sub)(t,Object(r.mul)(n,Object(r.scalar)(e,"int32")))}))}(s,a),1);return Object(r.concat)([i,c],1)}))}function R(t,e,n,r){return{y:r.get(t,e,n),x:r.get(t,e,n+b)}}function D(t,e,n){return Object(r.tidy)((function(){var a=function(t,e){for(var n=[],a=0;a<b;a++){var o=R(t.get(a,0).valueOf(),t.get(a,1).valueOf(),a,e),s=o.x,i=o.y;n.push(i),n.push(s)}return Object(r.tensor2d)(n,[b,2])}(t,n);return Object(r.add)(Object(r.cast)(Object(r.mul)(t.toTensor(),Object(r.scalar)(e,"int32")),"float32"),a)}))}function F(t,e,n){return c(this,void 0,void 0,(function(){var r,a,o,s,i,c,l,d,h,p;return u(this,(function(u){switch(u.label){case 0:return r=0,a=_(t),[4,Promise.all([t.buffer(),e.buffer(),a.buffer()])];case 1:return o=u.sent(),s=o[0],i=o[1],c=o[2],[4,(l=D(c,n,i)).buffer()];case 2:return d=u.sent(),h=Array.from(function(t,e){for(var n=e.shape[0],r=new Float32Array(n),a=0;a<n;a++){var o=e.get(a,0),s=e.get(a,1);r[a]=t.get(o,s,a)}return r}(s,c)),p=h.map((function(t,e){return r+=t,{position:{y:d.get(e,0),x:d.get(e,1)},part:m[e],score:t}})),a.dispose(),l.dispose(),[2,{keypoints:p,score:r/p.length}]}}))}))}var M="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",z="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";var L=[-123.15,-115.9,-103.06],P=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.preprocessInput=function(t){return Object(r.add)(t,L)},e.prototype.nameOutputResults=function(t){var e=t[0],n=t[1];return{offsets:t[2],heatmap:t[3],displacementFwd:e,displacementBwd:n}},e}(l);function B(t,e){return y.reduce((function(n,r){var a=r[0],o=r[1];return function(t,e,n){return t<n||e<n}(t[a].score,t[o].score,e)||n.push([t[a],t[o]]),n}),[])}var W=Number.NEGATIVE_INFINITY,V=Number.POSITIVE_INFINITY;function U(t){return t.reduce((function(t,e){var n=t.maxX,r=t.maxY,a=t.minX,o=t.minY,s=e.position,i=s.x,c=s.y;return{maxX:Math.max(n,i),maxY:Math.max(r,c),minX:Math.min(a,i),minY:Math.min(o,c)}}),{maxX:W,maxY:W,minX:V,minY:V})}function G(t){return c(this,void 0,void 0,(function(){return u(this,(function(e){return[2,Promise.all(t.map((function(t){return t.buffer()})))]}))}))}function H(t,e){return Y(t,e)?t:Math.floor(t/e)*e+1}function q(t){r.util.assert("number"==typeof t||"object"==typeof t,(function(){return"Invalid inputResolution "+t+". Should be a number or an object with width and height"})),"object"==typeof t&&(r.util.assert("number"==typeof t.width,(function(){return"inputResolution.width has a value of "+t.width+" which is invalid; it must be a number"})),r.util.assert("number"==typeof t.height,(function(){return"inputResolution.height has a value of "+t.height+" which is invalid; it must be a number"})))}function K(t,e){return q(t),"object"==typeof t?[H(t.height,e),H(t.width,e)]:[H(t,e),H(t,e)]}var X=[8,16,32];function Y(t,e){return(t-1)%e==0}function Q(t){return t instanceof r.Tensor?[t.shape[0],t.shape[1]]:[t.height,t.width]}function Z(t,e){var n=e[0],a=e[1],o=Q(t),s=o[0],i=o[1],c=a/n,u=[0,0,0,0],l=u[0],d=u[1],h=u[2],p=u[3];return i/s<c?(l=0,d=0,h=Math.round(.5*(c*s-i)),p=Math.round(.5*(c*s-i))):(l=Math.round(.5*(1/c*i-s)),d=Math.round(.5*(1/c*i-s)),h=0,p=0),{resized:Object(r.tidy)((function(){var e=function(t){return t instanceof r.Tensor?t:r.browser.fromPixels(t)}(t);return e=Object(r.pad3d)(e,[[l,d],[h,p],[0,0]]),r.image.resizeBilinear(e,[n,a])})),padding:{top:l,left:h,right:p,bottom:d}}}function J(t,e,n,r,a){var o=e[0],s=e[1],i=n[0],c=n[1],u=function(t,e,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===e&&0===r&&0===a?t:t.map((function(t){return function(t,e,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:t.score,keypoints:t.keypoints.map((function(t){var o=t.score,s=t.part,i=t.position;return{score:o,part:s,position:{x:i.x*n+a,y:i.y*e+r}}}))}}(t,e,n,r,a)}))}(t,(o+r.top+r.bottom)/i,(s+r.left+r.right)/c,-r.top,-r.left);return a?function(t,e){return e<=0?t:t.map((function(t){return function(t,e){return{score:t.score,keypoints:t.keypoints.map((function(t){var n=t.score,r=t.part,a=t.position;return{score:n,part:r,position:{x:e-1-a.x,y:a.y}}}))}}(t,e)}))}(u,s):u}var $={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:257},tt=["MobileNetV1","ResNet50"],et={MobileNetV1:[8,16,32],ResNet50:[32,16]},nt={MobileNetV1:[.5,.75,1],ResNet50:[1]},rt=[1,2,4];var at={flipHorizontal:!1},ot={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};var st=function(){function t(t,e){(function(t){r.util.assert("number"==typeof t,(function(){return"outputStride is not a number"})),r.util.assert(X.indexOf(t)>=0,(function(){return"outputStride of "+t+" is invalid. It must be either 8, 16, or 32"}))})(t.outputStride),function(t,e){r.util.assert("number"==typeof t[0]&&"number"==typeof t[1],(function(){return"both resolution values must be a number but had values "+t})),r.util.assert(Y(t[0],e),(function(){return"height of "+t[0]+" is invalid for output stride "+e+"."})),r.util.assert(Y(t[1],e),(function(){return"width of "+t[1]+" is invalid for output stride "+e+"."}))}(e,t.outputStride),this.baseModel=t,this.inputResolution=e}return t.prototype.estimateMultiplePoses=function(t,e){return void 0===e&&(e=ot),c(this,void 0,void 0,(function(){var n,r,a,o,s,c,l,d,h,p,f,m,b,g,y,v,x,w,k,O,I;return u(this,(function(u){switch(u.label){case 0:return n=i({},ot,e),function(t){var e=t.maxDetections,n=t.scoreThreshold,r=t.nmsRadius;if(e<=0)throw new Error("Invalid maxDetections "+e+". Should be > 0");if(n<0||n>1)throw new Error("Invalid scoreThreshold "+n+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".")}(e),r=this.baseModel.outputStride,a=this.inputResolution,o=Q(t),s=o[0],c=o[1],l=Z(t,a),d=l.resized,h=l.padding,p=this.baseModel.predict(d),f=p.heatmapScores,m=p.offsets,b=p.displacementFwd,g=p.displacementBwd,[4,G([f,m,b,g])];case 1:return y=u.sent(),v=y[0],x=y[1],w=y[2],k=y[3],[4,A(v,x,w,k,r,n.maxDetections,n.scoreThreshold,n.nmsRadius)];case 2:return O=u.sent(),I=J(O,[s,c],a,h,n.flipHorizontal),f.dispose(),m.dispose(),b.dispose(),g.dispose(),d.dispose(),[2,I]}}))}))},t.prototype.estimateSinglePose=function(t,e){return void 0===e&&(e=at),c(this,void 0,void 0,(function(){var n,r,a,o,s,c,l,d,h,p,f,m,b,g,y,v;return u(this,(function(u){switch(u.label){case 0:return n=i({},at,e),r=this.baseModel.outputStride,a=this.inputResolution,o=Q(t),s=o[0],c=o[1],l=Z(t,a),d=l.resized,h=l.padding,p=this.baseModel.predict(d),f=p.heatmapScores,m=p.offsets,b=p.displacementFwd,g=p.displacementBwd,[4,F(f,m,r)];case 1:return y=u.sent(),v=J([y],[s,c],a,h,n.flipHorizontal),f.dispose(),m.dispose(),b.dispose(),g.dispose(),d.dispose(),[2,v[0]]}}))}))},t.prototype.estimatePoses=function(t,e){return c(this,void 0,void 0,(function(){return u(this,(function(n){switch(n.label){case 0:return"single-person"!==e.decodingMethod?[3,2]:[4,this.estimateSinglePose(t,e)];case 1:return[2,[n.sent()]];case 2:return[2,this.estimateMultiplePoses(t,e)]}}))}))},t.prototype.dispose=function(){this.baseModel.dispose()},t}();function it(t){return c(this,void 0,void 0,(function(){var e,n,o,s,i,c,l;return u(this,(function(u){switch(u.label){case 0:if(e=t.outputStride,n=t.quantBytes,o=t.multiplier,null==r)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return s=function(t,e,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+t+".json";return 4===n?M+"float/"+r[e]+"/"+a:M+"quant"+n+"/"+r[e]+"/"+a}(e,o,n),[4,Object(a.a)(t.modelUrl||s)];case 1:return i=u.sent(),c=new d(i,e),l=K(t.inputResolution,c.outputStride),[2,new st(c,l)]}}))}))}function ct(t){return c(this,void 0,void 0,(function(){var e,n,o,s,i,c;return u(this,(function(u){switch(u.label){case 0:if(e=t.outputStride,n=t.quantBytes,null==r)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return o=function(t,e){var n="model-stride"+t+".json";return 4===e?z+"float/"+n:z+"quant"+e+"/"+n}(e,n),[4,Object(a.a)(t.modelUrl||o)];case 1:return s=u.sent(),i=new P(s,e),c=K(t.inputResolution,i.outputStride),[2,new st(i,c)]}}))}))}function ut(t){return void 0===t&&(t=$),c(this,void 0,void 0,(function(){return u(this,(function(e){return"ResNet50"===(t=function(t){if(null==(t=t||$).architecture&&(t.architecture="MobileNetV1"),tt.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+tt);if(null==t.inputResolution&&(t.inputResolution=257),q(t.inputResolution),null==t.outputStride&&(t.outputStride=16),et[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+et[t.architecture]+" for architecture "+t.architecture+".");if(null==t.multiplier&&(t.multiplier=1),nt[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+nt[t.architecture]+" for architecture "+t.architecture+".");if(null==t.quantBytes&&(t.quantBytes=4),rt.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+rt+" for architecture "+t.architecture+".");if("MobileNetV1"===t.architecture&&32===t.outputStride&&1!==t.multiplier)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return t}(t)).architecture?[2,ct(t)]:"MobileNetV1"===t.architecture?[2,it(t)]:[2,null]}))}))}},function(t,e,n){"use strict";(function(t,r){let a;function o(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof t)e=t;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(t,e){const n=function(){const t=o();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return s}))}).call(this,n(130),n(131))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(r){"object"===typeof window&&(n=window)}t.exports=n},function(t,e){var n,r,a=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function s(){throw new Error("clearTimeout has not been defined")}function i(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"===typeof clearTimeout?clearTimeout:s}catch(t){r=s}}();var c,u=[],l=!1,d=-1;function h(){l&&c&&(l=!1,c.length?u=c.concat(u):d=-1,u.length&&p())}function p(){if(!l){var t=i(h);l=!0;for(var e=u.length;e;){for(c=u,u=[];++d<e;)c&&c[d].run();d=-1,e=u.length}c=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===s||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}a.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new f(t,e)),1!==u.length||l||i(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(t){return[]},a.binding=function(t){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(t){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(t,e,n){"use strict";function r(){if("undefined"!==typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function a(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(e),n.d(e,"isMobile",(function(){return r})),n.d(e,"isBrowser",(function(){return a}))},function(t,e,n){"use strict";function r(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(t.toString(e))}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({all_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","all","bool"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.f,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({any_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=Object(o.a)(t,"x","any","bool"),i={x:s},c={axis:e,keepDims:n};return r.a.runKernel(a.g,i,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({argMax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","argMax"),s={x:n},i={axis:e};return r.a.runKernel(a.h,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({argMin_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","argMin"),s={x:n},i={axis:e};return r.a.runKernel(a.i,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(21),s=n(1),i=n(4);const c=Object(i.b)({atan2_:function(t,e){let n=Object(s.a)(t,"a","atan2"),i=Object(s.a)(e,"b","atan2");[n,i]=Object(o.makeTypesMatch)(n,i);const c={a:n,b:i};return r.a.runKernel(a.m,c)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(1),a=n(7),o=n(56),s=n(26),i=n(4),c=n(8);const u=Object(i.b)({conv1d_:function(t,e,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=Object(r.a)(t,"x","conv1d"),p=Object(r.a)(e,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,".")),a.b(3===p.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,".")),null!=d&&a.b(a.v(i),()=>"Error in conv1d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(i,".")),a.b(f.shape[2]===p.shape[1],()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],".")),a.b(s.h(n,l),()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(l,"'")),a.b("NWC"===u,()=>"Error in conv1d: got dataFormat of ".concat(u," but only NWC is currently supported."));const b=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(c.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],v=[1,l],x="NHWC",w=Object(o.a)(g,b,y,i,x,v,d);return m?Object(c.a)(w,[w.shape[2],w.shape[3]]):Object(c.a)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(1),a=n(120),o=n(4);const s=Object(o.b)({conv2dTranspose_:function(t,e,n,o,s,i){const c=Object(r.a)(t,"x","conv2dTranspose"),u=Object(r.a)(e,"filter","conv2dTranspose");return Object(a.a)(n,c,u,o,s,"NHWC",i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({cosh_:function(t){const e={x:Object(o.a)(t,"x","cosh")};return r.a.runKernel(a.J,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({depthToSpace_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=Object(o.a)(t,"x","depthToSpace"),c="NHWC"===n?i.shape[1]:i.shape[2],u="NHWC"===n?i.shape[2]:i.shape[3],l="NHWC"===n?i.shape[3]:i.shape[1];s.b(c*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(e,"  for depthToSpace with input shape\n    ").concat(i.shape)),s.b(u*e>=0,()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(u," and ").concat(e," for depthToSpace with input shape\n        ").concat(i.shape)),s.b(l%(e*e)===0,()=>"Dimension size must be evenly divisible by ".concat(e*e," but is ").concat(l," for depthToSpace with input shape ").concat(i.shape));const d={x:i},h={blockSize:e,dataFormat:n};return r.a.runKernel(a.N,d,h)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4),c=n(8);const u=Object(i.b)({dilation2d_:function(t,e,n,i){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=Object(o.a)(t,"x","dilation2d"),h=Object(o.a)(e,"filter","dilation2d");s.b(3===d.rank||4===d.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,".")),s.b(3===h.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,".")),s.b("NHWC"===l,()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(l));let p=d,f=!1;3===d.rank&&(p=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:i,dilations:u},g=r.a.runKernel(a.S,m,b);return f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(21),a=n(1),o=n(14),s=n(68),i=n(4),c=n(31),u=n(20);const l=Object(i.b)({divNoNan_:function(t,e){let n=Object(a.a)(t,"a","div"),i=Object(a.a)(e,"b","div");[n,i]=Object(r.makeTypesMatch)(n,i);const l=Object(o.a)(n,i),d=Object(u.a)(l),h=Object(s.a)(i,d);return Object(c.a)(h,d,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(1),a=n(7),o=n(25),s=n(4),i=n(8);const c=Object(s.b)({dot_:function(t,e){const n=Object(r.a)(t,"t1","dot"),s=Object(r.a)(e,"t2","dot");a.b((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(s.rank,"."));const c=1===n.rank?n.size:n.shape[1],u=1===s.rank?s.size:s.shape[0];if(a.b(c===u,()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(u,".")),1===n.rank&&1===s.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(s,[-1,1]),r=Object(o.a)(t,e);return Object(i.a)(r,[])}if(1===n.rank&&2===s.rank){const t=Object(i.a)(n,[1,-1]),e=Object(i.a)(s,[s.shape[0],s.shape[1]]),r=Object(o.a)(t,e);return Object(i.a)(r,[r.size])}if(2===n.rank&&1===s.rank){const t=Object(i.a)(s,[-1,1]),e=Object(o.a)(n,t);return Object(i.a)(e,[e.size])}{const t=Object(i.a)(s,[s.shape[0],s.shape[1]]);return Object(o.a)(n,t)}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4),c=n(8);const u=Object(i.b)({localResponseNormalization_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const l=Object(o.a)(t,"x","localResponseNormalization");s.b(4===l.rank||3===l.rank,()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(l.rank,".")),s.b(s.v(e),()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(e,"."));let d=l,h=!1;3===l.rank&&(h=!0,d=Object(c.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:e,bias:n,alpha:i,beta:u},m=r.a.runKernel(a.vb,p,f);return h?Object(c.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({log1p_:function(t){const e={x:Object(o.a)(t,"x","log1p")};return r.a.runKernel(a.Cb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({softplus_:function(t){const e={x:Object(o.a)(t,"x","softplus")};return r.a.runKernel(a.Gc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(1),a=n(16),o=n(51),s=n(83),i=n(111),c=n(4);const u=Object(c.b)({logicalXor_:function(t,e){const n=Object(r.a)(t,"a","logicalXor","bool"),c=Object(r.a)(e,"b","logicalXor","bool");return Object(a.a)(n.shape,c.shape),Object(o.a)(Object(i.a)(t,e),Object(s.a)(Object(o.a)(t,e)))}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({mirrorPad_:function(t,e,n){s.b("reflect"===n||"symmetric"===n,()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,"."));const i=Object(o.a)(t,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.b(e.length===i.rank,()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(e.length,"."));const c="reflect"===n?1:0;for(let r=0;r<i.rank;r++)s.b(2===e[r].length,()=>"Invalid number of paddings. Must be length of 2 each."),s.b(e[r][0]>=0&&e[r][0]<=i.shape[r]-c&&e[r][1]>=0&&e[r][1]<=i.shape[r]-c,()=>"Padding in dimension ".concat(r," cannot be greater than or equal ")+"to ".concat(i.shape[r]-c," or less than 0 for input of ")+"shape ".concat(i.shape));const u={paddings:e,mode:n},l={x:i};return r.a.runKernel(a.Rb,l,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n(1),a=n(7),o=n(103),s=n(80),i=n(26),c=n(112),u=n(4),l=n(8),d=n(86);const h=Object(u.b)({pool_:function(t,e,n,u,h,p){null==h&&(h=[1,1]),null==p&&(p=1),0===u&&(u="valid");const f=Object(r.a)(t,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(i.h(p,h),()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'"));const g=i.e(m.shape,e,p,h,u),y=[g.dilationHeight,g.dilationWidth];let v;v="same"===u?function(t,e){const n=t.map((t,n)=>t+(t-1)*(e[n]-1)).map(t=>t-1),r=n.map(t=>Math.floor(t/2)),a=n.map((t,e)=>t-r[e]);return n.map((t,e)=>[r[e],a[e]])}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const x=1===y[0]&&1===y[1],[w,k]=function(t,e,n){const r=n.map(t=>t[0]),a=n.map(t=>t[1]),o=t.concat(r,a),s=e.map((t,e)=>(t-o[e]%t)%t),i=a.map((t,e)=>t+s[e]),c=e.map((t,e)=>[r[e],i[e]]),u=e.map((t,e)=>[0,s[e]]);return[c,u]}([g.inHeight,g.inWidth],y,v),O=x?u:"valid",I=x?m:Object(d.a)(m,y,w),S=("avg"===n?()=>Object(o.a)(I,e,p,O):()=>Object(c.a)(I,e,p,O))(),N=x?S:Object(s.a)(S,y,k);return b?Object(l.a)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(11),i=n(4);const c=Object(i.b)({prod_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=Object(o.a)(t,"x","prod");"bool"===i.dtype&&(i=Object(s.a)(i,"int32"));const c={x:i},u={axis:e,keepDims:n};return r.a.runKernel(a.hc,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(40),a=n(4),o=n(90);const s=Object(a.b)({randomUniform_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",s=arguments.length>4?arguments[4]:void 0;const i=Object(r.a)(t,a),c=new o.c(e,n,null,s);for(let r=0;r<i.values.length;r++)i.values[r]=c.nextValue();return i.toTensor()}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({rsqrt_:function(t){const e={x:Object(o.a)(t,"x","rsqrt")};return r.a.runKernel(a.wc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({selu_:function(t){const e={x:Object(o.a)(t,"x","selu")};return r.a.runKernel(a.zc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(1),a=n(7),o=n(56),s=n(67),i=n(4),c=n(8);const u=Object(i.b)({separableConv2d_:function(t,e,n,i,u){let l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=Object(r.a)(t,"x","separableConv2d"),p=Object(r.a)(e,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,".")),a.b(4===p.rank,()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,".")),a.b(4===f.rank,()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,".")),a.b(1===f.shape[0],()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],".")),a.b(1===f.shape[1],()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],"."));const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(g*y,", ")+"but got ".concat(f.shape[2],"."));const v=Object(s.a)(m,p,i,u,d,l),x=1,w=Object(o.a)(v,f,x,"valid",d);return b?Object(c.a)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({sin_:function(t){const e={x:Object(o.a)(t,"x","sin")};return r.a.runKernel(a.Cc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({sinh_:function(t){const e={x:Object(o.a)(t,"x","sinh")};return r.a.runKernel(a.Dc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return f}));var r=n(50),a=n(28),o=n(108),s=n(9),i=n(4),c=n(95),u=n(8),l=n(42),d=n(15),h=n(24),p=n(96);const f=Object(i.b)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let i;if(e<=2){const r=Object(u.a)(t,[n,e]);i=Object(p.a)(r)}else{const f=[n,2*(e-1)],m=Object(u.a)(Object(c.a)(t),[n,e]),b=Object(u.a)(Object(o.a)(t),[n,e]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,e-2]),1),y=Object(s.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,e-2]),1),Object(d.a)(-1)),v=Object(a.a)([m,g],1),x=Object(a.a)([b,y],1),w=Object(u.a)(Object(r.a)(v,x),[f[0],f[1]]);i=Object(p.a)(w)}if(i=Object(c.a)(i),3===t.rank&&0!==t.shape[0]){const e=i,n=t.shape[0];i=Object(u.a)(i,[n,i.shape[0]/n,i.shape[1]]),e.dispose()}return i}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(1),a=n(7),o=n(43);function s(t,e,n){if(Object(a.d)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Object(r.c)(t,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(o.a)(t,e,s,n)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({topk_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const s=Object(o.a)(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(e>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(e));const c={x:s},u={k:e,sorted:n},[l,d]=r.a.runKernel(a.Uc,c,u);return{values:l,indices:d}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({unique_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=Object(o.a)(t,"x","unique","string_or_numeric");Object(s.b)(n.rank>0,()=>"The input tensor must be at least 1D");const i={x:n},c={axis:e},[u,l]=r.a.runKernel(a.Wc,i,c);return{values:u,indices:l}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(164),a=n(1);const o=async function(t){const e=Object(a.a)(t,"condition","whereAsync","bool"),n=await e.data(),o=Object(r.a)(e.shape,n);return t!==e&&e.dispose(),o}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(40);function a(t,e){const n=[];for(let r=0;r<e.length;r++)e[r]&&n.push(r);const a=Object(r.a)(t,"int32"),o=Object(r.a)([n.length,t.length],"int32");for(let r=0;r<n.length;r++){const e=a.indexToLoc(n[r]),s=r*t.length;o.values.set(e,s)}return o.toTensor()}},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(7),s=n(4),i=n(8);const c=Object(s.b)({conv3DBackpropInput_:function(t,e,n,s,c){o.b(t.length===e.rank,()=>"Length of inShape "+"(".concat(t.length,") and rank of dy (").concat(e.rank,") must match"));let u=t,l=e,d=!1;4===e.rank&&(d=!0,l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),u=[1,t[0],t[1],t[2],t[3]]);const h=u[4],p=l.shape[4];o.b(5===u.length,()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(u.length,".")),o.b(5===l.rank,()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(l.rank)),o.b(5===n.rank,()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank)),o.b(h===n.shape[3],()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],".")),o.b(p===n.shape[4],()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],"."));const f={dy:l,filter:n},m={pad:c,strides:s,inputShape:u},b=r.a.runKernel(a.H,f,m);return d?Object(i.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4),c=n(8);const u=Object(i.b)({resizeNearestNeighbor_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=Object(o.a)(t,"images","resizeNearestNeighbor");s.b(3===u.rank||4===u.rank,()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),s.b(2===e.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(e,".")),s.b("float32"===u.dtype||"int32"===u.dtype,()=>"`images` must have `int32` or `float32` as dtype"),s.b(!1===i||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:i,size:e},f=r.a.runKernel(a.rc,h,p);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4),c=n(8);const u=Object(i.b)({resizeBilinear_:function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const u=Object(o.a)(t,"images","resizeBilinear");s.b(3===u.rank||4===u.rank,()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(u.rank,".")),s.b(2===e.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(e,".")),s.b(!1===i||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let l=u,d=!1;3===u.rank&&(d=!0,l=Object(c.a)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=e,h={images:l},p={alignCorners:n,halfPixelCenters:i,size:e},f=r.a.runKernel(a.pc,h,p);return d?Object(c.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(4),s=n(8);const i=Object(o.b)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,o,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,l=e,d=!1;3===e.rank&&(d=!0,l=Object(s.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={dy:l,filter:n},p={strides:o,pad:i,dimRoundingMode:u,dilations:c,inputShape:t},f=r.a.runKernel(a.Q,h,p);return d?Object(s.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(4),s=n(8);const i=Object(o.b)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,o,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],u=arguments.length>6?arguments[6]:void 0,l=t;3===t.rank&&(l=Object(s.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=Object(s.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const h={x:l,dy:d},p={strides:o,pad:i,dimRoundingMode:u,dilations:c,filterShape:n};return r.a.runKernel(a.P,h,p)}})},function(t,e,n){"use strict";(function(t){var r=n(240),a=n(241),o=n(242);function s(){return c.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(t,e){if(s()<e)throw new RangeError("Invalid typed array length");return c.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=c.prototype:(null===t&&(t=new c(e)),t.length=e),t}function c(t,e,n){if(!c.TYPED_ARRAY_SUPPORT&&!(this instanceof c))return new c(t,e,n);if("number"===typeof t){if("string"===typeof e)throw new Error("If encoding is specified then the first argument must be a string");return d(this,t)}return u(this,t,e,n)}function u(t,e,n,r){if("number"===typeof e)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError("'offset' is out of bounds");if(e.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);c.TYPED_ARRAY_SUPPORT?(t=e).__proto__=c.prototype:t=h(t,e);return t}(t,e,n,r):"string"===typeof e?function(t,e,n){"string"===typeof n&&""!==n||(n="utf8");if(!c.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(e,n),a=(t=i(t,r)).write(e,n);a!==r&&(t=t.slice(0,a));return t}(t,e,n):function(t,e){if(c.isBuffer(e)){var n=0|p(e.length);return 0===(t=i(t,n)).length||e.copy(t,0,0,n),t}if(e){if("undefined"!==typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||"length"in e)return"number"!==typeof e.length||(r=e.length)!==r?i(t,0):h(t,e);if("Buffer"===e.type&&o(e.data))return h(t,e.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(t,e)}function l(t){if("number"!==typeof t)throw new TypeError('"size" argument must be a number');if(t<0)throw new RangeError('"size" argument must not be negative')}function d(t,e){if(l(e),t=i(t,e<0?0:0|p(e)),!c.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function h(t,e){var n=e.length<0?0:0|p(e.length);t=i(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function p(t){if(t>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|t}function f(t,e){if(c.isBuffer(t))return t.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;"string"!==typeof t&&(t=""+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(t).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(t).length;default:if(r)return B(t).length;e=(""+e).toLowerCase(),r=!0}}function m(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(e>>>=0))return"";for(t||(t="utf8");;)switch(t){case"hex":return C(this,e,n);case"utf8":case"utf-8":return N(this,e,n);case"ascii":return T(this,e,n);case"latin1":case"binary":return j(this,e,n);case"base64":return S(this,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return E(this,e,n);default:if(r)throw new TypeError("Unknown encoding: "+t);t=(t+"").toLowerCase(),r=!0}}function b(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function g(t,e,n,r,a){if(0===t.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(a)return-1;n=t.length-1}else if(n<0){if(!a)return-1;n=0}if("string"===typeof e&&(e=c.from(e,r)),c.isBuffer(e))return 0===e.length?-1:y(t,e,n,r,a);if("number"===typeof e)return e&=255,c.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):y(t,[e],n,r,a);throw new TypeError("val must be string, number or Buffer")}function y(t,e,n,r,a){var o,s=1,i=t.length,c=e.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(t.length<2||e.length<2)return-1;s=2,i/=2,c/=2,n/=2}function u(t,e){return 1===s?t[e]:t.readUInt16BE(e*s)}if(a){var l=-1;for(o=n;o<i;o++)if(u(t,o)===u(e,-1===l?0:o-l)){if(-1===l&&(l=o),o-l+1===c)return l*s}else-1!==l&&(o-=o-l),l=-1}else for(n+c>i&&(n=i-c),o=n;o>=0;o--){for(var d=!0,h=0;h<c;h++)if(u(t,o+h)!==u(e,h)){d=!1;break}if(d)return o}return-1}function v(t,e,n,r){n=Number(n)||0;var a=t.length-n;r?(r=Number(r))>a&&(r=a):r=a;var o=e.length;if(o%2!==0)throw new TypeError("Invalid hex string");r>o/2&&(r=o/2);for(var s=0;s<r;++s){var i=parseInt(e.substr(2*s,2),16);if(isNaN(i))return s;t[n+s]=i}return s}function x(t,e,n,r){return V(B(e,t.length-n),t,n,r)}function w(t,e,n,r){return V(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function k(t,e,n,r){return w(t,e,n,r)}function O(t,e,n,r){return V(W(e),t,n,r)}function I(t,e,n,r){return V(function(t,e){for(var n,r,a,o=[],s=0;s<t.length&&!((e-=2)<0);++s)n=t.charCodeAt(s),r=n>>8,a=n%256,o.push(a),o.push(r);return o}(e,t.length-n),t,n,r)}function S(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function N(t,e,n){n=Math.min(t.length,n);for(var r=[],a=e;a<n;){var o,s,i,c,u=t[a],l=null,d=u>239?4:u>223?3:u>191?2:1;if(a+d<=n)switch(d){case 1:u<128&&(l=u);break;case 2:128===(192&(o=t[a+1]))&&(c=(31&u)<<6|63&o)>127&&(l=c);break;case 3:o=t[a+1],s=t[a+2],128===(192&o)&&128===(192&s)&&(c=(15&u)<<12|(63&o)<<6|63&s)>2047&&(c<55296||c>57343)&&(l=c);break;case 4:o=t[a+1],s=t[a+2],i=t[a+3],128===(192&o)&&128===(192&s)&&128===(192&i)&&(c=(15&u)<<18|(63&o)<<12|(63&s)<<6|63&i)>65535&&c<1114112&&(l=c)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(t){var e=t.length;if(e<=4096)return String.fromCharCode.apply(String,t);var n="",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=4096));return n}(r)}e.Buffer=c,e.SlowBuffer=function(t){+t!=t&&(t=0);return c.alloc(+t)},e.INSPECT_MAX_BYTES=50,c.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&"function"===typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(e){return!1}}(),e.kMaxLength=s(),c.poolSize=8192,c._augment=function(t){return t.__proto__=c.prototype,t},c.from=function(t,e,n){return u(null,t,e,n)},c.TYPED_ARRAY_SUPPORT&&(c.prototype.__proto__=Uint8Array.prototype,c.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&c[Symbol.species]===c&&Object.defineProperty(c,Symbol.species,{value:null,configurable:!0})),c.alloc=function(t,e,n){return function(t,e,n,r){return l(e),e<=0?i(t,e):void 0!==n?"string"===typeof r?i(t,e).fill(n,r):i(t,e).fill(n):i(t,e)}(null,t,e,n)},c.allocUnsafe=function(t){return d(null,t)},c.allocUnsafeSlow=function(t){return d(null,t)},c.isBuffer=function(t){return!(null==t||!t._isBuffer)},c.compare=function(t,e){if(!c.isBuffer(t)||!c.isBuffer(e))throw new TypeError("Arguments must be Buffers");if(t===e)return 0;for(var n=t.length,r=e.length,a=0,o=Math.min(n,r);a<o;++a)if(t[a]!==e[a]){n=t[a],r=e[a];break}return n<r?-1:r<n?1:0},c.isEncoding=function(t){switch(String(t).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(t,e){if(!o(t))throw new TypeError('"list" argument must be an Array of Buffers');if(0===t.length)return c.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=c.allocUnsafe(e),a=0;for(n=0;n<t.length;++n){var s=t[n];if(!c.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(r,a),a+=s.length}return r},c.byteLength=f,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var t=this.length;if(t%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var e=0;e<t;e+=2)b(this,e,e+1);return this},c.prototype.swap32=function(){var t=this.length;if(t%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var e=0;e<t;e+=4)b(this,e,e+3),b(this,e+1,e+2);return this},c.prototype.swap64=function(){var t=this.length;if(t%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var e=0;e<t;e+=8)b(this,e,e+7),b(this,e+1,e+6),b(this,e+2,e+5),b(this,e+3,e+4);return this},c.prototype.toString=function(){var t=0|this.length;return 0===t?"":0===arguments.length?N(this,0,t):m.apply(this,arguments)},c.prototype.equals=function(t){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t||0===c.compare(this,t)},c.prototype.inspect=function(){var t="",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(t+=" ... ")),"<Buffer "+t+">"},c.prototype.compare=function(t,e,n,r,a){if(!c.isBuffer(t))throw new TypeError("Argument must be a Buffer");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),e<0||n>t.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&e>=n)return 0;if(r>=a)return-1;if(e>=n)return 1;if(this===t)return 0;for(var o=(a>>>=0)-(r>>>=0),s=(n>>>=0)-(e>>>=0),i=Math.min(o,s),u=this.slice(r,a),l=t.slice(e,n),d=0;d<i;++d)if(u[d]!==l[d]){o=u[d],s=l[d];break}return o<s?-1:s<o?1:0},c.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},c.prototype.indexOf=function(t,e,n){return g(this,t,e,n,!0)},c.prototype.lastIndexOf=function(t,e,n){return g(this,t,e,n,!1)},c.prototype.write=function(t,e,n,r){if(void 0===e)r="utf8",n=this.length,e=0;else if(void 0===n&&"string"===typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");e|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-e;if((void 0===n||n>a)&&(n=a),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return v(this,t,e,n);case"utf8":case"utf-8":return x(this,t,e,n);case"ascii":return w(this,t,e,n);case"latin1":case"binary":return k(this,t,e,n);case"base64":return O(this,t,e,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,t,e,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function T(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(127&t[a]);return r}function j(t,e,n){var r="";n=Math.min(t.length,n);for(var a=e;a<n;++a)r+=String.fromCharCode(t[a]);return r}function C(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var a="",o=e;o<n;++o)a+=P(t[o]);return a}function E(t,e,n){for(var r=t.slice(e,n),a="",o=0;o<r.length;o+=2)a+=String.fromCharCode(r[o]+256*r[o+1]);return a}function A(t,e,n){if(t%1!==0||t<0)throw new RangeError("offset is not uint");if(t+e>n)throw new RangeError("Trying to access beyond buffer length")}function _(t,e,n,r,a,o){if(!c.isBuffer(t))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>a||e<o)throw new RangeError('"value" argument is out of bounds');if(n+r>t.length)throw new RangeError("Index out of range")}function R(t,e,n,r){e<0&&(e=65535+e+1);for(var a=0,o=Math.min(t.length-n,2);a<o;++a)t[n+a]=(e&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function D(t,e,n,r){e<0&&(e=4294967295+e+1);for(var a=0,o=Math.min(t.length-n,4);a<o;++a)t[n+a]=e>>>8*(r?a:3-a)&255}function F(t,e,n,r,a,o){if(n+r>t.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(t,e,n,r,o){return o||F(t,0,n,4),a.write(t,e,n,r,23,4),n+4}function z(t,e,n,r,o){return o||F(t,0,n,8),a.write(t,e,n,r,52,8),n+8}c.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),c.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=c.prototype;else{var a=e-t;n=new c(a,void 0);for(var o=0;o<a;++o)n[o]=this[o+t]}return n},c.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,o=0;++o<e&&(a*=256);)r+=this[t+o]*a;return r},c.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t+--e],a=1;e>0&&(a*=256);)r+=this[t+--e]*a;return r},c.prototype.readUInt8=function(t,e){return e||A(t,1,this.length),this[t]},c.prototype.readUInt16LE=function(t,e){return e||A(t,2,this.length),this[t]|this[t+1]<<8},c.prototype.readUInt16BE=function(t,e){return e||A(t,2,this.length),this[t]<<8|this[t+1]},c.prototype.readUInt32LE=function(t,e){return e||A(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},c.prototype.readUInt32BE=function(t,e){return e||A(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},c.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=this[t],a=1,o=0;++o<e&&(a*=256);)r+=this[t+o]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*e)),r},c.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||A(t,e,this.length);for(var r=e,a=1,o=this[t+--r];r>0&&(a*=256);)o+=this[t+--r]*a;return o>=(a*=128)&&(o-=Math.pow(2,8*e)),o},c.prototype.readInt8=function(t,e){return e||A(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},c.prototype.readInt16LE=function(t,e){e||A(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(t,e){e||A(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(t,e){return e||A(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},c.prototype.readInt32BE=function(t,e){return e||A(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},c.prototype.readFloatLE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!0,23,4)},c.prototype.readFloatBE=function(t,e){return e||A(t,4,this.length),a.read(this,t,!1,23,4)},c.prototype.readDoubleLE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!0,52,8)},c.prototype.readDoubleBE=function(t,e){return e||A(t,8,this.length),a.read(this,t,!1,52,8)},c.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||_(this,t,e,n,Math.pow(2,8*n)-1,0);var a=1,o=0;for(this[e]=255&t;++o<n&&(a*=256);)this[e+o]=t/a&255;return e+n},c.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||_(this,t,e,n,Math.pow(2,8*n)-1,0);var a=n-1,o=1;for(this[e+a]=255&t;--a>=0&&(o*=256);)this[e+a]=t/o&255;return e+n},c.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,1,255,0),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},c.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},c.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,65535,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},c.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):D(this,t,e,!0),e+4},c.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,4294967295,0),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},c.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);_(this,t,e,n,a-1,-a)}var o=0,s=1,i=0;for(this[e]=255&t;++o<n&&(s*=256);)t<0&&0===i&&0!==this[e+o-1]&&(i=1),this[e+o]=(t/s>>0)-i&255;return e+n},c.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var a=Math.pow(2,8*n-1);_(this,t,e,n,a-1,-a)}var o=n-1,s=1,i=0;for(this[e+o]=255&t;--o>=0&&(s*=256);)t<0&&0===i&&0!==this[e+o+1]&&(i=1),this[e+o]=(t/s>>0)-i&255;return e+n},c.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,1,127,-128),c.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},c.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):R(this,t,e,!0),e+2},c.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,2,32767,-32768),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):R(this,t,e,!1),e+2},c.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,2147483647,-2147483648),c.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):D(this,t,e,!0),e+4},c.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||_(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),c.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):D(this,t,e,!1),e+4},c.prototype.writeFloatLE=function(t,e,n){return M(this,t,e,!0,n)},c.prototype.writeFloatBE=function(t,e,n){return M(this,t,e,!1,n)},c.prototype.writeDoubleLE=function(t,e,n){return z(this,t,e,!0,n)},c.prototype.writeDoubleBE=function(t,e,n){return z(this,t,e,!1,n)},c.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var a,o=r-n;if(this===t&&n<e&&e<r)for(a=o-1;a>=0;--a)t[a+e]=this[a+n];else if(o<1e3||!c.TYPED_ARRAY_SUPPORT)for(a=0;a<o;++a)t[a+e]=this[a+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+o),e);return o},c.prototype.fill=function(t,e,n,r){if("string"===typeof t){if("string"===typeof e?(r=e,e=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),1===t.length){var a=t.charCodeAt(0);a<256&&(t=a)}if(void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!c.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"===typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError("Out of range index");if(n<=e)return this;var o;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),"number"===typeof t)for(o=e;o<n;++o)this[o]=t;else{var s=c.isBuffer(t)?t:B(new c(t,r).toString()),i=s.length;for(o=0;o<n-e;++o)this[o+e]=s[o%i]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function P(t){return t<16?"0"+t.toString(16):t.toString(16)}function B(t,e){var n;e=e||1/0;for(var r=t.length,a=null,o=[],s=0;s<r;++s){if((n=t.charCodeAt(s))>55295&&n<57344){if(!a){if(n>56319){(e-=3)>-1&&o.push(239,191,189);continue}if(s+1===r){(e-=3)>-1&&o.push(239,191,189);continue}a=n;continue}if(n<56320){(e-=3)>-1&&o.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(e-=3)>-1&&o.push(239,191,189);if(a=null,n<128){if((e-=1)<0)break;o.push(n)}else if(n<2048){if((e-=2)<0)break;o.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;o.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((e-=4)<0)break;o.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return o}function W(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\s+|\s+$/g,"")}(t).replace(L,"")).length<2)return"";for(;t.length%4!==0;)t+="=";return t}(t))}function V(t,e,n,r){for(var a=0;a<r&&!(a+n>=e.length||a>=t.length);++a)e[a+n]=t[a];return a}}).call(this,n(130))},function(t,e,n){"use strict";var r=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function s(t){if(null===t||void 0===t)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(t)}t.exports=function(){try{if(!Object.assign)return!1;var t=new String("abc");if(t[5]="de","5"===Object.getOwnPropertyNames(t)[0])return!1;for(var e={},n=0;n<10;n++)e["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(e).map((function(t){return e[t]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(t){r[t]=t})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(a){return!1}}()?Object.assign:function(t,e){for(var n,i,c=s(t),u=1;u<arguments.length;u++){for(var l in n=Object(arguments[u]))a.call(n,l)&&(c[l]=n[l]);if(r){i=r(n);for(var d=0;d<i.length;d++)o.call(n,i[d])&&(c[i[d]]=n[i[d]])}}return c}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({acos_:function(t){const e={x:Object(o.a)(t,"x","acos")};return r.a.runKernel(a.b,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({acosh_:function(t){const e={x:Object(o.a)(t,"x","acosh")};return r.a.runKernel(a.c,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({addN_:function(t){s.b(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),s.b(t.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(t.length));const e=t.map((t,e)=>Object(o.a)(t,"tensors".concat(e),"addN")),n=e[0];e.forEach(t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(t=>{if(!s.a(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const i=e;return r.a.runKernel(a.e,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({asin_:function(t){const e={x:Object(o.a)(t,"x","asin")};return r.a.runKernel(a.j,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({asinh_:function(t){const e={x:Object(o.a)(t,"x","asinh")};return r.a.runKernel(a.k,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({atan_:function(t){const e={x:Object(o.a)(t,"x","atan")};return r.a.runKernel(a.l,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({atanh_:function(t){const e={x:Object(o.a)(t,"x","atanh")};return r.a.runKernel(a.n,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return h}));var r=n(5),a=n(19),o=n(3),s=n(1),i=n(7),c=n(11),u=n(26),l=n(4),d=n(8);const h=Object(l.b)({avgPool3d_:function(t,e,n,l,h){let p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",f=arguments.length>6?arguments[6]:void 0;null==f?f=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const m=Object(s.a)(t,"x","avgPool3d","float32");let b=m,g=!1;4===m.rank&&(g=!0,b=Object(d.a)(m,[1,m.shape[0],m.shape[1],m.shape[2],m.shape[3]])),i.b(5===b.rank,()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(b.rank,".")),i.b("NDHWC"===p,()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(p)),i.b(u.h(n,f),()=>"Error in avgPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(f,"'")),null!=h&&i.b(i.v(l),()=>"Error in avgPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(h," but got pad ").concat(l,"."));const y={x:b},v={filterSize:e,strides:n,pad:l,dimRoundingMode:h,dataFormat:p,dilations:f};let x=r.a.runKernel(o.p,y,v);return x=Object(c.a)(x,b.dtype),g?Object(d.a)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({bincount_:function(t,e,n){const i=Object(o.a)(t,"x","bincount"),c=Object(o.a)(e,"weights","bincount");s.b("int32"===i.dtype,()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(i.dtype)),s.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),s.b(c.size===i.size||0===c.size,()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(i.shape,", weights shape: ")+"".concat(c.shape,"."));const u={x:i,weights:c},l={size:n};return r.a.runKernel(a.u,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({ceil_:function(t){const e={x:Object(o.a)(t,"x","ceil")};return r.a.runKernel(a.x,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({clipByValue_:function(t,e,n){const i=Object(o.a)(t,"x","clipByValue");s.b(e<=n,()=>"Error in clip: min (".concat(e,") must be ")+"less than or equal to max (".concat(n,")."));const c={x:i},u={clipValueMin:e,clipValueMax:n};return r.a.runKernel(a.y,c,u)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(26),c=n(4),u=n(8);const l=Object(c.b)({conv3d_:function(t,e,n,c){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const h=Object(o.a)(t,"x","conv3d"),p=Object(o.a)(e,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),s.b(5===f.rank,()=>"Error in conv3d: input must be rank 5, but got rank ".concat(f.rank,".")),s.b(5===p.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(p.rank,".")),s.b(f.shape[4]===p.shape[3],()=>"Error in conv3d: depth of input (".concat(f.shape[4],") must match ")+"input depth for filter ".concat(p.shape[3],".")),s.b(Object(i.h)(n,d),()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'")),s.b("NDHWC"===l,()=>"Error in conv3d: got dataFormat of ".concat(l," but only NDHWC is currently supported."));const b={x:f,filter:p},g={strides:n,pad:c,dataFormat:l,dilations:d},y=r.a.runKernel(a.F,b,g);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(4);const c=Object(i.b)({denseBincount_:function(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const c=Object(o.a)(t,"x","denseBincount"),u=Object(o.a)(e,"weights","denseBincount");s.b("int32"===c.dtype,()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(c.dtype)),s.b(c.rank<=2,()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(c.rank,".")),s.b(n>=0,()=>"size must be non-negative, but got ".concat(n,".")),s.b(u.size===c.size||0===u.size,()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(c.shape,", weights shape: ")+"".concat(u.shape,"."));const l={x:c,weights:u},d={size:n,binaryOutput:i};return r.a.runKernel(a.M,l,d)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return u}));var r=n(5),a=n(3),o=n(1),s=n(7),i=n(11),c=n(4);const u=Object(c.b)({erf_:function(t){let e=Object(o.a)(t,"x","erf");s.b("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Object(i.a)(e,"float32"));const n={x:e};return r.a.runKernel(a.Y,n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({expm1_:function(t){const e={x:Object(o.a)(t,"x","expm1")};return r.a.runKernel(a.bb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({isFinite_:function(t){const e={x:Object(o.a)(t,"x","isFinite")};return r.a.runKernel(a.sb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({isInf_:function(t){const e={x:Object(o.a)(t,"x","isInf")};return r.a.runKernel(a.tb,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({isNaN_:function(t){const e={x:Object(o.a)(t,"x","isNaN")};return r.a.runKernel(a.ub,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(5),a=n(3);function o(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const o={start:t,stop:e,num:n};return r.a.runKernel(a.Ab,{},o)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(29),a=n(1),o=n(9),s=n(27),i=n(4),c=n(74),u=n(148);const l=Object(i.b)({logSigmoid_:function(t){const e=Object(a.a)(t,"x","logSigmoid");return Object(r.a)(t=>({value:Object(s.a)(Object(u.a)(Object(s.a)(t))),gradFunc:e=>Object(o.a)(e,Object(c.a)(Object(s.a)(t)))}))(e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n(29),a=n(1),o=n(11),s=n(35),i=n(62),c=n(59),u=n(9),l=n(4),d=n(13),h=n(18);const p=Object(l.b)({logSoftmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(a.a)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(e));const l=Object(r.a)((t,n)=>{const r=Object(c.a)(t,e,!0),a=Object(d.a)(t,r),l=Object(d.a)(Object(o.a)(a,"float32"),Object(i.a)(Object(h.a)(Object(s.a)(a),e,!0)));n([l]);return{value:l,gradFunc:(t,n)=>{const[r]=n,a=Object(s.a)(r);return Object(d.a)(t,Object(u.a)(Object(h.a)(t,e,!0),a))}}});return l(n)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return d}));var r=n(5),a=n(19),o=n(3),s=n(1),i=n(7),c=n(26),u=n(4),l=n(8);const d=Object(u.b)({maxPool3d_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,u=arguments.length>3?arguments[3]:void 0,d=arguments.length>4?arguments[4]:void 0,h=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC",p=arguments.length>6?arguments[6]:void 0;null==p?p=[1,1,1]:Object(a.b)("dilations is deprecated, this field will be gone in v3.0.0.");const f=Object(s.a)(t,"x","maxPool3d");let m=f,b=!1;4===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2],f.shape[3]])),i.b(5===m.rank,()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(m.rank,".")),i.b("NDHWC"===h,()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(h)),i.b(c.h(n,p),()=>"Error in maxPool3d: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(p,"'")),null!=d&&i.b(i.v(u),()=>"Error in maxPool3d: pad must be an integer when using, "+"dimRoundingMode ".concat(d," but got pad ").concat(u,"."));const g={x:m},y={filterSize:e,strides:n,pad:u,dimRoundingMode:d,dataFormat:h,dilations:p},v=r.a.runKernel(o.Jb,g,y);return b?Object(l.a)(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({maxPoolWithArgmax_:function(t,e,n,s){let i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const c=Object(o.a)(t,"x","maxPoolWithArgmax"),u={x:c},l={filterSize:e,strides:n,pad:s,includeBatchInIndex:i},d=r.a.runKernel(a.Mb,u,l);return{result:d[0],indexes:d[1]}}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(4),i=n(8);const c=Object(s.b)({multinomial_:function(t,e,n){let s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const c=Object(o.a)(t,"logits","multinomial"),u=c.size,l=c.rank;if(u<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(u,"."));if(l>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(l));n=n||Math.random();const d=1===l?Object(i.a)(c,[1,-1]):c,h={logits:d},p={numSamples:e,seed:n,normalized:s},f=r.a.runKernel(a.Tb,h,p);return 1===l?Object(i.a)(f,[f.size]):f}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({onesLike_:function(t){const e={x:Object(o.a)(t,"x","onesLike")};return r.a.runKernel(a.bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({reciprocal_:function(t){const e={x:Object(o.a)(t,"x","reciprocal")};return r.a.runKernel(a.lc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({round_:function(t){const e={x:Object(o.a)(t,"x","round")};return r.a.runKernel(a.vc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(6),a=n(1),o=n(7);const s=async function(t,e){const n=Object(a.a)(t,"x","setdiff1d"),s=Object(a.a)(e,"y","setdiff1d");o.b(n.dtype===s.dtype,()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(s.dtype,").")),o.b(1===n.rank,()=>"x should be 1D tensor, but got x (".concat(n.shape,").")),o.b(1===s.rank,()=>"y should be 1D tensor, but got y (".concat(s.shape,")."));const i=await n.data(),c=await s.data(),u=new Set(c);let l=0;for(let r=0;r<i.length;r++)u.has(i[r])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let r=0,a=0;r<i.length;r++)u.has(i[r])||(d.values[a]=i[r],h.values[a]=r,a++);return[d.toTensor(),h.toTensor()]}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({sign_:function(t){const e={x:Object(o.a)(t,"x","sign")};return r.a.runKernel(a.Bc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({softmax_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=Object(o.a)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(e));const s={logits:n},i={dim:e};return r.a.runKernel(a.Fc,s,i)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({stridedSlice_:function(t,e,n,s){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,l=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h=Object(o.a)(t,"x","stridedSlice"),p={x:h},f={begin:e,end:n,strides:s,beginMask:i,endMask:c,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.Oc,p,f)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({tan_:function(t){const e={x:Object(o.a)(t,"x","tan")};return r.a.runKernel(a.Rc,e)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));var r=n(40),a=n(4),o=n(90);const s=Object(a.b)({truncatedNormal_:function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,s=arguments.length>4?arguments[4]:void 0;if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const i=new o.a(e,n,a,!0,s),c=Object(r.a)(t,a);for(let r=0;r<c.values.length;r++)c.values[r]=i.nextValue();return c.toTensor()}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return p})),n.d(e,"b",(function(){return f})),n.d(e,"c",(function(){return m})),n.d(e,"d",(function(){return b})),n.d(e,"e",(function(){return g})),n.d(e,"f",(function(){return y}));var r=n(19),a=n(1),o=n(7),s=n(68),i=n(39),c=n(46),u=n(82),l=n(47),d=n(85),h=n(4);const p=Object(h.b)({equalStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","equalStrict"),i=Object(a.a)(e,"b","equalStrict");return Object(o.e)(n.shape,i.shape,"Error in equalStrict: "),Object(s.a)(n,i)}}),f=Object(h.b)({greaterEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterEqualStrict"),s=Object(a.a)(e,"b","greaterEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in greaterEqualStrict: "),Object(c.a)(n,s)}}),m=Object(h.b)({greaterStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","greaterStrict"),s=Object(a.a)(e,"b","greaterStrict");return Object(o.e)(n.shape,s.shape,"Error in greaterStrict: "),Object(i.a)(n,s)}}),b=Object(h.b)({lessEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessEqualStrict"),s=Object(a.a)(e,"b","lessEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in lessEqualStrict: "),Object(l.a)(n,s)}}),g=Object(h.b)({lessStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","lessStrict"),s=Object(a.a)(e,"b","lessStrict");return Object(o.e)(n.shape,s.shape,"Error in lessStrict: "),Object(u.a)(n,s)}}),y=Object(h.b)({notEqualStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","notEqualStrict"),s=Object(a.a)(e,"b","notEqualStrict");return Object(o.e)(n.shape,s.shape,"Error in notEqualStrict: "),Object(d.a)(n,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return b})),n.d(e,"b",(function(){return g})),n.d(e,"c",(function(){return y})),n.d(e,"d",(function(){return v})),n.d(e,"e",(function(){return x})),n.d(e,"f",(function(){return w})),n.d(e,"g",(function(){return k})),n.d(e,"h",(function(){return O})),n.d(e,"i",(function(){return I}));var r=n(19),a=n(1),o=n(7),s=n(12),i=n(14),c=n(66),u=n(84),l=n(113),d=n(9),h=n(4),p=n(41),f=n(87),m=n(13);const b=Object(h.b)({addStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","addStrict"),i=Object(a.a)(e,"b","addStrict");return o.e(n.shape,i.shape,"Error in addStrict: "),Object(s.a)(n,i)}}),g=Object(h.b)({divStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","div"),s=Object(a.a)(e,"b","div");return o.e(n.shape,s.shape,"Error in divideStrict: "),Object(i.a)(n,s)}}),y=Object(h.b)({maximumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","maximumStrict"),s=Object(a.a)(e,"b","maximumStrict");return o.e(n.shape,s.shape,"Error in maximumStrict: "),Object(c.a)(n,s)}}),v=Object(h.b)({minimumStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","minimumStrict"),s=Object(a.a)(e,"b","minimumStrict");return o.e(n.shape,s.shape,"Error in minimumStrict: "),Object(u.a)(n,s)}}),x=Object(h.b)({modStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","modStrict"),s=Object(a.a)(e,"b","modStrict");return o.e(n.shape,s.shape,"Error in modStrict: "),Object(l.a)(n,s)}}),w=Object(h.b)({mulStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","mul"),s=Object(a.a)(e,"b","mul");return o.e(n.shape,s.shape,"Error in multiplyStrict: "),Object(d.a)(n,s)}}),k=Object(h.b)({powStrict_:function(t,e){return Object(r.b)("strict variants of ops have been deprecated and will be removed in future"),o.e(t.shape,e.shape,"Error in powStrict: "),Object(p.a)(t,e)}}),O=Object(h.b)({squaredDifferenceStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","squaredDifferenceStrict"),s=Object(a.a)(e,"b","squaredDifferenceStrict");return o.e(n.shape,s.shape,"Error in squaredDifferenceStrict: "),Object(f.a)(n,s)}}),I=Object(h.b)({subStrict_:function(t,e){Object(r.b)("strict variants of ops have been deprecated and will be removed in future");const n=Object(a.a)(t,"a","subStrict"),s=Object(a.a)(e,"b","subStrict");return o.e(n.shape,s.shape,"Error in subStrict: "),Object(m.a)(n,s)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3),o=n(1),s=n(4),i=n(100);const c=Object(s.b)({scatterND_:function(t,e,n){const s=Object(o.a)(t,"indices","scatterND","int32"),c=Object(o.a)(e,"updates","scatterND");i.validateInput(c,s,n);const u={indices:s,updates:c},l={shape:n};return r.a.runKernel(a.xc,u,l)}})},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5),a=n(3),o=n(1),s=n(4);const i=Object(s.b)({gatherND_:function(t,e){const n=Object(o.a)(e,"indices","gatherND","int32"),s={params:Object(o.a)(t,"x","gatherND"),indices:n};return r.a.runKernel(a.lb,s)}})},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return a}));const r="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof t?t:t=>t();function a(){return new Promise(t=>r(()=>t()))}}).call(this,n(254).setImmediate)},function(t,e,n){"use strict";n.d(e,"a",(function(){return c}));var r=n(5),a=n(3);function o(t,e,n,r){if("int32"!==t.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(t.shape,"."));const a=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(o,"."));const s=e.size;if(0!==e.rank&&(1!==e.rank||s!==a))throw new Error("sparseValues has incorrect shape "+"".concat(e.shape,", should be [] or [").concat(a,"]"));if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}var s=n(1),i=n(4);const c=Object(i.b)({sparseToDense_:function(t,e,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const c=Object(s.a)(t,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(e,"sparseValues","sparseToDense"),l=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);o(c,u,n,l);const d={sparseIndices:c,sparseValues:u,defaultValue:l},h={outputShape:n};return r.a.runKernel(a.Ic,d,h)}})},function(t,e,n){"use strict";!function t(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(t)}catch(e){console.error(e)}}}(),t.exports=n(235)},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(t,e,n){"use strict";n.r(e),n.d(e,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(t,e,n){var r;r=function(t){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var a=e[r]={i:r,l:!1,exports:{}};return t[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"===typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(t,e,n){"use strict";n.r(e);var r=n("react"),a=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),o=function(){return(o=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var a in e=arguments[n])Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}).apply(this,arguments)},s=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};function i(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}"undefined"!==typeof window&&(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return e?new Promise((function(n,r){e.call(navigator,t,n,r)})):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}));var c=function(t){function e(e){var n=t.call(this,e)||this;return n.canvas=null,n.ctx=null,n.unmounted=!1,n.state={hasUserMedia:!1},n}return a(e,t),e.prototype.componentDidMount=function(){var t=this.state,e=this.props;i()?t.hasUserMedia||this.requestUserMedia():e.onUserMediaError("getUserMedia not supported")},e.prototype.componentDidUpdate=function(t){var e=this.props;if(i()){var n=JSON.stringify(t.audioConstraints)!==JSON.stringify(e.audioConstraints),r=JSON.stringify(t.videoConstraints)!==JSON.stringify(e.videoConstraints),a=t.minScreenshotWidth!==e.minScreenshotWidth,o=t.minScreenshotHeight!==e.minScreenshotHeight;(r||a||o)&&(this.canvas=null,this.ctx=null),(n||r)&&(this.stopAndCleanup(),this.requestUserMedia())}else e.onUserMediaError("getUserMedia not supported")},e.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},e.stopMediaStream=function(t){t&&(t.getVideoTracks&&t.getAudioTracks?(t.getVideoTracks().map((function(e){t.removeTrack(e),e.stop()})),t.getAudioTracks().map((function(e){t.removeTrack(e),e.stop()}))):t.stop())},e.prototype.stopAndCleanup=function(){var t=this.state;t.hasUserMedia&&(e.stopMediaStream(this.stream),t.src&&window.URL.revokeObjectURL(t.src))},e.prototype.getScreenshot=function(t){var e=this.state,n=this.props;if(!e.hasUserMedia)return null;var r=this.getCanvas(t);return r&&r.toDataURL(n.screenshotFormat,n.screenshotQuality)},e.prototype.getCanvas=function(t){var e=this.state,n=this.props;if(!this.video)return null;if(!e.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var r=this.video.videoWidth,a=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var o=r/a;a=(r=n.minScreenshotWidth||this.video.clientWidth)/o,n.minScreenshotHeight&&a<n.minScreenshotHeight&&(r=(a=n.minScreenshotHeight)*o)}this.canvas=document.createElement("canvas"),this.canvas.width=(null===t||void 0===t?void 0:t.width)||r,this.canvas.height=(null===t||void 0===t?void 0:t.height)||a,this.ctx=this.canvas.getContext("2d")}var s=this.ctx,i=this.canvas;return s&&i&&(n.mirrored&&(s.translate(i.width,0),s.scale(-1,1)),s.imageSmoothingEnabled=n.imageSmoothing,s.drawImage(this.video,0,0,(null===t||void 0===t?void 0:t.width)||i.width,(null===t||void 0===t?void 0:t.height)||i.height),n.mirrored&&(s.scale(-1,1),s.translate(-i.width,0))),i},e.prototype.requestUserMedia=function(){var t=this,n=this.props,r=function(r,a){var o={video:"undefined"===typeof a||a};n.audio&&(o.audio="undefined"===typeof r||r),navigator.mediaDevices.getUserMedia(o).then((function(n){t.unmounted?e.stopMediaStream(n):t.handleUserMedia(null,n)})).catch((function(e){t.handleUserMedia(e)}))};if("mediaDevices"in navigator)r(n.audioConstraints,n.videoConstraints);else{var a=function(t){return{optional:[{sourceId:t}]}},o=function(t){var e=t.deviceId;return"string"===typeof e?e:Array.isArray(e)&&e.length>0?e[0]:"object"===typeof e&&e.ideal?e.ideal:null};MediaStreamTrack.getSources((function(t){var e=null,s=null;t.forEach((function(t){"audio"===t.kind?e=t.id:"video"===t.kind&&(s=t.id)}));var i=o(n.audioConstraints);i&&(e=i);var c=o(n.videoConstraints);c&&(s=c),r(a(e),a(s))}))}},e.prototype.handleUserMedia=function(t,e){var n=this.props;if(t||!e)return this.setState({hasUserMedia:!1}),void n.onUserMediaError(t);this.stream=e;try{this.video&&(this.video.srcObject=e),this.setState({hasUserMedia:!0})}catch(r){this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(e)})}n.onUserMedia(e)},e.prototype.render=function(){var t=this,e=this.state,n=this.props,a=n.audio,i=(n.forceScreenshotSourceSize,n.onUserMedia,n.onUserMediaError,n.screenshotFormat,n.screenshotQuality,n.minScreenshotWidth,n.minScreenshotHeight,n.audioConstraints,n.videoConstraints,n.imageSmoothing,n.mirrored),c=n.style,u=void 0===c?{}:c,l=s(n,["audio","forceScreenshotSourceSize","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style"]),d=i?o(o({},u),{transform:(u.transform||"")+" scaleX(-1)"}):u;return r.createElement("video",o({autoPlay:!0,src:e.src,muted:a,playsInline:!0,ref:function(e){t.video=e},style:d},l))},e.defaultProps={audio:!0,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},e}(r.Component);e.default=c},react:function(e,n){e.exports=t}}).default},t.exports=r(n(54))},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return s}));var r=n(0),a=n(38),o=n(231);class s extends a.a{decodeUTF8(){return new i(this)}}class i extends o.a{constructor(t){super(),this.upstream=t,this.impl=new c(t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class c extends a.b{constructor(t){if(super(),this.upstream=t,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=n(256);this.decoder=new t("utf8")}}summary(){return"".concat(this.upstream.summary()," -> Utf8")}async pump(){const e=await this.upstream.next();let n,a;return!e.done&&(n=e.value,a=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(t.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n(170).Buffer)},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(38);class a extends r.a{split(t){return new o(this,t)}}class o extends a{constructor(t,e){super(),this.upstream=t,this.impl=new s(t,e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class s extends r.b{constructor(t,e){super(),this.upstream=t,this.separator=e,this.carryover=""}summary(){return"".concat(this.upstream.summary()," -> Split('").concat(this.separator,"')")}async pump(){const t=await this.upstream.next();if(t.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const e=t.value.split(this.separator);e[0]=this.carryover+e[0];for(const n of e.slice(0,-1))this.outputQueue.push(n);return this.carryover=e[e.length-1],!0}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a.scalar}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return Eo})),n.d(r,"addImpl",(function(){return wo})),n.d(r,"bincountImpl",(function(){return ps})),n.d(r,"bincountReduceImpl",(function(){return fs})),n.d(r,"ceilImpl",(function(){return gs})),n.d(r,"concatImpl",(function(){return Os})),n.d(r,"expImpl",(function(){return ui})),n.d(r,"expm1Impl",(function(){return fi})),n.d(r,"floorImpl",(function(){return Di})),n.d(r,"gatherV2Impl",(function(){return Ui})),n.d(r,"greaterImpl",(function(){return Hi})),n.d(r,"lessImpl",(function(){return ac})),n.d(r,"linSpaceImpl",(function(){return lc})),n.d(r,"logImpl",(function(){return hc})),n.d(r,"maxImpl",(function(){return Tc})),n.d(r,"maximumImpl",(function(){return Ec})),n.d(r,"minimumImpl",(function(){return Vc})),n.d(r,"multiplyImpl",(function(){return gi})),n.d(r,"negImpl",(function(){return Jc})),n.d(r,"notEqualImpl",(function(){return su})),n.d(r,"prodImpl",(function(){return vu})),n.d(r,"rangeImpl",(function(){return wu})),n.d(r,"rsqrtImpl",(function(){return Ru})),n.d(r,"sliceImpl",(function(){return us})),n.d(r,"squaredDifferenceImpl",(function(){return sl})),n.d(r,"stridedSliceImpl",(function(){return dl})),n.d(r,"subImpl",(function(){return Ii})),n.d(r,"tileImpl",(function(){return gl})),n.d(r,"topKImpl",(function(){return vl})),n.d(r,"transposeImpl",(function(){return zo})),n.d(r,"uniqueImpl",(function(){return wl}));var a=n(0);let o;function s(){return null==o&&(o=Object(a.backend)().epsilon()),o}class i extends Error{constructor(t){super(t),Object.setPrototypeOf(this,i.prototype)}}class c extends Error{constructor(t){super(t),Object.setPrototypeOf(this,c.prototype)}}class u extends Error{constructor(t){super(t),Object.setPrototypeOf(this,u.prototype)}}class l extends Error{constructor(t){super(t),Object.setPrototypeOf(this,l.prototype)}}class d extends Error{constructor(t){super(t),Object.setPrototypeOf(this,d.prototype)}}Error;function h(t,e){if(Array.isArray(t)){let n=[];for(let r=0;r<e;r++)n=n.concat(t);return n}{const n=new Array(e);return n.fill(t),n}}function p(t,e){if(!t)throw new d(e)}function f(t,e){let n=0;for(const r of t)r===e&&n++;return n}function m(t){return 1===t.length?t[0]:t}function b(t){return Array.isArray(t)?t:[t]}function g(t){const e=t.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function y(t){return t.length<=1||-1===t.indexOf("_")?t:t.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let v={};function x(t){if(null===t||void 0===t)return null;const e={};return e.className=t.getClassName(),e.config=t.getConfig(),e}function w(t){if(null!=t&&"object"===typeof t)if(Array.isArray(t))t.forEach(t=>w(t));else{const e=Object.keys(t);for(const n of e){const e=t[n];null!=e&&"object"===typeof e&&(Array.isArray(e)||"ndarray"!==e.type||"number"!==typeof e.value?w(e):t[n]=e.value)}}}function k(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof t){const a=t;let o;if(a in n)o=n[a];else if(a in v)o=v[a];else if(o=e[a],null==o)throw new u("Unknown ".concat(r,": ").concat(t,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(r," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(r," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return o}{const o=t;if(null==o.className||null==o.config)throw new u("".concat(r,": Improper config format: ")+"".concat(JSON.stringify(o),".\n")+"'className' and 'config' must set.");const s=o.className;let i,c;if(s in n?[i,c]=n[s]:s in v?[i,c]=v.className:s in e&&([i,c]=e[s]),null==i)throw new u("Unknown ".concat(r,": ").concat(s,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(r," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(r," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const t={};for(const n of Object.keys(v))t[n]=v[n];for(const a of Object.keys(n))t[a]=n[a];o.config.customObjects=t;const e=Object.assign({},v);for(const a of Object.keys(n))v[a]=n[a];w(o.config);const r=c(i,o.config,n,a);return v=Object.assign({},e),r}{const t=Object.assign({},v);for(const r of Object.keys(n))v[r]=n[r];const e=new i(o.config);return v=Object.assign({},t),e}}}function O(t,e){return-1*function(t,e){return t<e?-1:t>e?1:0}(t,e)}function I(t){if(null==t)return t;const e=[];for(const n of t)-1===e.indexOf(n)&&e.push(n);return e}function S(t){if(null==t)throw new u("Invalid value in obj: ".concat(JSON.stringify(t)));for(const e in t)if(t.hasOwnProperty(e))return!1;return!0}function N(t,e,n){if(null!=n&&t.indexOf(n)<0)throw new u("".concat(n," is not a valid ").concat(e,".  Valid values are ").concat(t," or null/undefined."))}function T(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return p(n>=0),p(r>=n),Array.isArray(t)&&t.length>=n&&t.length<=r&&t.every(t=>typeof t===e)}function j(t,e){Array.isArray(t)?(a.util.assert(t.length>0,()=>"".concat(e," is unexpectedly an empty array.")),t.forEach((t,n)=>j(t,"element ".concat(n+1," of ").concat(e)))):a.util.assert(Number.isInteger(t)&&t>0,()=>"Expected ".concat(e," to be a positive integer, but got ")+"".concat(function t(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>t(e)).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}(t),"."))}function C(t){return"relu"===t?"relu":"linear"===t?"linear":"elu"===t?"elu":null}function E(t,e){return Object(a.tidy)(()=>a.sqrt(a.sum(a.mul(t,t),e,!0)))}class A extends a.serialization.Serializable{getConfig(){return{}}}class _ extends A{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.tidy)(()=>{const e=E(t,this.axis),n=a.clipByValue(e,0,this.maxValue);return a.mul(t,a.div(n,a.add(s(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}_.className="MaxNorm",a.serialization.registerClass(_);class R extends A{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.tidy)(()=>a.div(t,a.add(s(),E(t,this.axis))))}getConfig(){return{axis:this.axis}}}R.className="UnitNorm",a.serialization.registerClass(R);class D extends A{apply(t){return a.relu(t)}}D.className="NonNeg",a.serialization.registerClass(D);class F extends A{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return Object(a.tidy)(()=>{const e=E(t,this.axis),n=a.add(a.mul(this.rate,a.clipByValue(e,this.minValue,this.maxValue)),a.mul(1-this.rate,e));return a.mul(t,a.div(n,a.add(s(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}F.className="MinMaxNorm",a.serialization.registerClass(F);const M={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function z(t){return x(t)}function L(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return k(t,a.serialization.SerializationMap.getMap().classNameMap,e,"constraint")}function P(t){if(null==t)return null;if("string"===typeof t){return L({className:t in M?M[t]:t,config:{}})}return t instanceof A?t:L(t)}const B=["channelsFirst","channelsLast"],W=["nearest","bilinear"],V=["valid","same","causal"],U=["max","avg"],G=["sum","mul","concat","ave"],H=new Map;function q(t){N(B,"DataFormat",t)}function K(t){N(V,"PaddingMode",t)}function X(t){N(U,"PoolMode",t)}const Y=[];function Q(t,e){Y.push(t);try{const t=e();return Y.pop(),t}catch(n){throw Y.pop(),n}}function Z(t){if(!tt(t))throw new Error("Not a valid tensor name: '"+t+"'");return(0===Y.length?"":Y.join("/")+"/")+t}function J(t){if(!tt(t))throw new Error("Not a valid tensor name: '"+t+"'");H.has(t)||H.set(t,0);const e=H.get(t);if(H.set(t,H.get(t)+1),e>0){const n="".concat(t,"_").concat(e);return H.set(n,1),n}return t}const $=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tt(t){return!!t.match($)}function et(t,e,n){null==e&&(e=0),null==n&&(n=t.length);let r=1;for(let a=e;a<n;++a)r*=t[a];return r}function nt(t){return t=Array.isArray(t)?new Float32Array(t):t,Object(a.tensor1d)(t)}function rt(t){return a.min(nt(t)).dataSync()[0]}function at(t){return a.max(nt(t)).dataSync()[0]}function ot(t,e){if(e<t)throw new u("end (".concat(e,") < begin (").concat(t,") is forbidden."));const n=[];for(let r=t;r<e;++r)n.push(r);return n}function st(t,e){return t.asType(e)}function it(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=t.shape.slice();return e<0&&(e=n.length+e+1),n.splice(e,0,1),t.reshape(n)}function ct(t){const e=[et(t.shape)];return t.reshape(e)}function ut(t,e,n){return Object(a.tidy)(()=>{switch(t.rank){case 1:return a.slice1d(t,e,n);case 2:return a.slice2d(t,[e,0],[n,t.shape[1]]);case 3:return a.slice3d(t,[e,0,0],[n,t.shape[1],t.shape[2]]);case 4:return a.slice4d(t,[e,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3]]);case 5:return a.slice(t,[e,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4]]);case 6:return a.slice(t,[e,0,0,0,0,0],[n,t.shape[1],t.shape[2],t.shape[3],t.shape[4],t.shape[5]]);default:throw new u("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function lt(t,e,n){return Object(a.tidy)(()=>{switch(t.rank){case 1:return a.slice1d(t,e,n);case 2:return a.slice2d(t,[0,e],[t.shape[0],n]);case 3:return a.slice3d(t,[0,0,e],[t.shape[0],t.shape[1],n]);case 4:return a.slice4d(t,[0,0,0,e],[t.shape[0],t.shape[1],t.shape[2],n]);default:throw new u("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function dt(t,e,n,r){return Object(a.tidy)(()=>{switch(t.rank){case 1:return a.slice1d(t,e,n);case 2:switch(r){case 1:return ut(t,e,n);case 2:return lt(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(r))}case 3:switch(r){case 1:return ut(t,e,n);case 2:return a.slice3d(t,[0,e,0],[t.shape[0],n,t.shape[2]]);case 3:return lt(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(r))}case 4:switch(r){case 1:return ut(t,e,n);case 2:return a.slice4d(t,[0,e,0,0],[t.shape[0],n,t.shape[2],t.shape[3]]);case 3:return a.slice4d(t,[0,0,e,0],[t.shape[0],t.shape[1],n,t.shape[3]]);case 4:return lt(t,e,n);default:throw new u("The axis is not within the rank of the tensor "+"".concat(r))}default:throw new u("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(t.rank))}})}function ht(t){let e,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(e=t[0].rank,n=0!==e?e:0),n===t[0].rank&&(n=-1),a.concat(t,n)}function pt(t,e){switch(t.rank){case 1:return a.concat1d([t,e]);case 2:return a.concat2d([t,e],0);case 3:return a.concat3d([t,e],0);case 4:return a.concat4d([t,e],0);default:throw new u("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(t.rank))}}function ft(t,e){if(Array.isArray(e)||(e=[e]),t.rank!==e.length)throw new u("The length of input n (".concat(e.length,") does not match ")+"the number of dimensions in input x (".concat(t.rank,")"));return a.tile(t,e)}function mt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,r=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0;return a.randomNormal(t,e,n,r,o)}function bt(t,e,n,r){if(t.rank<2||e.rank<2)throw new l("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(t.shape," and y shape = ").concat(e.shape));if(e.rank>=3){if(t.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new l("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(t.shape," and ")+" y shape = ".concat(e.shape))}if(2===t.rank&&2===e.rank){const o=!1,s=!1;return a.fused.matMul({a:t,b:e,transposeA:o,transposeB:s,bias:r?vt(t.rank,r,"channelsLast"):null,activation:n})}{const o=t.shape.slice(),s=o.pop();t=t.reshape([-1,s]);const i=e.shape.slice(),c=i.pop(),u=i.pop(),l=[...i,c],d=Array.from({length:e.rank},(t,n)=>0===n?e.rank-2:n<=e.rank-2?n-1:n);e=e.transpose(d).reshape([u,-1]);const h=[...o,...l],p=!1,f=!1;return a.fused.matMul({a:t,b:e,transposeA:p,transposeB:f,bias:r?vt(t.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function gt(t,e,n){return Object(a.tidy)(()=>(e=Array.isArray(e)?Object(a.tensor1d)(e,"int32"):e.toInt(),a.gather(t,e,n)))}function yt(t){return a.mul(t,t)}function vt(t,e,n){const r=e.shape;if(1!==e.rank&&e.rank!==t)throw new u("Unexpected bias dimensions: ".concat(e.rank)+"; expected it to be 1 or ".concat(t));if(5===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1,1]):e.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,1,r[0]]):e.reshape([1].concat(r))}else if(4===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1,1]):e.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,1,r[0]]):e.reshape([1].concat(r))}else if(3===t){if("channelsFirst"===n)return 1===r.length?e.reshape([1,r[0],1]):e.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?e.reshape([1,1,r[0]]):e.reshape([1].concat(r))}else if(t<3)return e;throw new u("Unsupported input rank by biasAdd: ".concat(e.rank))}function xt(t,e,n){return Object(a.tidy)(()=>(null==n&&(n="channelsLast"),q(n),t.add(vt(t.rank,e,n))))}function wt(t,e,n,r){return Object(a.tidy)(()=>a.dropout(t,e,n,r))}function kt(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?t():e()}const Ot=["fanIn","fanOut","fanAvg"],It=["normal","uniform","truncatedNormal"];class St extends a.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Nt extends St{apply(t,e){return Object(a.zeros)(t,e)}}Nt.className="Zeros",a.serialization.registerClass(Nt);class Tt extends St{apply(t,e){return Object(a.ones)(t,e)}}Tt.className="Ones",a.serialization.registerClass(Tt);class jt extends St{constructor(t){if(super(),"object"!==typeof t)throw new u("Expected argument of type ConstantConfig but got ".concat(t));if(void 0===t.value)throw new u("config must have value set but got ".concat(t));this.value=t.value}apply(t,e){return Object(a.tidy)(()=>Object(a.mul)(Object(a.scalar)(this.value),Object(a.ones)(t,e)))}getConfig(){return{value:this.value}}}jt.className="Constant",a.serialization.registerClass(jt);class Ct extends St{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Object(a.randomUniform)(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ct.className="RandomUniform",a.serialization.registerClass(Ct);class Et extends St{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("randomNormal does not support dType ".concat(e,"."));return mt(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Et.className="RandomNormal",a.serialization.registerClass(Et);class At extends St{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("truncatedNormal does not support dType ".concat(e,"."));return Object(a.truncatedNormal)(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}At.className="TruncatedNormal",a.serialization.registerClass(At);class _t extends St{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return Object(a.tidy)(()=>{if(2!==t.length||t[0]!==t[1])throw new u("Identity matrix initializer can only be used for 2D square matrices.");return Object(a.mul)(this.gain,Object(a.eye)(t[0]))})}getConfig(){return{gain:this.gain}}}_t.className="Identity",a.serialization.registerClass(_t);class Rt extends St{constructor(t){if(super(),t.scale<0)throw new u("scale must be a positive float. Got: ".concat(t.scale));var e;this.scale=null==t.scale?1:t.scale,this.mode=null==t.mode?"fanIn":t.mode,e=this.mode,N(Ot,"FanMode",e),this.distribution=null==t.distribution?"normal":t.distribution,function(t){N(It,"Distribution",t)}(this.distribution),this.seed=t.seed}apply(t,e){const n=function(t){let e,n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(q(r),2===t.length)e=t[0],n=t[1];else if(-1!==[3,4,5].indexOf(t.length)){if("channelsFirst"===r){const r=et(t,2);e=t[1]*r,n=t[0]*r}else if("channelsLast"===r){const r=et(t,0,t.length-2);e=t[t.length-2]*r,n=t[t.length-1]*r}}else{const r=et(t);e=Math.sqrt(r),n=Math.sqrt(r)}return[e,n]}(t),r=n[0],o=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,o):s/=Math.max(1,(r+o)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new l("".concat(this.getClassName()," does not support dType ").concat(e,"."));return Object(a.truncatedNormal)(t,0,n,e,this.seed)}{const n=Math.sqrt(3*s);return Object(a.randomUniform)(t,-n,n,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Rt.className="VarianceScaling",a.serialization.registerClass(Rt);class Dt extends Rt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Dt.className="GlorotUniform",a.serialization.registerClass(Dt);class Ft extends Rt{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Ft.className="GlorotNormal",a.serialization.registerClass(Ft);class Mt extends Rt{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Mt.className="HeNormal",a.serialization.registerClass(Mt);class zt extends Rt{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}zt.className="HeUniform",a.serialization.registerClass(zt);class Lt extends Rt{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Lt.className="LeCunNormal",a.serialization.registerClass(Lt);class Pt extends Rt{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return Rt.className}}Pt.className="LeCunNormal",a.serialization.registerClass(Pt);class Bt extends St{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=null==t.gain?this.DEFAULT_GAIN:t.gain,this.seed=t.seed,null!=this.seed)throw new l("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return Object(a.tidy)(()=>{if(t.length<2)throw new l("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than 2000 (".concat(t[0]*t[1],") elements: ")+"Slowness may result.");const e=mt(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let n=a.linalg.gramSchmidt(e);return t[0]>t[1]&&(n=n.transpose()),Object(a.mul)(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Bt.className="Orthogonal",a.serialization.registerClass(Bt);const Wt={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Vt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return k(t,a.serialization.SerializationMap.getMap().classNameMap,e,"initializer")}function Ut(t){return x(t)}function Gt(t){if("string"===typeof t){const e=t in Wt?Wt[t]:t;if("GlorotNormal"===e)return new Ft;if("GlorotUniform"===e)return new Dt;if("HeNormal"===e)return new Mt;if("HeUniform"===e)return new zt;if("LeCunNormal"===e)return new Lt;if("LeCunUniform"===e)return new Pt;{const t={};return t.className=e,t.config={},Vt(t)}}return t instanceof St?t:Vt(t)}let Ht=0;function qt(){return Ht++}const Kt={};function Xt(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return t in Kt||(Kt[t]=0),Kt[t]+=1,t+Kt[t].toString()}function Yt(t){return Array.isArray(t)&&Array.isArray(t[0])}function Qt(t){return 0===t.length?[]:Array.isArray(t[0])?t:[t]}function Zt(t){let e;if(Array.isArray(t)){if(1!==t.length)throw new u("Expected Tensor length to be 1; got ".concat(t.length));e=t[0]}else e=t;return e}function Jt(t){if(Array.isArray(t)&&Array.isArray(t[0])){if(1===t.length)return(t=t)[0];throw new u("Expected exactly 1 Shape; got ".concat(t.length))}return t}function $t(t){let e=0;for(const n of t)0===n.shape.length?e+=1:e+=n.shape.reduce((t,e)=>t*e);return e}class te{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Variable",r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==e?"float32":e,this.shape=t.shape,this.id=qt(),n=null==n?"Variable":n,this.originalName=Z(n),this.name=J(this.originalName),this.trainable_=r,this.constraint=o,this.val=a.variable(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(t,e){if(t.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(e.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function ee(t){return t.map(t=>t.read())}function ne(t){t.forEach(t=>{t[0].write(t[1])})}class re{constructor(t){this.dtype=t.dtype,this.shape=t.shape,null!=t.shape?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class ae{constructor(t,e,n,r,a,o,s){this.dtype=t,this.shape=e,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=s,this.id=qt(),null!=o&&(this.originalName=Z(o),this.name=J(this.originalName)),this.rank=e.length}}let oe=0;class se{constructor(t,e){this.callArgs=e,this.id=oe++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const n of t.inboundLayers)null!=n&&n.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)null!=e?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let ie=0;class ce extends a.serialization.Serializable{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=ie++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const t=this.getClassName();e=g(t)+"_"+Xt(t)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let e;if(null!=t.batchInputShape)e=t.batchInputShape;else if(null!=t.inputShape){let n=null;null!=t.batchSize&&(n=t.batchSize),e=[n].concat(t.inputShape)}this.batchInputShape=e;let n=t.dtype;null==n&&(n=t.inputDType),null==n&&(n="float32"),this.dtype=n}null!=t.weights?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new c("The layer has never been called "+"and thus has no defined ".concat(e,"."));if(this.inboundNodes.length<=t)throw new u("Asked to get ".concat(e," at node ").concat(t,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[t]}getInputAt(t){return m(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return m(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new i("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new i("Layer ".concat(this.name)+" is not connected, no input to return.");return m(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new i("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new i("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return m(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=b(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=b(this.inputSpec);if(t.length!==e.length)throw new u("Layer ".concat(this.name," expects ").concat(e.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(t));for(let n=0;n<t.length;n++){const r=t[n],a=e[n];if(null==a)continue;const o=r.rank;if(null!=a.ndim&&o!==a.ndim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(a.ndim,", found ndim=").concat(o));if(null!=a.maxNDim&&o>a.maxNDim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(a.maxNDim,", found ndim=").concat(o));if(null!=a.minNDim&&o<a.minNDim)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(a.minNDim,", found ndim=").concat(o,"."));if(null!=a.dtype&&r.dtype!==a.dtype)throw new u("Input ".concat(n," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(a.dtype,", found dtype=").concat(r.dtype,"."));if(a.axes){const t=r.shape;for(const e in a.axes){const r=Number(e),o=a.axes[e],s=r>=0?t[r]:t[t.length+r];if(null!=o&&-1===[o,null].indexOf(s))throw new u("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(r," of input shape to ")+"have value ".concat(o," but got shape ").concat(t,"."))}}if(null!=a.shape)for(let t=0;t<a.shape.length;++t){const e=a.shape[t],o=r.shape[t];if(null!=e&&null!=o&&e!==o)throw new u("Input ".concat(n," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(a.shape,", ")+"found shape=".concat(r.shape,"."))}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const n=b(t);let r=!0;for(const o of n)if(!(o instanceof ae)){r=!1;break}let a=!0;for(const o of n)if(o instanceof ae){a=!1;break}if(r===a)throw new u("Arguments to apply() must be all SymbolicTensors or all Tensors");return Q(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const e=[];for(const n of b(t))e.push(n.shape);this.build(m(e)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let r=this.call(t,e);const a=b(r),o=[];for(let t of a)-1!==n.indexOf(t)&&(t=t.clone()),o.push(t);if(r=m(o),null!=this.activityRegularizer)throw new l("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(t){t=b(t);const e=[];for(const n of t)e.push(n.shape);return m(e)}(t),r=this.computeOutputShape(n);let a;const o="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new ae(o,n,this,b(t),e,this.name,r)):new ae(o,r,this,b(t),e,this.name),this.addInboundNode(t,a,null,null,n,r,e),this._refCount++,null!=this.activityRegularizer)throw new l("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(t),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let e=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=t[r]&&t[r]!==n&&(e=!0)}),e&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(t),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new i("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const t=[];for(const e of this.inboundNodes){const n=JSON.stringify(e.outputShapes);-1===t.indexOf(n)&&t.push(n)}if(1===t.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new i("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new c("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return $t(this.weights)}build(t){this.built=!0}getWeights(){return ee(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(t){Object(a.tidy)(()=>{const e=this.weights;if(e.length!==t.length)throw new u('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(t.length,", ")+"but the layer was expecting ".concat(e.length," weights. ")+"Provided weights: ".concat(t,"..."));if(0===e.length)return;const n=[],r=ee(e);for(let o=0;o<r.length;++o){const s=r[o],i=e[o],c=t[o];if(!a.util.arraysEqual(s.shape,c.shape))throw new u("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(c.shape));n.push([i,c])}ne(n)})}addWeight(t,e,n,r,a,o,s){if(-1!==this._addedWeightNames.indexOf(t))throw new u("Duplicate weight name ".concat(t," for layer ").concat(this.name));this._addedWeightNames.push(t),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Gt("zeros"));const i=r.apply(e,n),c=new te(i,n,t,o,s);return i.dispose(),null!=a&&this.addLoss(()=>a.apply(c.read())),null==o&&(o=!0),o?this._trainableWeights.push(c):this._nonTrainableWeights.push(c),c}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=b(t),void 0!==this._losses&&null!==this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");e.forEach(t=>{if(null!=t)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")})}return null}return e}addInboundNode(t,e,n,r,a,o){let s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=b(t);e=b(e),n=b(n),r=b(r),a=Qt(a),o=Qt(o);const c=[],u=[],l=[];for(const d of i)c.push(d.sourceLayer),u.push(d.nodeIndex),l.push(d.tensorIndex);new se({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:l,inputTensors:i,outputTensors:e,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:o},s);for(let d=0;d<e.length;d++)e[d].sourceLayer=this,e[d].nodeIndex=this.inboundNodes.length-1,e[d].tensorIndex=d}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let t=0;return 0===--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}class ue extends ce{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:Xt("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new u("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new u("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new u("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=t.dtype||"float32";this.batchInputShape=e,this.dtype=n,this.inputSpec=[{shape:e}];const r=new ae(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new u("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function le(t){if(null==t.batchShape&&null==t.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=t.batchShape&&null!=t.shape)throw new u("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=t.batchShape;null!=t.shape&&null==e&&(e=[null].concat(t.shape));let n=t.dtype;null==n&&(n="float32");return new ue({batchInputShape:e,name:t.name,dtype:n,sparse:t.sparse}).inboundNodes[0].outputTensors[0]}async function de(t){if(null==t)return;const e=[],n=[],r=[];for(const a in t){const o=t[a];if("number"!==typeof o){const t=o;e.push(t.data()),n.push(a),r.push(t)}}if(e.length>0){const o=await Promise.all(e);for(let e=0;e<o.length;++e)t[n[e]]=o[e][0];Object(a.dispose)(r)}}function he(t){if(null!=t)for(const e in t){const n=t[e];"number"!==typeof n&&n.dispose()}}var pe;ue.className="InputLayer",a.serialization.registerClass(ue),function(t){t[t.SILENT=0]="SILENT",t[t.VERBOSE=1]="VERBOSE"}(pe||(pe={}));class fe{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class me{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const n of this.callbacks)await n.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class be extends fe{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const n=null==e.size?0:e.size;this.seen+=n;for(const r in e){const t=e[r];if("number"===typeof t)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+t*n;else{let e;r in this.totals?e=this.totals[r]:this.totals[r]=0;const o=Object(a.tidy)(()=>Object(a.add)(this.totals[r],Object(a.mul)(t,n)));this.totals[r]=o,null!=e&&e.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?e[n]=this.totals[n]/this.seen:Object(a.tidy)(()=>{const t=Object(a.mul)(Object(a.div)(1,this.seen),this.totals[n]);e[n]=t,this.totals[n].dispose(),Object(a.keep)(e[n])}))}}class ge extends fe{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const n in e)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(e[n])}async syncData(){const t=[],e=[],n=[];for(const a in this.history){const r=this.history[a];for(let o=0;o<r.length;++o)if("number"!==typeof r[o]){const s=r[o];t.push(s.data()),e.push(a),n.push(o)}}const r=await Promise.all(t);for(let a=0;a<r.length;++a){this.history[e[a]][n[a]].dispose(),this.history[e[a]][n[a]]=r[a][0]}}}class ye extends fe{constructor(t,e){if(super(),this.currentEpoch=0,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");a.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(t,e){let n,r=a.util.now();return function(){const o=a.util.now();return o-r<e||(r=o,n=t(...arguments)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,n){const r=[];null!=this.yield&&(await de(n),r.push(this.yield(t,e,n))),r.push(Object(a.nextFrame)()),await Promise.all(r)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await de(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const n=[];null!=this.epochEnd&&(await de(e),n.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&n.push(Object(a.nextFrame)()),await Promise.all(n)}async onBatchBegin(t,e){null!=this.batchBegin&&(await de(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const n=[];null!=this.batchEnd&&(await de(e),n.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?n.push(Object(a.nextFrame)()):a.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(n)}async onTrainBegin(t){null!=this.trainBegin&&(await de(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await de(t),await this.trainEnd(t))}}function ve(t,e){if(null==t&&(t={}),t instanceof fe)return[t];if(Array.isArray(t)&&t[0]instanceof fe)return t;return b(t).map(t=>new ye(t,e))}class xe{constructor(){}static registerCallbackConstructor(t,e){a.util.assert(t>=0&&Number.isInteger(t),()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(t)),xe.checkForDuplicate(e),null==xe.constructors[t]&&(xe.constructors[t]=[]),xe.constructors[t].push(e)}static checkForDuplicate(t){for(const e in xe.constructors){xe.constructors[+e].forEach(e=>{if(e===t)throw new u("Duplicate callback constructor.")})}}static clear(){xe.constructors={}}static createCallbacks(t){const e=[];for(const n in xe.constructors){const r=+n;t>=r&&e.push(...xe.constructors[r])}return e.map(t=>new t)}}function we(t,e,n,r,a,o,s,i,c){const u=new ge,l=[new be,...xe.createCallbacks(e)];null!=t&&l.push(...t),l.push(u);const d=new me(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:o,batchSize:s,verbose:e,doValidation:i,metrics:c}),{callbackList:d,history:u}}function ke(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return k(t,a.serialization.SerializationMap.getMap().classNameMap,e,"layer",n)}function Oe(t,e){return Object(a.tidy)(()=>{"float32"!==t.dtype&&(t=t.asType("float32"));const n=a.sum(yt(t),e,!0),r=a.fill(n.shape,s()),o=a.sqrt(a.maximum(n,r));return a.div(t,o)})}function Ie(t,e){return Object(a.tidy)(()=>a.mean(yt(a.sub(e,t)),-1))}function Se(t,e){return Object(a.tidy)(()=>a.mean(a.abs(a.sub(e,t)),-1))}function Ne(t,e){return Object(a.tidy)(()=>{const n=a.sub(t,e),r=a.clipByValue(a.abs(t),s(),Number.MAX_VALUE),o=a.abs(a.div(n,r));return a.mul(100,a.mean(o,-1))})}function Te(t,e){return Object(a.tidy)(()=>{const n=a.clipByValue(e,s(),Number.MAX_VALUE),r=a.log(a.add(1,n)),o=a.clipByValue(t,s(),Number.MAX_VALUE),i=a.log(a.add(1,o));return a.mean(yt(a.sub(r,i)),-1)})}function je(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Object(a.tidy)(()=>{if(n)e=a.softmax(e);else{const t=a.sum(e,e.shape.length-1,!0);e=a.div(e,t)}return e=a.clipByValue(e,s(),1-s()),a.neg(a.sum(a.mul(t.toFloat(),a.log(e)),e.shape.length-1))})}function Ce(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return Object(a.tidy)(()=>{const r=a.floor(ct(t)).toInt(),o=(e=a.clipByValue(e,s(),1-s())).shape;return je(a.oneHot(r,o[o.length-1]).reshape(o),e,n)})}function Ee(t,e){return Object(a.tidy)(()=>{let n;return n=a.clipByValue(e,s(),1-s()),n=a.log(a.div(n,a.sub(1,n))),a.mean(function(t,e){if(!a.util.arraysEqual(t.shape,e.shape))throw new u("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(t.shape)," and ").concat(JSON.stringify(e.shape)));return Object(a.tidy)(()=>{const n=e.relu(),r=e.abs().neg();return n.sub(e.mul(t)).add(r.exp().log1p())})}(t,n),-1)})}function Ae(t,e){return Object(a.tidy)(()=>{const n=a.clipByValue(t,s(),1),r=a.clipByValue(e,s(),1);return a.sum(a.mul(t,a.log(a.div(n,r))),-1)})}function _e(t,e){return Object(a.tidy)(()=>{const n=Oe(t,-1),r=Oe(e,-1),o=a.mul(n,r);return a.neg(a.sum(o,-1))})}xe.constructors={};const Re={meanSquaredError:Ie,meanAbsoluteError:Se,meanAbsolutePercentageError:Ne,meanSquaredLogarithmicError:Te,squaredHinge:function(t,e){return Object(a.tidy)(()=>{const n=a.maximum(0,a.sub(1,a.mul(t,e)));return a.mean(yt(n),-1)})},hinge:function(t,e){return Object(a.tidy)(()=>{const n=a.maximum(0,a.sub(1,a.mul(t,e)));return a.mean(n,-1)})},categoricalHinge:function(t,e){return Object(a.tidy)(()=>{const n=a.sum(a.mul(t,e),-1),r=a.max(a.mul(a.sub(1,t),e),-1);return a.maximum(0,a.add(1,a.sub(r,n)))})},logcosh:function(t,e){return Object(a.tidy)(()=>{const n=Math.log(2),r=a.sub(e,t),o=a.sub(a.add(r,a.softplus(a.mul(-2,r))),n);return a.mean(o,-1)})},categoricalCrossentropy:je,sparseCategoricalCrossentropy:Ce,binaryCrossentropy:Ee,kullbackLeiblerDivergence:Ae,poisson:function(t,e){return Object(a.tidy)(()=>{const n=a.log(a.add(s(),e));return a.mean(a.sub(e,a.mul(t,n)),-1)})},cosineProximity:_e};function De(t){if("string"===typeof t){if(t in Re)return Re[t];let e="Unknown loss ".concat(t);throw t.toLowerCase().includes("softmaxcrossentropy")&&(e="Unknown loss ".concat(t,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new u(e)}return t}function Fe(t,e){return Object(a.tidy)(()=>{const n=a.mul(.5,a.onesLike(e)),r=st(a.greater(e,n),t.dtype);return a.mean(a.equal(t,r),-1)})}function Me(t,e){return Object(a.tidy)(()=>st(a.equal(a.argMax(t,-1),a.argMax(e,-1)),"float32"))}function ze(t,e){return Object(a.tidy)(()=>a.logicalAnd(t.equal(1),e.equal(1)).sum().cast("float32"))}function Le(t,e){return Object(a.tidy)(()=>{const n=ze(t,e),r=function(t,e){return Object(a.tidy)(()=>a.logicalAnd(t.equal(0),e.equal(1)).sum().cast("float32"))}(t,e),o=n.add(r);return a.where(a.greater(o,0),n.div(o),0).cast("float32")})}function Pe(t,e){return Ee(t,e)}function Be(t,e){return t.rank===e.rank&&(t=t.squeeze([t.rank-1])),(e=e.argMax(-1)).dtype!==t.dtype&&(e=e.asType(t.dtype)),a.equal(t,e).asType("float32")}const We=je,Ve=Ce,Ue={binaryAccuracy:Fe,categoricalAccuracy:Me,precision:Le,categoricalCrossentropy:We,sparseCategoricalCrossentropy:Ve,mse:Ie,MSE:Ie,mae:Se,MAE:Se,mape:Ne,MAPE:Ne,cosine:_e};function Ge(t){if("string"===typeof t&&t in Ue)return Ue[t];if("string"!==typeof t&&null!=t)return t;throw new u("Unknown metric ".concat(t))}function He(t){if(p(null!==t,"Unknown LossOrMetricFn ".concat(t)),"string"===typeof t)return t;{let e;for(const n of Object.keys(Re))if(Re[n]===t){e=n;break}if(void 0!==e)return e;for(const n of Object.keys(Ue))if(Ue[n]===t){e=n;break}return void 0!==e?e:t.name}}function qe(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t||"object"!==typeof t||Object.getPrototypeOf(t)!==Object.prototype||!Ke(t))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(t);n.length>1048576&&console.warn('User-defined metadata of model "'.concat(e,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(1048576,"."))}}function Ke(t){if(null===t)return!0;if("object"===typeof t){if(Object.getPrototypeOf(t)===Object.prototype){const e=Object.keys(t);for(const n of e){if("string"!==typeof n)return!1;if(!Ke(t[n]))return!1}return!0}if(Array.isArray(t)){for(const e of t)if(!Ke(e))return!1;return!0}return!1}{const e=typeof t;return"string"===e||"number"===e||"boolean"===e}}function Xe(t){let e;return e=null!=t.collectedTrainableWeights?$t(t.collectedTrainableWeights):$t(t.trainableWeights),e}function Ye(t){let e=!0;const n=[],r=[];for(const a in t.nodesByDepth)n.push(t.nodesByDepth[a]);for(const a of n){if(a.length>1||1===a.length&&a[0].inboundLayers.length>1){e=!1;break}r.push(...a)}if(e)for(const a of t.layers){let t=!1;for(const n of a.inboundNodes)if(-1!==r.indexOf(n)){if(t){e=!1;break}t=!0}if(!e)break}return e}function Qe(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,r="";for(let a=0;a<t.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=t[a],r=r.slice(0,e[a]),r+=" ".repeat(e[a]-r.length);n(r)}function Ze(t,e,n){let r;try{r=JSON.stringify(t.outputShape)}catch(s){r="multiple"}const a=t.name,o=t.getClassName();Qe(["".concat(a," (").concat(o,")"),r,t.countParams().toString()],e,n)}function Je(t,e,n,r){let a;try{a=JSON.stringify(t.outputShape)}catch(u){a="multiple"}const o=[];for(const l of t.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(l)))for(let t=0;t<l.inboundLayers.length;++t){const e=l.inboundLayers[t].name,n=l.nodeIndices[t],r=l.tensorIndices[t];o.push("".concat(e,"[").concat(n,"][").concat(r,"]"))}const s=t.name,i=t.getClassName(),c=0===o.length?"":o[0];Qe(["".concat(s," (").concat(i,")"),a,t.countParams().toString(),c],e,r);for(let l=1;l<o.length;++l)Qe(["","","",o[l]],e,r)}function $e(t,e,n){return("inboundNodes"===t||"outputLayers"===t||"inputLayers"===t)&&0===e&&"string"===typeof n}function tn(t,e){if(null===t)return null;if("string"===typeof t)return y(t);if("number"===typeof t||"boolean"===typeof t)return t;if(t instanceof Array){const n=[],r=t.length;for(let a=0;a<r;++a){const r=t[a];$e(e,a,r)?n.push(r):n.push(tn(r,e))}return n}{const e={};for(const n of Object.keys(t)){const r=t[n];if("name"===n&&"string"===typeof r)e[n]=r;else{const t=y(n);e[t]=tn(r,t)}}return e}}class en{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof en)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,n){if(null!=this.id2Value[t.id])throw new u("Duplicate key: name=".concat(t.name,", id=").concat(t.id));return this.id2Value[t.id]=function(t,e){if(null==t.dtype||t.dtype===e.dtype)return e;try{return Object(a.cast)(e,t.dtype)}catch(n){throw new u("The dtype of the feed (".concat(e.dtype,") can not be cast to the dtype ")+"of the key '".concat(t.name,"' (").concat(t.dtype,")."))}}(t,e),this.name2Id[t.name]=t.id,null!=n&&(this.id2Mask[t.id]=n),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof ae){if(null==this.id2Value[t.id])throw new u("Nonexistent key: ".concat(t.name));return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new u("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Value[e]}}getMask(t){if(t instanceof ae){if(null==this.id2Value[t.id])throw new u("Nonexistent key: ".concat(t.name));return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new u("Feed dict has no SymbolicTensor name: ".concat(t));return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&Object(a.dispose)(this.id2Mask)}}const nn={},rn={};function an(t,e,n,r){const o=null!=n&&n.training,s=Array.isArray(t),i=s?t:[t],c=i.map(t=>t.name),u=[],l=e.names();for(const a of c)-1!==l.indexOf(a)?u.push(e.getValue(a)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=c.join(",")+"|"+e.names().join(",");let h,p;if(null==nn[d]){const t=function(t,e){a.util.assert(null!=t&&t.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===t.length){const a=sn(t[0],e);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const o of t){const{sorted:t,recipientMap:s}=sn(o,e);for(const e of t)a.has(e.name)||(n.push(e),a.add(e.name));for(const e in s)null==r[e]&&(r[e]=new Set),s[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:on(r)}}(i,e);h=t.sorted,p=t.recipientCounts,nn[d]=h,rn[d]=p}h=nn[d],p={},o||Object.assign(p,rn[d]);const f=new en(e);for(let m=0;m<h.length;++m){if(null!=r){const t=Object(a.memory)().numTensors;t>r.maxNumTensors&&(r.maxNumTensors=t),t<r.minNumTensors&&(r.minNumTensors=t)}const t=h[m],s=t.sourceLayer;if(s instanceof ue)continue;const i=[],l=[],d=[];let g=!1;for(const n of t.inputs){const t=f.getValue(n),r=f.getMask(n);i.push(t),l.push(r),null!=r&&(g=!0),o||(p[n.name]--,0!==p[n.name]||e.hasKey(n)||-1!==c.indexOf(n.name)||t.isDisposed||!0===n.sourceLayer.stateful||d.push(t))}g&&((n=n||{}).mask=l[0]);const y=b(s.apply(i,n));let v=null;s.supportsMasking&&(v=s.computeMask(i,l));const x=cn(t),w=Array.isArray(x)?x:[x];for(let e=0;e<w.length;++e){f.hasKey(w[e])||f.add(w[e],y[e],Array.isArray(v)?v[0]:v);const t=c.indexOf(w[e].name);-1!==t&&(u[t]=y[e])}o||Object(a.dispose)(d)}return f.disposeMasks(),s?u:u[0]}function on(t){const e={};for(const n in t)e[n]=t[n].size;return e}function sn(t,e){const n=new Set,r=[],a={};for(const i of e.names())n.add(i);const o=[],s=[];for(o.push(t);o.length>0;){const t=o[o.length-1];if(n.has(t.name)){o.pop();continue}const e=s[s.length-1]===o.length-1;if(0===t.inputs.length||e)o.pop(),r.push(t),n.add(t.name),e&&s.pop();else{s.push(o.length-1);for(const e of t.inputs)null==a[e.name]&&(a[e.name]=new Set),a[e.name].add(t.name),n.has(e.name)||o.push(e)}}return{sorted:r,recipientMap:a}}function cn(t){let e;if(1===t.sourceLayer.inboundNodes.length)e=t.sourceLayer.output;else{let n=null;for(let e=0;e<t.sourceLayer.inboundNodes.length;++e)for(const r of t.sourceLayer.inboundNodes[e].outputTensors)if(r.id===t.id){n=e;break}e=t.sourceLayer.getOutputAt(n)}return e}class un extends ce{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const t=this.getClassName().toLowerCase();this.name=Xt(t)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],I(this.inputs).length!==this.inputs.length)throw new u("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map(t=>t.name)));I(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map(t=>t.name))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const c of this.outputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(n)}for(const c of this.inputs){const t=c.sourceLayer,e=c.nodeIndex,n=c.tensorIndex;p(0===e,"input layer has >1 nodes"),p(0===n,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(e),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let c=0;c<this.inputLayers.length;c++){const e=this.inputLayers[c];if(!(e instanceof ue))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(t.inputs,". ")+"Input ".concat(c," (0-based) originates ")+"from layer type ".concat(e.getClassName(),"."));this.inputNames.push(e.name),this.feedInputShapes.push(e.batchInputShape),this.feedInputNames.push(e.name)}for(const c of this.outputLayers)this.outputNames.push(c.name);this.internalInputShapes=this.inputs.map(t=>t.shape),this.internalOutputShapes=this.outputs.map(t=>t.shape);const e={},n={},r={},a={},o={},s=[],i=(t,e,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=t.sourceLayer,a=t.nodeIndex,u=t.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new c("The tensor ".concat(t.name,' at layer "').concat(r.name,'" ')+"is part of a cycle.");if(-1!==e.indexOf(l))return;this.containerNodes.add(un.nodeKey(r,a)),r.id in o||(o[r.id]=Object.keys(o).length),-1===n.indexOf(l)&&n.push(l);const d=l.inboundLayers.length;for(let o=0;o<d;o++){const t=l.inputTensors[o],r=l.inboundLayers[o],a=l.nodeIndices[o],s=l.tensorIndices[o];i(t,e,n,r,a,s)}for(e.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);s.push(l)},l=[],d=[];for(const c of this.outputs)i(c,l,d);const h=s.slice().reverse();for(const c of h){n[c.id]=c,c.id in e||(e[c.id]=0);let t=e[c.id];const o=null==r[c.outboundLayer.id]?0:r[c.outboundLayer.id];t=Math.max(t,o),r[c.outboundLayer.id]=t,a[c.outboundLayer.id]=c.outboundLayer,e[c.id]=t;for(let r=0;r<c.inboundLayers.length;r++){const a=c.inboundLayers[r],o=c.nodeIndices[r],s=a.inboundNodes[o],i=null==e[s.id]?0:e[s.id];e[s.id]=Math.max(t+1,i),n[s.id]=s}}const f={};for(const c in e){const t=e[c];t in f||(f[t]=[]),f[t].push(n[c])}const m={};for(const c in r){const t=r[c];t in m||(m[t]=[]),m[t].push(a[c])}let b=Object.keys(m).map(t=>parseInt(t,10)).sort(O);this.layers=[];for(const c of b){const t=m[c];t.sort((t,e)=>{const n=o[t.id],r=o[e.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof un&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=m,b=Object.keys(f).map(t=>parseInt(t,10)).sort(O);const g=this.inputs.slice(),y=[];for(const u of b)for(const t of f[u]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===g.indexOf(n))throw new c("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(e.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(y));for(const e of t.outputTensors)g.push(e);y.push(e.name)}}this.nodesByDepth=f;const v=this.layers.map(t=>t.name);for(const u of v){const t=v.filter(t=>t===u).length;if(1!==t)throw new c('The name "'.concat(u,'" is used ').concat(t," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(v))}this.outboundNodes=[],this.inboundNodes=[],new se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(t=>null),outputMasks:this.outputs.map(t=>null),inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs.map(t=>t.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(e=>e.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new u("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.layers)e.push(...t.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let r=0;for(const o of this.layers)for(const t of o.weights){if(null!=n[t.originalName])throw new u("Duplicate weight name: ".concat(t.originalName));n[t.originalName]=t,r++}const a=[];for(const o in t){let r=o;if(null==n[o]){const t=o.split("/");r=t.slice(0,-2).concat([t[t.length-1]]).join("/")}if(null!=n[r])a.push([n[r],t[o]]);else if(e)throw new u("Provided weight data has no target variable: ".concat(o));delete n[r]}if(e){const t=[];for(const e in n)t.push(e);if(t.length>0)throw new u("".concat(t.length," of ").concat(r," weights are not set: ")+"".concat(t))}ne(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers ".concat("2.8.6"),e.backend="TensorFlow.js",e}toJSON(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=function t(e,n){if(null===e||void 0===e)return null;if("string"===typeof e)return g(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const r=[],a=e.length;for(let o=0;o<a;++o){const a=e[o];$e(n,o,a)?r.push(a):r.push(t(a,n))}return r}{const n={};for(const r of Object.keys(e)){const a=e[r],o=g(r);n[o]="name"!==r&&"className"!==r||"string"!==typeof a?t(a,r):a}return n}}(this.updatedConfig());return e?JSON.stringify(n):n}call(t,e){return Object(a.tidy)(()=>{t=b(t);const n=new en;for(let e=0;e<this.inputs.length;++e)n.add(this.inputs[e],t[e]);return an(this.outputs,n,e)})}computeMask(t,e){return Object(a.tidy)(()=>{let n;return t=b(t),n=null==e?h(null,t.length):b(e),this.runInternalGraph(t,n)[1]})}computeOutputShape(t){const e=Qt(t);if(e.length!==this.inputLayers.length)throw new u("Invalid inputShape argument ".concat(t,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let s=0;s<e.length;s++){const t=this.inputLayers[s],r=e[s];n[t.name+"_0_0"]=r}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(O);if(r.length>1)for(const s of r){const t=this.nodesByDepth[s];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(t=>t.id).indexOf(t.id))continue;const r=[];for(let s=0;s<e.inboundLayers.length;s++){const t=e.inboundLayers[s],a=e.nodeIndices[s],o=e.tensorIndices[s],i=n["".concat(t.name,"_").concat(a,"_").concat(o)];r.push(i)}const a=Qt(t.computeOutputShape(m(r))),o=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n["".concat(t.name,"_").concat(o,"_").concat(e)]=a[e]}}}const a=[],o=[];for(let s=0;s<this.outputLayers.length;s++){const t=this.outputLayers[s],e=this.outputLayersNodeIndices[s],n=this.outputLayersTensorIndices[s],r="".concat(t.name,"_").concat(e,"_").concat(n);o.push(r)}for(let s=0;s<o.length;s++){const t=o[s];p(t in n),a.push(n[t])}return m(a)}runInternalGraph(t,e){null==e&&(e=h(null,t.length));const n={};for(let i=0;i<this.inputs.length;++i){const r=this.inputs[i],a=t[i],o=e[i];n[r.id]=[a,o]}const r=Object.keys(this.nodesByDepth).map(t=>parseInt(t,10)).sort(O);for(const i of r){const t=this.nodesByDepth[i];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,o=new Array;for(const e of r)e.id in n&&o.push(n[e.id]);if(o.length===r.length){let r,s,i,c,u={};if(null!=e.callArgs&&(u=e.callArgs),1===o.length){const[e,n]=o[0];null==u.mask&&(u.mask=n),i=b(t.call(e,u)),c=b(t.computeMask(e,n)),r=[e],s=[n]}else r=o.map(t=>t[0]),s=o.map(t=>t[1]),null==u.mask&&(u.mask=s),i=b(t.call(r,u)),c=b(t.computeMask(r,s));if(t.activityRegularizer)throw new l("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let t=0;t<a.length;++t){const e=a[t],r=i[t],o=c[t];n[e.id]=[r,o]}}}}const a=[],o=[],s=[];for(const i of this.outputs){p(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[t,e]=n[i.id];s.push(t.shape),a.push(t),o.push(e)}return[a,o,s]}buildNodeConversionMap(t){const e={};let n;for(const r of this.layers){n=r instanceof un?1:0;for(let t=0;t<r.inboundNodes.length;t++){const a=un.nodeKey(r,t);this.containerNodes.has(a)&&(e[a]=n,n+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new u("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}if(null==t)throw new u("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===t)return n;throw new u("No such layer: ".concat(t))}calculateLosses(){return Object(a.tidy)(()=>{const t=[];for(const e of this.layers)for(let n=0;n<e.inboundNodes.length;++n){const r=un.nodeKey(e,n);this.containerNodes.has(r)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const t=s.getClassName(),r=s.getConfig(),a=[];for(let n=0;n<s.inboundNodes.length;n++){const t=s.inboundNodes[n],r=un.nodeKey(s,n);let i={};if(this.containerNodes.has(r)){if(t.callArgs)try{JSON.stringify(t.callArgs),i=t.callArgs}catch(o){console.warn("Layer ".concat(s.name," was passed ")+"non-serializable keyword arguments: "+"".concat(t.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(t.inboundLayers.length>0){const n=[];for(let r=0;r<t.inboundLayers.length;r++){const a=t.inboundLayers[r],o=t.nodeIndices[r],s=t.tensorIndices[r];let c=e[un.nodeKey(a,o)];null==c&&(c=0),n.push([a.name,c,s,i])}a.push(n)}}}const i={};i.name=s.name,i.className=t,i.config=r,i.inboundNodes=a,n.push(i)}t.layers=n;const r=[];for(let s=0;s<this.inputLayers.length;s++){const t=this.inputLayers[s],n=this.inputLayersNodeIndices[s],a=un.nodeKey(t,n);if(!this.containerNodes.has(a))continue;let o=e[a];null!==o&&void 0!==o||(o=0);const i=this.inputLayersTensorIndices[s];r.push([t.name,o,i])}t.inputLayers=r;const a=[];for(let s=0;s<this.outputLayers.length;s++){const t=this.outputLayers[s],n=this.outputLayersNodeIndices[s],r=un.nodeKey(t,n);if(!this.containerNodes.has(r))continue;let o=e[r];null!==o&&void 0!==o||(o=0);const i=this.outputLayersTensorIndices[s];a.push([t.name,o,i])}return t.outputLayers=a,t}static fromConfig(t,e){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r={},a={};function o(t,e){t.name in a?a[t.name].push(e):a[t.name]=[e]}function s(t,e){const n=[];let a;for(const s of e){const i=s[0],c=s[1],u=s[2];if(a=null==s[3]?{}:s[3],!(i in r))return void o(t,e);const l=r[i];if(l.inboundNodes.length<=c)return void o(t,e);const d=l.inboundNodes[c];n.push(d.outputTensors[u])}n.length>0&&t.apply(m(n),a)}function i(t){const a=t.name,s=ke(t,null!=e.customObjects?e.customObjects:{});s.setFastWeightInitDuringBuild(n),r[a]=s;t.inboundNodes.forEach(t=>{if(!(t instanceof Array))throw new u("Corrupted configuration, expected array for nodeData: ".concat(t));o(s,t)})}const c=e.name,l=e.layers;for(const u of l)i(u);for(;!S(a);)for(const t of l){const e=r[t.name];if(e.name in a){const t=a[e.name];delete a[e.name];for(const n of t)s(e,n)}}const d=[],h=[],f=e.inputLayers;for(const u of f){const t=u[0],e=u[1],n=u[2];p(t in r);const a=r[t].inboundNodes[e].outputTensors;d.push(a[n])}const b=e.outputLayers;for(const u of b){const t=u[0],e=u[1],n=u[2];p(t in r);const a=r[t].inboundNodes[e].outputTensors;h.push(a[n])}return new t({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new u("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){Object(a.tidy)(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function ln(t,e,n){const r=e.length;if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>null);if(1===r)return Array.isArray(t)&&1===t.length?t:"object"===typeof t&&e[0]in t?[t[e[0]]]:[t];if(Array.isArray(t)){if(t.length!==r)throw new Error("Provided ".concat(n," is an array of ").concat(t.length," ")+"element(s), but the model has ".concat(r," outputs. ")+"Make sure a set of weights is provided for each model output.");return t}if("object"===typeof t&&Object.keys(t).length>0&&"object"===typeof t[Object.keys(t)[0]]){const n=[];return e.forEach(e=>{e in t?n.push(t[e]):n.push(null)}),n}throw new Error("The model has multiple (".concat(r,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(r," elements or an object with ").concat(e," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(t)))}function dn(t,e){return ln(t,e,"classWeight")}async function hn(t,e,n,r){if(null!=e||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const e=Object(a.tidy)(()=>{if(1===t.shape.length)return t.clone();if(2===t.shape.length){if(t.shape[1]>1){const e=1;return t.argMax(e)}if(1===t.shape[1])return t.reshape([t.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(t.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(t.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")}),r=Array.from(await e.data());Object(a.dispose)(e);const o=[];return r.forEach(t=>{if(null==n[t])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(t," exists in the data but not in ")+"classWeight");o.push(n[t])}),Object(a.tensor1d)(o,"float32")}return null}function pn(t,e){return Object(a.mul)(t,e)}function fn(t,e){let n,r;const o=e;n=o.xs,r=o.ys,a.util.assert(null!=n&&null!=r,()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(e));const s=mn("input",t.inputNames,n),i=mn("output",t.outputNames,r),c=s[0].shape[0];a.util.assert(s.length===t.inputs.length,()=>"LayersModel has ".concat(t.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(t.inputNames),")")),a.util.assert(i.length===t.outputs.length,()=>"LayersModel has ".concat(t.outputs.length," outputs, but the dataset ")+"provides ".concat(i.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(t.outputNames),")"));for(let u=0;u<s.length;u++)a.util.assert(s[u].shape[0]===c,()=>"Batch size mismatch: input "+"".concat(t.inputNames[u]," has ").concat(s[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],"."));for(let u=0;u<i.length;u++)a.util.assert(i[u].shape[0]===c,()=>"Batch size mismatch: output "+"".concat(t.outputNames[u]," has ").concat(i[u].shape[0],"; ")+"expected  ".concat(c," based on input ").concat(t.inputNames[0],"."));return{xs:s,ys:i}}function mn(t,e,n){if(n instanceof a.Tensor)return[n];if(Array.isArray(n))return a.util.assert(n.length===e.length,()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(e.length," to match the ").concat(t," keys ").concat(e,".")),n;{const r=[];for(const a of e){if(null==n[a])throw new u("The feature data generated by the dataset lacks the required "+"".concat(t," key '").concat(a,"'."));r.push(n[a])}return r}}async function bn(t,e,n){const r=null!=n.batchesPerEpoch;if(a.util.assert(null!=t.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),a.util.assert(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),a.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs)),a.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch)),a.util.assert(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const o=null!=n.validationData;let s,i;if(o)if(gn(n.validationData))a.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches));else{const t=function(t){if(3===t.length)throw new l("Validation with sample weights is not implemented yet.");return{xs:t[0],ys:t[1]}}(n.validationData);s=t.xs,i=t.ys}const c=t.makeTrainFunction(),u=t.getDedupedMetricsNames();let d;d=o?u.slice().concat(u.map(t=>"val_"+t)):u.slice();const h=ve(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:f,history:m}=we(h,p,n.epochs,null,null,function(t,e){let n=null;null!=e.batchesPerEpoch?n=e.batchesPerEpoch:Number.isFinite(t.size)&&(n=t.size);return n}(e,n),null,o,d);f.setModel(t),t.history=m,await f.onTrainBegin(),t.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,y=await e.iterator();for(;g<n.epochs;){const l={};await f.onEpochBegin(g);let d=0,h=0;for(r||(y=await e.iterator());!r||d<n.batchesPerEpoch;){const e=await y.next();if(r&&e.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(d," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=e.value){const{xs:r,ys:o}=fn(t,e.value),s={};s.batch=h,s.size=r[0].shape[0],await f.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const e=dn(n.classWeight,t.outputNames);for(let t=0;t<e.length;++t)i.push(await hn(o[t],null,e[t]))}const l=r.concat(o).concat(i),p=c(l);a.dispose(l);for(let t=0;t<u.length;++t){const e=u[t],n=p[t];s[e]=n,a.keep(n)}await f.onBatchEnd(h,s),he(s),h++,d++}if(r?d>=n.batchesPerEpoch:e.done){if(o){let e;e=gn(n.validationData)?b(await t.evaluateDataset(n.validationData,{batches:n.validationBatches})):b(t.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<t.metricsNames.length;++n)l["val_".concat(t.metricsNames[n])]=e[n]}break}if(t.stopTraining_)break}if(await f.onEpochEnd(g,l),g++,t.stopTraining_)break}return await f.onTrainEnd(),await t.history.syncData(),t.history}finally{t.isTraining=!1}}function gn(t){return"function"===typeof t.iterator}function yn(t){a.util.assert(t>0&&Number.isInteger(t),()=>"batchSize is required to be a positive integer, but got ".concat(t))}function vn(t,e,n){return null==t?[null]:Array.isArray(t)?t.map(t=>ut(t,e,n-e)):ut(t,e,n-e)}function xn(t,e){return a.tidy(()=>null==t?null:Array.isArray(t)?t.map(t=>xn(t,e)):gt(t,"int32"===e.dtype?e:e.toInt()))}function wn(t,e){const n=[];let r=0,a=null;for(;r<t;)a=r+e,a>=t&&(a=t),n.push([r,a]),r=a;return n}async function kn(t,e,n,r,o,s,i,c,d,h,p,f,m,b,g){null==o&&(o=32),null==s&&(s=1),null==p&&(p=!0),null==m&&(m=0);let y=!1;if(null!=d&&null!=h&&(y=!0),null!=g&&(y=!0,null==b))throw new u("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const v=t.checkNumSamples(n,o,b,"steps_per_epoch");let x;null!=v&&(x=ot(0,v)),null==i&&(i=1);const{callbackList:w,history:k}=we(c,i,s,m,v,b,o,y,f);w.setModel(t),t.history=k,await w.onTrainBegin(),t.stopTraining_=!1;for(let u=m;u<s;++u){await w.onEpochBegin(u);const s={};if(null!=b)throw new l("stepsPerEpoch mode is not implemented yet.");{if("batch"===p)throw new l("batch shuffling is not implemneted yet");p&&a.util.shuffle(x);const i=Object(a.tensor1d)(x),c=wn(v,o);for(let u=0;u<c.length;++u){const l={};if(await w.onBatchBegin(u,l),a.tidy(()=>{const p=c[u][0],f=c[u][1],m=ut(i,p,f-p);l.batch=u,l.size=f-p;const b=xn(n,m),g=e(b);for(let t=0;t<r.length;++t){const e=r[t],n=g[t];l[e]=n,a.keep(n)}if(u===c.length-1&&y){const e=t.testLoop(d,h,o);for(let t=0;t<r.length;++t){const n=r[t],o=e[t];a.keep(o),s["val_"+n]=o}}}),await w.onBatchEnd(u,l),he(l),t.stopTraining_)break}i.dispose()}if(await w.onEpochEnd(u,s),t.stopTraining_)break}return await w.onTrainEnd(),await t.history.syncData(),t.history}function On(t){const e=[];t instanceof a.Tensor&&(t=[t]);for(let n=0;n<t.length;++n){const r=t[n];if(1===r.rank)e.push(it(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function In(t,e){if(null==t)return;const n=[];if(e instanceof a.Tensor)n.push(e.id);else if(Array.isArray(e))e.forEach(t=>n.push(t.id));else if(null!=e)for(const a in e){const t=e[a];n.push(t.id)}const r=[];if(t instanceof a.Tensor)-1===n.indexOf(t.id)&&r.push(t);else if(Array.isArray(t))t.forEach(t=>{-1===n.indexOf(t.id)&&r.push(t)});else if(null!=t)for(const a in t){const e=t[a];-1===n.indexOf(e.id)&&r.push(e)}r.forEach(t=>{t.isDisposed||t.dispose()})}function Sn(t){return Array.isArray(t)}function Nn(t){return!function(t){return t instanceof a.Tensor}(t)&&!Sn(t)}function Tn(t,e,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==e||0===e.length){if(null!=t){let e=!1;if(Sn(t)&&t.length>0)e=!0;else if(Nn(t)){for(const n in t)if(t.hasOwnProperty(n)){e=!0;break}}else e=!0;if(e)throw new u("Error when checking model ".concat(o," expected no data, ")+"but got ".concat(t))}return[]}if(null==t)return e.map(t=>null);if(Nn(t)){t=t,r=[];for(const n of e){if(null==t[n])throw new u('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(e));r.push(t[n])}}else if(Sn(t)){if((t=t).length!==e.length)throw new u("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(e.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(t));r=t}else{if(t=t,e.length>1)throw new u("The model ".concat(o," expects ").concat(e.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(t.shape));r=[t]}if(r=On(r),null!=n)for(let s=0;s<e.length;++s){if(null==n[s])continue;const t=r[s];if(t.shape.length!==n[s].length)throw new u("Error when checking ".concat(o,": expected ").concat(e[s]," ")+"to have ".concat(n[s].length," dimension(s). but got array with ")+"shape ".concat(t.shape));for(let r=0;r<n[s].length;++r){if(0===r&&!a)continue;const i=t.shape[r],c=n[s][r];if(null!=c&&c>=0&&i!==c)throw new u("Error when checking ".concat(o,": expected ").concat(e[s]," ")+"to have shape [".concat(n[s],"], but got array with shape ")+"[".concat(t.shape,"]."))}}return r}function jn(t,e,n){let r,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(t)){if(t.length!==e.length)throw new u("Error when checking model ".concat(o,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(e.length," Tensor(s),")+" but instead got ".concat(t.length," Tensors(s)."));r=t}else{if(e.length>1)throw new u("The model expects ".concat(e.length," ").concat(o," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(t.shape),"."));r=[t]}if(null!=n)for(let s=0;s<e.length;++s){if(null==n[s])continue;const t=r[s];if(t.shape.length!==n[s].length)throw new u("Error when checking ".concat(o,": expected ").concat(e[s]," ")+"to have ".concat(n[s].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(t.shape)));for(let r=0;r<n[s].length;++r){if(0===r&&!a)continue;const i=t.shape[r],c=n[s][r];if(null!=c&&c!==i)throw new u("Error when checking ".concat(o,": expected ")+"".concat(e[s]," to have shape ").concat(JSON.stringify(n[s])," but ")+"got array with shape ".concat(JSON.stringify(t.shape),"."))}}}class Cn extends un{constructor(t){super(t),this.isTraining=!1}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new u("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const a=Ye(t),o=["Layer (type)","Output shape","Param #"];let s;if(a?(e=e||65,n=n||[.45,.85,1]):(e=e||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(t=>Math.floor(e*t))),!a){o.push("Receives inputs"),s=[];for(const e in t.nodesByDepth)s.push(...t.nodesByDepth[e])}r("_".repeat(e)),Qe(o,n,r),r("=".repeat(e));const i=t.layers;for(let l=0;l<i.length;++l)a?Ze(i[l],n,r):Je(i[l],n,s,r),r((l===i.length-1?"=":"_").repeat(e));t.checkTrainableWeightsConsistency();const c=Xe(t),u=$t(t.nonTrainableWeights);r("Total params: ".concat(c+u)),r("Trainable params: ".concat(c)),r("Non-trainable params: ".concat(u)),r("_".repeat(e))}(this,t,e,n)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"===typeof t.optimizer)this.optimizer_=function(t){const e={Adagrad:()=>a.train.adagrad(.01),Adadelta:()=>a.train.adadelta(1,.95,s()),Adam:()=>a.train.adam(.001,.9,.999,s()),Adamax:()=>a.train.adamax(.002,.9,.999,s(),0),RMSProp:()=>a.train.rmsprop(.001,.9,0,s()),SGD:()=>a.train.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,t in e)return e[t]();throw new u("Unknown Optimizer ".concat(t))}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof a.Optimizer))throw new u("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"===typeof t.loss||"function"===typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new u("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(t.loss,"."));const n=t.loss;e=n.map(t=>De(t))}else{const n=De(t.loss);this.outputs.forEach(t=>{e.push(n)})}else{t.loss=t.loss;for(const e in t.loss)if(-1===this.outputNames.indexOf(e))throw new u('Unknown entry in loss dictionary: "'.concat(e,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==t.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),e.push(De(t.loss[n]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const t=this.internalOutputShapes[a],e=this.outputNames[a];this.feedOutputNames.push(e),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Q("loss",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;const e=this.lossFunctions[t];this.outputs.length>1&&(this.metricsTensors.push([e,t]),this.metricsNames.push(this.outputNames[t]+"_loss"))}});const r=function(t,e){if(null==t||Array.isArray(t)&&0===t.length)return e.map(t=>[]);let n;if("string"===typeof t||"function"===typeof t)n=[t];else{if(!Array.isArray(t)&&"object"!==typeof t)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(t));n=t}if(Array.isArray(n))return e.map(t=>n);{const t=[];for(const r of e){let e=n.hasOwnProperty(r)?n[r]:[];Array.isArray(e)||(e=[e]),t.push(e)}return t}}(t.metrics,this.outputNames),o=(t,e,n)=>{this.outputNames.length>1&&(e=this.outputNames[t]+"_"+e),this.metricsNames.push(e),this.metricsTensors.push([n,t])};Q("metric",()=>{for(let t=0;t<this.outputs.length;++t){if(-1!==n.indexOf(t))continue;(e=>{let n,r,a;for(const s of e){if("string"===typeof s&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(s)){const e=this.internalOutputShapes[t];let o;1===e[e.length-1]||this.lossFunctions[t]===Ee?-1!==["accuracy","acc"].indexOf(s)?r=Fe:-1!==["crossentropy","ce"].indexOf(s)&&(r=Pe):this.lossFunctions[t]===Ce?-1!==["accuracy","acc"].indexOf(s)?r=Be:-1!==["crossentropy","ce"].indexOf(s)&&(r=Ve):-1!==["accuracy","acc"].indexOf(s)?r=Me:-1!==["crossentropy","ce"].indexOf(s)&&(r=We),-1!==["accuracy","acc"].indexOf(s)?o="acc":-1!==["crossentropy","ce"].indexOf(s)&&(o="ce"),a=r,n=""+o}else{const t=Ge(s);a=t,n=""+He(s)}let e;Q(n,()=>{e=a}),o(t,n,e)}})(r[t])}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=null==n.batchSize?32:n.batchSize;yn(r);const a=this.standardizeUserDataXY(t,e,!0,r);try{const o=a[0].concat(a[1]);this.makeTestFunction();const s=this.testFunction;return m(this.testLoop(s,o,r,n.verbose,n.steps))}finally{In(a[0],t),In(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(t,e,n){const r=null!=(n=n||{}).batches,o=t.testFunction;let s=[];if(n.verbose>0)throw new l("Verbose mode is not implemented yet.");a.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches)));const i="function"===typeof e.next?e:await e.iterator();let c=0,u=0;for(;!r||u<n.batches;){const e=await i.next();if(s=a.tidy(()=>{if(e.value){const{xs:n,ys:r}=fn(t,e.value),i=n.concat(r),l=a.tidy(()=>o(i));if(a.dispose(i),0===u)for(let t=0;t<l.length;++t)s.push(Object(a.scalar)(0));const d=i[0].shape[0];for(let t=0;t<l.length;++t){const e=l[t],n=s[t];s[t]=a.tidy(()=>a.add(s[t],a.mul(d,e))),u>0&&a.dispose(n)}a.dispose(l),c+=d,++u}return s}),e.done){r&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const t=s[l];s[l]=a.div(s[l],c),a.dispose(t)}return m(s)}(this,t,e)}checkNumSamples(t,e,n){let r,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(r=null,null!=e)throw new u("If ".concat(a," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(e))}else{if(null==t)throw new u("Either the input data should have a defined shape, or "+"".concat(a," shoud be specified."));r=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return r}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new u("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(e),r=n?e:[e],o=this.retrieveSymbolicTensors(r),s=new en;if(t instanceof a.Tensor&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new u("The number of inputs provided (".concat(t.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let e=0;e<this.inputs.length;++e)s.add(this.inputs[e],t[e])}else for(const a of this.inputs){const e=t[a.name];if(null==e)throw new u("No value is provided for the model's input ".concat(a.name));s.add(a,e)}const i=an(o,s);return n?i:i[0]}retrieveSymbolicTensors(t){const e=h(null,t.length);let n=t.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],o=a.map(t=>t.name);for(let r=0;r<t.length;++r){const s=o.indexOf(t[r]);if(-1!==s&&(e[r]=a[s],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw e.forEach((e,r)=>{null==e&&n.push(t[r])}),new u("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return e}predictLoop(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return a.tidy(()=>{const r=this.checkNumSamples(t);if(n)throw new l("Verbose predictLoop() is not implemented yet.");const o=wn(r,e),s=this.outputs.map(t=>[]);for(let e=0;e<o.length;++e){a.tidy(()=>{const n=o[e][0],r=o[e][1],a=vn(t,n,r),s=[];if(Array.isArray(a))for(let t=0;t<a.length;++t)s.push({key:this.inputs[t],value:a[t]});else s.push({key:this.inputs[0],value:a});const i=new en(s);return an(this.outputs,i)}).forEach((t,e)=>s[e].push(t))}return m(s.map(t=>a.concat(t,0)))})}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=On(t);jn(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==e.batchSize?32:e.batchSize;return yn(r),this.predictLoop(n,r)}finally{In(n,t)}}predictOnBatch(t){jn(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new c("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const t=this.feedOutputShapes[a];this.feedLossFns[a]===Ce?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(t,e,n){const r=I(t.map(t=>t.shape[0]));r.sort();const o=I(e.map(t=>t.shape[0]));if(o.sort(),r.length>1)throw new u("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map(t=>t.shape))));if(o.length>1)throw new u("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map(t=>t.shape))));if(r.length>0&&o.length>0&&!a.util.arraysEqual(r,o))throw new u("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(r[0]," input sample(s) and ").concat(o[0]," target ")+"sample(s).")}(t=Tn(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=Tn(e,this.feedOutputNames,r,!1,"target")),function(t,e,n){const r=[Ie,Ee,je];for(let a=0;a<t.length;++a){const o=t[a],s=e[a],i=n[a];if(null!=s){if(s===je&&1===o.shape[o.shape.length-1])throw new u("You are passing a target array of shape ".concat(o.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==r.indexOf(s)){const t=o.shape.slice(1),e=i.slice(1);for(let n=0;n<t.length;++n){const r=t[n],a=e[n];if(null!=a&&r!==a)throw new u("A target Tensor with shape ".concat(o.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&t[0].shape[0]%n!==0)throw new u("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(t[0].shape[0]," sample(s)."));return[t,e]}async standardizeUserData(t,e,n,r){let a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],o=arguments.length>5?arguments[5]:void 0;const[s,i]=this.standardizeUserDataXY(t,e,a,o);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=r){const t=dn(r,this.outputNames);c=[];for(let e=0;e<t.length;++e)c.push(await hn(i[e],null,t[e]))}return[s,i,c]}testLoop(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4?arguments[4]:void 0;return a.tidy(()=>{const s=this.checkNumSamples(e,n,o,"steps"),i=[];if(r>0)throw new l("Verbose mode is not implemented yet.");if(null!=o)throw new l("steps mode in testLoop() is not implemented yet");{const r=wn(s,n),o=Object(a.tensor1d)(ot(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],c=r[n][1],u=ut(o,s,c-s),l=xn(e,u),d=t(l);if(0===n)for(let t=0;t<d.length;++t)i.push(Object(a.scalar)(0));for(let t=0;t<d.length;++t){const e=d[t];i[t]=a.add(i[t],a.mul(c-s,e))}}for(let t=0;t<i.length;++t)i[t]=a.div(i[t],s)}return i})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let n=0;n<t.length;++n){const r=t[n];let a=r;if(f(t,r)>1){const e=f(t.slice(0,n),r);a+="_".concat(e)}e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],n=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(t=>t.read());return[this.optimizer_.minimize(()=>{const t=[];for(let e=0;e<this.inputs.length;++e)t.push({key:this.inputs[e],value:n[e]});const i=new en(t),c=an(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let t=(0,this.lossFunctions[n])(r[n],c[n]);null!=o[n]&&(t=pn(t,o[n]));const s=a.mean(t);e.push(s),u=0===n?t:a.add(u,t)}for(let n=0;n<this.metricsTensors.length;++n){let t;if(this.outputs.length>1&&n<this.outputs.length)t=e[n];else{const e=this.metricsTensors[n][0],o=this.metricsTensors[n][1];t=a.mean(e(r[o],c[o]))}a.keep(t),s.push(t)}return u=a.mean(u),this.calculateLosses().forEach(t=>{u=a.add(u,t)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=t=>a.tidy(()=>{const e=[];let n;const r=t.slice(0,this.inputs.length),o=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let t=0;t<this.inputs.length;++t)s.push({key:this.inputs[t],value:r[t]});const i=new en(s),c=an(this.outputs,i);for(let t=0;t<this.lossFunctions.length;++t){const r=this.lossFunctions[t],s=a.mean(r(o[t],c[t]));n=0===t?s:a.add(n,s),e.push(n)}for(let t=0;t<this.metricsTensors.length;++t){const n=this.metricsTensors[t][0],r=this.metricsTensors[t][1],s=a.mean(n(o[r],c[r]));e.push(s)}return e})}async fit(t,e){return async function(t,e,n){let r,o,s,i,c,d,h,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(t.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");t.isTraining=!0;try{const f=null==p.batchSize?32:p.batchSize;yn(f);const m=!1,b=await t.standardizeUserData(e,n,p.sampleWeight,p.classWeight,m,f);r=b[0],o=b[1],h=b[2];let g,y=!1;if(null!=p.validationData&&p.validationData.length>0){if(y=!0,2!==p.validationData.length)throw 3===p.validationData.length?new l("validationData including sample weights is not supported yet."):new u("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(p.validationData," is invalid."));s=p.validationData[0],i=p.validationData[1];const e=!0,n=await t.standardizeUserData(s,i,null,null,e,f);c=n[0],d=n[1],g=c.concat(d)}else if(null!=p.validationSplit&&p.validationSplit>0&&p.validationSplit<1){y=!0;const t=Math.floor(r[0].shape[0]*(1-p.validationSplit)),e=r[0].shape[0];c=vn(r,t,e),r=vn(r,0,t),d=vn(o,t,e),o=vn(o,0,t),g=c.concat(d)}else null!=p.validationSteps&&(y=!0);const v=r.concat(o).concat(h);t.checkTrainableWeightsConsistency();const x=t.makeTrainFunction(),w=t.getDedupedMetricsNames();let k,O;y?(t.makeTestFunction(),k=t.testFunction,O=w.slice().concat(w.map(t=>"val_"+t))):(k=null,g=[],O=w.slice());const I=ve(p.callbacks,p.yieldEvery);return await kn(t,x,v,w,f,p.epochs,p.verbose,I,k,g,p.shuffle,O,p.initialEpoch,null,null)}finally{t.isTraining=!1,In(r,e),In(o,n),In(c,s),In(d,i),null!=h&&a.dispose(h)}}(this,t,e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:{})}async fitDataset(t,e){return bn(this,t,e)}async trainOnBatch(t,e){const n=await this.standardizeUserData(t,e),r=n[0],o=n[1],s=this.makeTrainFunction()(r.concat(o)),i=[];for(const a of s){const t=await a.data();i.push(t[0])}return a.dispose(s),m(i)}getNamedWeights(t){const e=[],n=null!=t&&t.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let o=0;o<r.length;++o)n&&!r[o].trainable||e.push({name:r[o].originalName,tensor:a[o]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=a.memory().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-a.memory().numTensors}return t}getLossIdentifiers(){let t;if("string"===typeof this.loss)t=g(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!==typeof t)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(t=>g(t))}else{const e=Object.keys(this.loss);t={};const n=this.loss;for(const r of e){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");t[r]=g(n[r])}}return t}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[g(He(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>g(He(t)));{const t={};for(const e in this.metrics)t[e]=g(He(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=ke(tn(t.optimizer_config));let n,r;if("string"===typeof t.loss)n=y(t.loss);else if(Array.isArray(t.loss))n=t.loss.map(t=>y(t));else if(null!=t.loss){n={};for(const e in t.loss)n[e]=y(t.loss[e])}if(Array.isArray(t.metrics))r=t.metrics.map(t=>y(t));else if(null!=t.metrics){r={};for(const e in t.metrics)r[e]=y(t.metrics[e])}this.compile({loss:n,metrics:r,optimizer:e})}async save(t,e){if("string"===typeof t){const e=a.io.getSaveHandlers(t);if(0===e.length)throw new u("Cannot find any save handlers for URL '".concat(t,"'"));if(e.length>1)throw new u("Found more than one (".concat(e.length,") save handlers for ")+"URL '".concat(t,"'"));t=e[0]}if(null==t.save)throw new u("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await a.io.encodeWeights(this.getNamedWeights(e)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat("2.8.6"),convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const t="optimizer",{data:e,specs:o}=await a.io.encodeWeights(await this.optimizer.getWeights(),t);n.specs.push(...o),n.data=a.io.concatenateArrayBuffers([n.data,e])}if(null!=this.userDefinedMetadata){const t=!0;qe(this.userDefinedMetadata,this.name,t),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,t.save(r)}setUserDefinedMetadata(t){qe(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Cn.className="Model",a.serialization.registerClass(Cn);class En extends Cn{}En.className="Functional",a.serialization.registerClass(En);class An extends Cn{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:Xt("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new u("Negative dimension size caused by adding layer "+"".concat(t.name," with input shape [")+"".concat(t.inboundNodes[0].inputTensors[0].shape,"]"))}add(t){const e=t instanceof An||t instanceof Cn;let n;if(e){if(n=t,1!==n.outputs.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new u("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new u("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const e=le({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(e)}if(e)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==t.inboundNodes.length)throw new u("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(t.name," ")+"which has ".concat(t.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==t.inboundNodes[0].outputTensors.length)throw new u("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=function t(e,n,r){if((null==n||null!=r&&r>0)&&(n=e.sourceLayer,r=e.nodeIndex),0===n.inboundNodes.length)return[e];{const e=n.inboundNodes[r];if(0===e.inboundLayers.length)return e.inputTensors;{const n=[];for(let r=0;r<e.inboundLayers.length;r++){const a=t(e.inputTensors[r],e.inboundLayers[r],e.nodeIndices[r]);for(const t of a)-1===n.indexOf(t)&&n.push(t)}return n}}}(this.outputs[0])}this.inboundNodes=[],new se({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:h(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(t=>t.shape),outputShapes:this.outputs[0].shape})}else{const e=t.apply(this.outputs[0]);if(Array.isArray(e))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[e],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Jt(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Cn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(t,e,n)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluate(t,e,n)}async evaluateDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fit(t,e,n)}async fitDataset(t,e){if(!this.built)throw new c("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e){let n,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new u("Legacy serialization format not supported yet.");n=e}else a.util.assert(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),n=e.layers,delete e.layers,o=e;const s=new t(o);if(!(s instanceof An))throw new l("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const a of n){const t=ke(a,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),s.add(t)}return s}set stopTraining(t){if(null==this.model)throw new u("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new u("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const n={};n.className=e.getClassName(),n.config=e.getConfig(),t.push(n)}return{name:this.name,layers:t}}}An.className="Sequential",a.serialization.registerClass(An);class _n extends a.serialization.Serializable{getConfig(){return{}}}class Rn extends _n{apply(t){return function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==e)throw new l("Support for alpha values other than 1 (".concat(e,") is not implemented ")+"yet.");return a.elu(t)}(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Rn.className="elu",a.serialization.registerClass(Rn);class Dn extends _n{apply(t){return a.selu(t)}}Dn.className="selu",a.serialization.registerClass(Dn);class Fn extends _n{apply(t){return a.relu(t)}}Fn.className="relu",a.serialization.registerClass(Fn);class Mn extends _n{apply(t){return Object(a.tidy)(()=>a.minimum(6,a.relu(t)))}}Mn.className="relu6",a.serialization.registerClass(Mn);class zn extends _n{apply(t){return t}}zn.className="linear",a.serialization.registerClass(zn);class Ln extends _n{apply(t){return a.sigmoid(t)}}Ln.className="sigmoid",a.serialization.registerClass(Ln);class Pn extends _n{apply(t){return function(t){return Object(a.tidy)(()=>{const e=a.add(.5,a.mul(.2,t));return a.clipByValue(e,0,1)})}(t)}}Pn.className="hardSigmoid",a.serialization.registerClass(Pn);class Bn extends _n{apply(t){return a.softplus(t)}}Bn.className="softplus",a.serialization.registerClass(Bn);class Wn extends _n{apply(t){return function(t){return Object(a.tidy)(()=>a.div(t,a.abs(t).add(1)))}(t)}}Wn.className="softsign",a.serialization.registerClass(Wn);class Vn extends _n{apply(t){return a.tanh(t)}}Vn.className="tanh",a.serialization.registerClass(Vn);class Un extends _n{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.softmax(t,e)}}Un.className="softmax",a.serialization.registerClass(Un);class Gn extends _n{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return a.logSoftmax(t,e)}}Gn.className="logSoftmax",a.serialization.registerClass(Gn);class Hn extends _n{apply(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return Object(a.tidy)(()=>a.sigmoid(t.mul(e)).mul(t))}}function qn(t){return t.getClassName()}function Kn(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return k(t,a.serialization.SerializationMap.getMap().classNameMap,e,"activation")}function Xn(t){if(null==t){const t={className:"linear",config:{}};return Kn(t)}if("string"===typeof t){const e={};return e.className=t,e.config={},Kn(e)}return t instanceof _n?t:Kn(t)}function Yn(t){if(null!=t&&"object"!==typeof t)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(t))}Hn.className="swish",a.serialization.registerClass(Hn);class Qn extends a.serialization.Serializable{}class Zn extends Qn{constructor(t){super(),Yn(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return Object(a.tidy)(()=>{let e=Object(a.zeros)([1]);return this.hasL1&&(e=Object(a.add)(e,Object(a.sum)(a.mul(this.l1,Object(a.abs)(t))))),this.hasL2&&(e=Object(a.add)(e,Object(a.sum)(a.mul(this.l2,yt(t))))),e.asScalar()})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Zn.className="L1L2",a.serialization.registerClass(Zn);const Jn={l1l2:"L1L2"};function $n(t){return x(t)}function tr(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return k(t,a.serialization.SerializationMap.getMap().classNameMap,e,"regularizer")}function er(t){if(null==t)return null;if("string"===typeof t){return tr({className:t in Jn?Jn[t]:t,config:{}})}return t instanceof Qn?t:tr(t)}class nr extends ce{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=Zt(t);let n=Object(a.relu)(t);return null!=this.maxValue&&(n=Object(a.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}nr.className="ReLU",a.serialization.registerClass(nr);class rr extends ce{constructor(t){super(null==t?{}:t),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Zt(t);return Object(a.leakyRelu)(n,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}rr.className="LeakyReLU",a.serialization.registerClass(rr);class ar extends ce{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Gt(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=er(t.alphaRegularizer),this.alphaConstraint=P(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!==typeof t.sharedAxes)throw new u("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(t.sharedAxes));this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Jt(t)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)e[r-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<t.length;++r)n[r]=t[r];this.inputSpec=[new re({ndim:t.length,axes:n})],this.built=!0}call(t,e){return t=Zt(t),Object(a.prelu)(t,this.alpha.read())}getConfig(){const t={alphaInitializer:Ut(this.alphaInitializer),alphaRegularizer:$n(this.alphaRegularizer),alphaConstraint:z(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}ar.className="PReLU",a.serialization.registerClass(ar);class or extends ce{constructor(t){if(super(null==t?{}:t),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new l("Non-default alpha value (".concat(t.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==t.alpha?this.DEFAULT_ALPHA:t.alpha}call(t,e){const n=Zt(t);return Object(a.elu)(n)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}or.className="ELU",a.serialization.registerClass(or);class sr extends ce{constructor(t){super(null==t?{}:t),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=null==t.theta?this.DEFAULT_THETA:t.theta}call(t,e){const n=Zt(t);return n.mul(st(n.greater(this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}sr.className="ThresholdedReLU",a.serialization.registerClass(sr);class ir extends ce{constructor(t){super(null==t?{}:t),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new Un).apply,this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis}call(t,e){const n=Zt(t);return this.softmax(n,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function cr(t,e,n){if("number"===typeof t)return h(t,e);if(t.length!==e)throw new u("The ".concat(n," argument must be an integer or tuple of ").concat(e," integers.")+" Received: ".concat(t.length," elements."));for(let a=0;a<e;++a){const o=t[a];if((r=o)!==parseInt(r.toString(),10))throw new u("The ".concat(n," argument must be an integer or tuple of ").concat(e)+" integers. Received: ".concat(JSON.stringify(t)," including a")+" non-integer number ".concat(o))}return t;var r}function ur(t,e,n,r){let a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==t)return t;const o=e+(e-1)*(a-1);let s;return s="same"===n?t:t-o+1,Math.floor((s+r-1)/r)}function lr(t,e,n,r){if(null==t)return null;if("valid"===r)t=t*e+at([n-e,0]);else{if("same"!==r)throw new u("Unsupport padding mode: ".concat(r,"."));t*=e}return t}function dr(t,e){return Object(a.tidy)(()=>(q(e),"channelsFirst"===e?a.transpose(t,[0,2,3,1]):t))}function hr(t,e){return Object(a.tidy)(()=>(q(e),"channelsFirst"===e?a.transpose(t,[0,2,3,4,1]):t))}function pr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return Object(a.tidy)(()=>{if(null==s&&(s="channelsLast"),q(s),3!==t.shape.length)throw new u("The input of a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead."));if(3!==e.shape.length)throw new u("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new u("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(e.shape.length," instead"));if("channelsFirst"===s&&(t=a.transpose(t,[0,2,1])),"causal"===o)throw new l("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let c=a.conv1d(t,e,r,"same"===o?"same":"valid","NWC",i);return null!=n&&(c=xt(c,n)),c})}function fr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0,c=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return Object(a.tidy)(()=>{if(null==s&&(s="channelsLast"),q(s),3!==t.rank&&4!==t.rank)throw new u("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));if(3!==e.rank&&4!==e.rank)throw new u("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(t.rank,"."));let d=dr(t,s);if("causal"===o)throw new l("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return d=a.fused.conv2d({x:d,filter:e,strides:r,pad:"same"===o?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:c}),"channelsFirst"===s&&(d=a.transpose(d,[0,3,1,2])),d})}function mr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6?arguments[6]:void 0;return Object(a.tidy)(()=>{if(null==s&&(s="channelsLast"),q(s),4!==t.rank&&5!==t.rank)throw new u("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(t.rank,"."));if(4!==e.rank&&5!==e.rank)throw new u("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(t.rank,"."));let c=hr(t,s);if("causal"===o)throw new l("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return c=a.conv3d(c,e,r,"same"===o?"same":"valid","NDHWC",i),null!=n&&(c=xt(c,n)),"channelsFirst"===s&&(c=a.transpose(c,[0,4,1,2,3])),c})}ir.className="Softmax",a.serialization.registerClass(ir);class br extends ce{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",br.verifyArgs(e),this.rank=t,j(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new l("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=cr(e.kernelSize,t,"kernelSize"),this.strides=cr(null==e.strides?1:e.strides,t,"strides"),this.padding=null==e.padding?"valid":e.padding,K(this.padding),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,q(this.dataFormat),this.activation=Xn(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=P(e.biasConstraint),this.biasRegularizer=er(e.biasRegularizer),this.activityRegularizer=er(e.activityRegularizer),this.dilationRate=cr(null==e.dilationRate?1:e.dilationRate,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new u("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new u("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new u("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(t){if(p("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!==typeof t.kernelSize&&!T(t.kernelSize,"number",1,3))throw new u("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(t.kernelSize),"."))}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:qn(this.activation),useBias:this.useBias,biasInitializer:Ut(this.biasInitializer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),biasConstraint:z(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class gr extends br{constructor(t,e){super(t,e),this.kernel=null,gr.verifyArgs(e),this.filters=e.filters,j(this.filters,"filters"),this.kernelInitializer=Gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=P(e.kernelConstraint),this.kernelRegularizer=er(e.kernelRegularizer)}build(t){t=Jt(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u("The channel dimension of the input should be defined. "+"Found ".concat(t[e]));const n=t[e],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:n}}],this.built=!0}call(t,e){return Object(a.tidy)(()=>{let e;t=Zt(t);const n=null==this.bias?null:this.bias.read(),r=C(this.activation.getClassName());if(null!=r&&2===this.rank)e=fr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)e=pr(t,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)e=fr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new l("convolutions greater than 3D are not implemented yet.");e=mr(t,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(e=this.activation.apply(e))}return e})}computeOutputShape(t){t=Jt(t);const e=[],n="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<n.length;++a){const t=ur(n[a],this.kernelSize[a],this.padding,this.strides[a],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(t)}let r=[t[0]];return"channelsLast"===this.dataFormat?(r=r.concat(e),r.push(this.filters)):(r.push(this.filters),r=r.concat(e)),r}getConfig(){const t={filters:this.filters,kernelInitializer:Ut(this.kernelInitializer),kernelRegularizer:$n(this.kernelRegularizer),kernelConstraint:z(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!==typeof t.filters||t.filters<1)throw new u("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(t.filters)))}}class yr extends gr{constructor(t){super(2,t),yr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!T(t.kernelSize,"number",1,2))throw new u("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(t.kernelSize),"."))}}yr.className="Conv2D",a.serialization.registerClass(yr);class vr extends gr{constructor(t){super(3,t),vr.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new u("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(t.kernelSize),"."))}}vr.className="Conv3D",a.serialization.registerClass(vr);class xr extends yr{constructor(t){if(super(t),this.inputSpec=[new re({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new u("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(t){if(4!==(t=Jt(t)).length)throw new u("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new u("The channel dimension of the inputs should be defined. Found `None`.");const n=t[e],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new re({ndim:4,axes:{[e]:n}})],this.built=!0}call(t,e){return a.tidy(()=>{let e=Zt(t);if(4!==e.shape.length)throw new u("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(e.shape.length));const n=e.shape,r=n[0];let o,s;"channelsFirst"===this.dataFormat?(o=2,s=3):(o=1,s=2);const i=n[o],c=n[s],l=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=[r,lr(i,h,l,this.padding),lr(c,p,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(e=a.transpose(e,[0,2,3,1]));let m=a.conv2dTranspose(e,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=a.transpose(m,[0,3,1,2])),null!=this.bias&&(m=xt(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(t){const e=(t=Jt(t)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const o=this.kernelSize[0],s=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return e[n]=this.filters,e[r]=lr(e[r],i,o,this.padding),e[a]=lr(e[a],c,s,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}xr.className="Conv2DTranspose",a.serialization.registerClass(xr);class wr extends gr{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new u("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new u("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new u("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(e.padding)));this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Gt(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=er(e.depthwiseRegularizer),this.depthwiseConstraint=P(e.depthwiseConstraint),this.pointwiseInitializer=Gt(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=er(e.pointwiseRegularizer),this.pointwiseConstraint=P(e.pointwiseConstraint)}build(t){if((t=Jt(t)).length<this.rank+2)throw new u("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(t)));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new u("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(t[e])));const n=t[e],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let o=0;o<this.rank;++o)a.push(1);a.push(n*this.depthMultiplier,this.filters);this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,!0,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.inputSpec=[new re({ndim:this.rank+2,axes:{[e]:n}})],this.built=!0}call(t,e){return Object(a.tidy)(()=>{let e;if(t=Zt(t),1===this.rank)throw new l("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=a.transpose(t,[0,2,3,1])),e=a.separableConv2d(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(e=xt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),"channelsFirst"===this.dataFormat&&(e=a.transpose(e,[0,3,1,2])),e})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=Ut(this.depthwiseInitializer),t.pointwiseInitializer=Ut(this.pointwiseInitializer),t.depthwiseRegularizer=$n(this.depthwiseRegularizer),t.pointwiseRegularizer=$n(this.pointwiseRegularizer),t.depthwiseConstraint=z(this.depthwiseConstraint),t.pointwiseConstraint=z(this.pointwiseConstraint),t}}wr.className="SeparableConv";class kr extends wr{constructor(t){super(2,t)}}kr.className="SeparableConv2D",a.serialization.registerClass(kr);class Or extends gr{constructor(t){super(1,t),Or.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!==typeof t.kernelSize&&!T(t.kernelSize,"number",1,1))throw new u("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(t.kernelSize),"."))}}Or.className="Conv1D",a.serialization.registerClass(Or);class Ir extends ce{constructor(t){super(t),"number"===typeof t.cropping?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"===typeof t.cropping[0]?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return Object(a.tidy)(()=>{if(t=Zt(t),"channelsLast"===this.dataFormat){const e=dt(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return dt(e,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const e=dt(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return dt(e,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Ir.className="Cropping2D",a.serialization.registerClass(Ir);class Sr extends ce{constructor(t){var e;super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==t.size?this.DEFAULT_SIZE:t.size,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),this.interpolation=null==t.interpolation?"nearest":t.interpolation,e=this.interpolation,N(W,"InterpolationFormat",e)}computeOutputShape(t){if("channelsFirst"===this.dataFormat){const e=null==t[2]?null:this.size[0]*t[2],n=null==t[3]?null:this.size[1]*t[3];return[t[0],t[1],e,n]}{const e=null==t[1]?null:this.size[0]*t[1],n=null==t[2]?null:this.size[1]*t[2];return[t[0],e,n,t[3]]}}call(t,e){return a.tidy(()=>{let e=Zt(t);const n=e.shape;if("channelsFirst"===this.dataFormat){e=a.transpose(e,[0,2,3,1]);const t=this.size[0]*n[2],r=this.size[1]*n[3],o="nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r]);return a.transpose(o,[0,3,1,2])}{const t=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?e.resizeNearestNeighbor([t,r]):e.resizeBilinear([t,r])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Sr.className="UpSampling2D",a.serialization.registerClass(Sr);class Nr extends br{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Gt(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=P(t.depthwiseConstraint),this.depthwiseRegularizer=er(t.depthwiseRegularizer)}build(t){if((t=Jt(t)).length<4)throw new u("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(t),"."));const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new u("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(t[e],")."));const n=t[e],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.tidy)(()=>{let e=function(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",o=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return Object(a.tidy)(()=>{null==o&&(o="channelsLast"),q(o);let i=dr(t,o);if(4!==t.rank)throw new u("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));if(4!==e.rank)throw new u("depthwiseKernel is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));return i=a.depthwiseConv2d(i,e,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===o&&(i=a.transpose(i,[0,3,1,2])),i})}(t=Zt(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(e=xt(e,this.bias.read(),this.dataFormat)),null!=this.activation&&(e=this.activation.apply(e)),e})}computeOutputShape(t){t=Jt(t);const e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=ur(e,this.kernelSize[0],this.padding,this.strides[0]),o=ur(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],r,a,o]:[t[0],a,o,r]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=Ut(this.depthwiseInitializer),t.depthwiseRegularizer=$n(this.depthwiseRegularizer),t.depthwiseConstraint=z(this.depthwiseRegularizer),t}}function Tr(t,e,n,r){if(Array.isArray(t)){if(null!=e||null!=n)throw new u("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=t.slice(t.length-r,t.length),t=t.slice(0,t.length-r)),t.length>1&&(e=t.slice(1,t.length)),t=t[0]}function a(t){return null==t||Array.isArray(t)?t:[t]}return{inputs:t,initialState:e=a(e),constants:n=a(n)}}function jr(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return a.tidy(()=>{const d=e.shape.length;if(d<3)throw new u("Input should be at least 3D, but is ".concat(d,"D."));const h=[1,0].concat(ot(2,d));if(e=a.transpose(e,h),null!=s)throw new l("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=o&&(o=o.asType("bool").asType("float32"),o.rank===d-1&&(o=a.expandDims(o,-1)),o=a.transpose(o,h)),r&&(e=a.reverse(e,0),null!=o&&(o=a.reverse(o,0)));const p=[];let f,m=n;const b=e.shape[0],g=a.unstack(e);let y,v;null!=o&&(y=a.unstack(o));for(let e=0;e<b;++e){const n=g[e],r=a.tidy(()=>t(n,m));if(null==o)f=r[0],m=r[1];else{const t=a.tidy(()=>{const t=y[e],n=a.onesLike(t).sub(t);return{output:r[0].mul(t).add(m[0].mul(n)),newStates:m.map((e,a)=>r[1][a].mul(t).add(e.mul(n)))}});f=t.output,m=t.newStates}c&&p.push(f)}if(c){const t=1;v=a.stack(p,t)}return[f,v,m]})}Nr.className="DepthwiseConv2D",a.serialization.registerClass(Nr);class Cr extends ce{constructor(t){let e;if(super(t),null==t.cell)throw new u("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new zr({cells:t.cell}):t.cell,null==e.stateSize)throw new u("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new re({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ot(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}return this.states_}setStates(t){this.states_=t}computeOutputShape(t){Yt(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const n=e[0];let r;if(r=this.returnSequences?[t[0],t[1],n]:[t[0],n],this.returnState){const n=[];for(const r of e)n.push([t[0],r]);return[r].concat(n)}return r}computeMask(t,e){return a.tidy(()=>{Array.isArray(e)&&(e=e[0]);const t=this.returnSequences?e:null;if(this.returnState){const e=this.states.map(t=>null);return[t].concat(e)}return t})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let n=0;n<t;++n)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new l("Constants support is not implemented in RNN yet.");Yt(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,n=t.slice(2);this.inputSpec[0]=new re({shape:[e,null,...n]});const r=[t[0]].concat(t.slice(2));let o;if(this.cell.build(r),o=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!a.util.arraysEqual(this.stateSpec.map(t=>t.shape[t.shape.length-1]),o))throw new u("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=o.map(t=>new re({shape:[null,t]}));this.stateful&&this.resetStates()}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];Object(a.tidy)(()=>{if(!this.stateful)throw new i("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a.zeros([n,t])):this.states_=[a.zeros([n,this.cell.stateSize])];else if(null==t)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(t=>a.zeros([n,t])):this.states_[0]=a.zeros([n,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));!0===e?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const r=t[e],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[e]:this.cell.stateSize,s=[n,o];if(!a.util.arraysEqual(r.shape,s))throw new u("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(r.shape));this.states_[e]=r}}this.states_=this.states_.map(t=>a.keep(t.clone()))})}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=Tr(t,n,r,this.numConstants);t=a.inputs,n=a.initialState,r=a.constants;let o=[],s=[];if(null!=n){e.initialState=n,o=o.concat(n),this.stateSpec=[];for(const t of n)this.stateSpec.push(new re({shape:t.shape}));s=s.concat(this.stateSpec)}null!=r&&(e.constants=r,o=o.concat(r),this.numConstants=r.length);if(o[0]instanceof ae){const n=[t].concat(o),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=a,i}return super.apply(t,e)}call(t,e){return Object(a.tidy)(()=>{const n=null==e?null:e.mask,r=null==e?null:e.training;let a=null==e?null:e.initialState;t=Zt(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==o)throw new u("RNN Layer has ".concat(o," state(s) but was passed ")+"".concat(a.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const s={training:r},i=jr((t,e)=>{const n=this.cell.call([t].concat(e),s);return[n[0],n.slice(1)]},t,a,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],d=i[2];this.stateful&&this.resetStates(d,r);const h=this.returnSequences?l:c;return this.returnState?[h].concat(d):h})}getInitialState(t){return Object(a.tidy)(()=>{let e=a.zeros(t.shape);return e=a.sum(e,[1,2]),e=it(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(t=>t>1?ft(e,[1,t]):e):this.cell.stateSize>1?[ft(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Cr.className&&(e.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,t,e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=ke(e.cell,n);return new t(Object.assign(e,{cell:r}))}}Cr.className="RNN",a.serialization.registerClass(Cr);class Er extends ce{}class Ar extends Er{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,j(this.units,"units"),this.activation=Xn(null==t.activation?this.DEFAULT_ACTIVATION:t.activation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=er(t.kernelRegularizer),this.recurrentRegularizer=er(t.recurrentRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.kernelConstraint=P(t.kernelConstraint),this.recurrentConstraint=P(t.recurrentConstraint),this.biasConstraint=P(t.biasConstraint),this.dropout=rt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=rt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Jt(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.tidy)(()=>{if(2!==(t=t).length)throw new u("SimpleRNNCell expects 2 input Tensors, got ".concat(t.length,"."));let n=t[1];t=t[0];const r=null!=e.training&&e.training;let o;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>a.onesLike(t),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>a.onesLike(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;o=bt(null!=s?a.mul(t,s):t,this.kernel.read()),null!=this.bias&&(o=xt(o,this.bias.read())),null!=i&&(n=a.mul(n,i));let c=a.add(o,bt(n,this.recurrentKernel.read()));return null!=this.activation&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:qn(this.activation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),recurrentInitializer:Ut(this.recurrentInitializer),biasInitializer:Ut(this.biasInitializer),kernelRegularizer:$n(this.kernelRegularizer),recurrentRegularizer:$n(this.recurrentRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:z(this.kernelConstraint),recurrentConstraint:z(this.recurrentConstraint),biasConstraint:z(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}Ar.className="SimpleRNNCell",a.serialization.registerClass(Ar);class _r extends Cr{constructor(t){t.cell=new Ar(t),super(t)}call(t,e){return Object(a.tidy)(()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}static fromConfig(t,e){return new t(e)}}_r.className="SimpleRNN",a.serialization.registerClass(_r);class Rr extends Er{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new u("GRUCell does not support reset_after parameter set to true.");this.units=t.units,j(this.units,"units"),this.activation=Xn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Xn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=er(t.kernelRegularizer),this.recurrentRegularizer=er(t.recurrentRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.kernelConstraint=P(t.kernelConstraint),this.recurrentConstraint=P(t.recurrentConstraint),this.biasConstraint=P(t.biasConstraint),this.dropout=rt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=rt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Jt(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return Object(a.tidy)(()=>{if(2!==(t=t).length)throw new u("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=null!=e.training&&e.training;let r=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>a.onesLike(t),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const o=this.dropoutMask,s=this.recurrentDropoutMask;let i,c,l;0<this.dropout&&this.dropout<1&&(t=a.mul(t,o[0]));let d=bt(t,this.kernel.read());this.useBias&&(d=xt(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,s[0]));const h=this.recurrentKernel.read(),[p,f]=a.split(h,[2*this.units,this.units],h.rank-1),m=bt(r,p),[b,g,y]=a.split(d,3,d.rank-1),[v,x]=a.split(m,2,m.rank-1);i=this.recurrentActivation.apply(a.add(b,v)),c=this.recurrentActivation.apply(a.add(g,x));const w=bt(a.mul(c,r),f);l=this.activation.apply(a.add(y,w));const k=a.add(a.mul(i,r),a.mul(a.add(1,a.neg(i)),l));return[k,k]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:qn(this.activation),recurrentActivation:qn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),recurrentInitializer:Ut(this.recurrentInitializer),biasInitializer:Ut(this.biasInitializer),kernelRegularizer:$n(this.kernelRegularizer),recurrentRegularizer:$n(this.recurrentRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:z(this.kernelConstraint),recurrentConstraint:z(this.recurrentConstraint),biasConstraint:z(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}Rr.className="GRUCell",a.serialization.registerClass(Rr);class Dr extends Cr{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Rr(t),super(t)}call(t,e){return Object(a.tidy)(()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Dr.className="GRU",a.serialization.registerClass(Dr);class Fr extends Er{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,j(this.units,"units"),this.activation=Xn(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=Xn(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Gt(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=er(t.kernelRegularizer),this.recurrentRegularizer=er(t.recurrentRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.kernelConstraint=P(t.kernelConstraint),this.recurrentConstraint=P(t.recurrentConstraint),this.biasConstraint=P(t.biasConstraint),this.dropout=rt([1,at([0,null==t.dropout?0:t.dropout])]),this.recurrentDropout=rt([1,at([0,null==t.recurrentDropout?0:t.recurrentDropout])]),this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const n=(t=Jt(t))[t.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const t=this.biasInitializer,n=this.units;r=new((e=class extends St{apply(e,r){const a=t.apply([n]),o=(new Tt).apply([n]),s=t.apply([2*n]);return pt(pt(a,o),s)}}).className="CustomInit",e)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return Object(a.tidy)(()=>{const n=null!=e.training&&e.training;if(3!==(t=t).length)throw new u("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));let r=t[1];const o=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>a.onesLike(t),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>a.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let c,l,d,h;0<this.dropout&&this.dropout<1&&(t=a.mul(t,s[0]));let p=bt(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=a.mul(r,i[0])),p=a.add(p,bt(r,this.recurrentKernel.read())),this.useBias&&(p=xt(p,this.bias.read()));const[f,m,b,g]=a.split(p,4,p.rank-1);c=this.recurrentActivation.apply(f),l=this.recurrentActivation.apply(m),d=a.add(a.mul(l,o),a.mul(c,this.activation.apply(b))),h=this.recurrentActivation.apply(g);const y=a.mul(h,this.activation.apply(d));return[y,y,d]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:qn(this.activation),recurrentActivation:qn(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),recurrentInitializer:Ut(this.recurrentInitializer),biasInitializer:Ut(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:$n(this.kernelRegularizer),recurrentRegularizer:$n(this.recurrentRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:z(this.kernelConstraint),recurrentConstraint:z(this.recurrentConstraint),biasConstraint:z(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Fr.className="LSTMCell",a.serialization.registerClass(Fr);class Mr extends Cr{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Fr(t),super(t)}call(t,e){return Object(a.tidy)(()=>{null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Mr.className="LSTM",a.serialization.registerClass(Mr);class zr extends Er{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return Object(a.tidy)(()=>{let n=(t=t).slice(1);const r=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?r.push(n.splice(0,t.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let o;for(let s=0;s<this.cells.length;++s){const i=this.cells[s];n=r[s],o=0===s?[t[0]].concat(n):[o[0]].concat(n),o=i.call(o,e),a.push(o.slice(1))}n=[];for(const t of a.slice().reverse())n.push(...t);return[o[0]].concat(n)})}build(t){let e;Yt(t)&&(t=t[0]),t=t,this.cells.forEach((n,r)=>{Q("RNNCell_".concat(r),()=>{n.build(t),e=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(t=>({className:t.getClassName(),config:t.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=[];for(const a of e.cells)r.push(ke(a,n));return new t({cells:r})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return ee(t)}setWeights(t){const e=[];for(const n of this.cells){const r=n.weights.length,a=t.splice(r);for(let t=0;t<n.weights.length;++t)e.push([n.weights[t],a[t]])}ne(e)}}function Lr(t){const{ones:e,rate:n,training:r=!1,count:o=1}=t,s=()=>wt(e(),n),i=()=>kt(s,e,r);if(!o||o<=1)return a.keep(i().clone());return Array(o).fill(void 0).map(i).map(t=>a.keep(t.clone()))}zr.className="StackedRNNCells",a.serialization.registerClass(zr);var Pr=function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&"function"===typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(t);a<r.length;a++)e.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(t,r[a])&&(n[r[a]]=t[r[a]])}return n};class Br extends Cr{constructor(t){if(t.unroll)throw new l("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new l("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new re({ndim:5})]}call(t,e){return a.tidy(()=>{if(null!=this.cell.dropoutMask&&(a.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(a.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new u("ConvRNN2D cell does not support constants");const n=null==e?null:e.mask,r=null==e?null:e.training,o=null==e?null:e.initialState;return super.call(t,{mask:n,training:r,initialState:o})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return a.tidy(()=>{const{stateSize:e}=this.cell,n=t.shape,r=this.computeSingleOutputShape(n),o=[r[0],...r.slice(2)],s=a.zeros(o);return Array.isArray(e)?Array(e.length).fill(s):[s]})}resetStates(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];a.tidy(()=>{if(!this.stateful)throw new i("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),o=[r[0],...r.slice(2)];if(null==n[0])throw new u("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.zeros(o)):this.states_=[a.zeros(o)];else if(null==t)a.dispose(this.states_),null!=this.keptStates&&(a.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>a.zeros(o)):this.states_[0]=a.zeros(o);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new u("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(t.length," state value(s). Input ")+"received: ".concat(t));e?this.keptStates.push(this.states_.slice()):a.dispose(this.states_);for(let e=0;e<this.states_.length;++e){const n=t[e],r=o;if(!a.util.arraysEqual(n.shape,r))throw new u("State ".concat(e," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(r,", received shape=").concat(n.shape));this.states_[e]=n}}this.states_=this.states_.map(t=>a.keep(t.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:n,kernelSize:r,padding:a,strides:o,dilationRate:s}=this.cell,i="channelsFirst"===e,c=t[i?3:2],u=t[i?4:3],l=ur(c,r[0],a,o[0],s[0]),d=ur(u,r[1],a,o[1],s[1]);return[...t.slice(0,2),...i?[n,l,d]:[l,d,n]]}}Br.className="ConvRNN2D";class Wr extends Fr{constructor(t){const{filters:e,kernelSize:n,strides:r,padding:a,dataFormat:o,dilationRate:s}=t;super(Object.assign({},t,{units:e})),this.filters=e,j(this.filters,"filters"),this.kernelSize=cr(n,2,"kernelSize"),this.kernelSize.forEach(t=>j(t,"kernelSize")),this.strides=cr(r||1,2,"strides"),this.strides.forEach(t=>j(t,"strides")),this.padding=a||"valid",K(this.padding),this.dataFormat=o||"channelsLast",q(this.dataFormat),this.dilationRate=cr(s||1,2,"dilationRate"),this.dilationRate.forEach(t=>j(t,"dilationRate"))}build(t){var e;t=Jt(t);const n="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[n])throw new u("The channel dimension of the input should be defined. "+"Found ".concat(t[n]));const r=t[n],o=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let t;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;t=new((e=class extends St{apply(t,e){return ht([n.apply([r]),a.ones([r]),n.apply([2*r])])}}).className="CustomInit",e)}else t=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,t,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return a.tidy(()=>{if(3!==t.length)throw new u("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(t.length,"."));const n=e.training||!1,r=t[0],o=t[1],s=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Lr({ones:()=>a.onesLike(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,c=(t,e,n)=>e&&e[n]?a.mul(e[n],t):t;let l=c(r,i,0),d=c(r,i,1),h=c(r,i,2),p=c(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Lr({ones:()=>a.onesLike(o),rate:this.recurrentDropout,training:n,count:4}));const f=this.recurrentDropoutMask;let m=c(o,f,0),b=c(o,f,1),g=c(o,f,2),y=c(o,f,3);const[v,x,w,k]=a.split(this.kernel.read(),4,3),[O,I,S,N]=this.useBias?a.split(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,v,O,this.padding),d=this.inputConv(d,x,I,this.padding),h=this.inputConv(h,w,S,this.padding),p=this.inputConv(p,k,N,this.padding);const[T,j,C,E]=a.split(this.recurrentKernel.read(),4,3);m=this.recurrentConv(m,T),b=this.recurrentConv(b,j),g=this.recurrentConv(g,C),y=this.recurrentConv(y,E);const A=this.recurrentActivation.apply(a.add(l,m)),_=this.recurrentActivation.apply(a.add(d,b)),R=a.add(a.mul(_,s),a.mul(A,this.activation.apply(a.add(h,g)))),D=a.mul(this.recurrentActivation.apply(a.add(p,y)),this.activation.apply(R));return[D,D,R]})}getConfig(){const t=super.getConfig(),{units:e}=t,n=Pr(t,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(t,e,n,r){const o=a.conv2d(t,e,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xt(o,n,this.dataFormat):o}recurrentConv(t,e){return a.conv2d(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Wr.className="ConvLSTM2DCell",a.serialization.registerClass(Wr);class Vr extends Br{constructor(t){const e=new Wr(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Vr.className="ConvLSTM2D",a.serialization.registerClass(Vr);class Ur extends ce{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?e[r]:this.noiseShape[r]);return n}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Zt(t);if(0<this.rate&&this.rate<1){const t=null!=e.training&&e.training,r=this.getNoiseShape(n);return kt(()=>wt(n,this.rate,r,this.seed),()=>n,t)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}Ur.className="Dropout",a.serialization.registerClass(Ur);class Gr extends Ur{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Gr.className="SpatialDropout1D",a.serialization.registerClass(Gr);class Hr extends ce{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,j(this.units,"units"),this.activation=Xn(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=P(t.kernelConstraint),this.biasConstraint=P(t.biasConstraint),this.kernelRegularizer=er(t.kernelRegularizer),this.biasRegularizer=er(t.biasRegularizer),this.activityRegularizer=er(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Jt(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Jt(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Zt(t),r=C(this.activation.getClassName());let a;return null!=r?a=bt(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=bt(n,this.kernel.read()),null!=this.bias&&(a=xt(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:qn(this.activation),useBias:this.useBias,kernelInitializer:Ut(this.kernelInitializer),biasInitializer:Ut(this.biasInitializer),kernelRegularizer:$n(this.kernelRegularizer),biasRegularizer:$n(this.biasRegularizer),activityRegularizer:$n(this.activityRegularizer),kernelConstraint:z(this.kernelConstraint),biasConstraint:z(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Hr.className="Dense",a.serialization.registerClass(Hr);class qr extends ce{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Jt(t);for(const e of t.slice(1))if(null==e)throw new u('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(t.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[t[0],et(t,1)]}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);let n=Zt(t);if("channelsFirst"===this.dataFormat&&n.rank>1){const t=[0];for(let e=2;e<n.rank;++e)t.push(e);t.push(1),n=n.transpose(t)}return function(t){if(t.rank<=1)throw new u("batchFlatten requires a minimum rank of 2. Got rank: ".concat(t.rank,"."));const e=[t.shape[0],et(t.shape,1)];return t.reshape(e)}(n)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}qr.className="Flatten",a.serialization.registerClass(qr);class Kr extends ce{constructor(t){super(t),this.supportsMasking=!0,this.activation=Xn(t.activation)}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Zt(t);return this.activation.apply(n)})}getConfig(){const t={activation:qn(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}Kr.className="Activation",a.serialization.registerClass(Kr);class Xr extends ce{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return Object(a.tidy)(()=>{return t=Zt(t),e=t,n=this.n,Object(a.tidy)(()=>{if(2!==e.shape.length)throw new u("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(e.shape.length," tensor."));return ft(it(e,1),[1,n,1])});var e,n})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}Xr.className="RepeatVector",a.serialization.registerClass(Xr);class Yr extends ce{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const n="Total size of new array must be unchanged.",r=e.slice();let a=1,o=null;for(let i=0;i<r.length;++i){const t=r[i];if(this.isUnknown(t)){if(null!==o)throw new u("Can only specifiy one unknown dimension.");o=i}else a*=t}const s=et(t);if(null!==o){if(0===a||s%a!==0)throw new u(n);r[o]=s/a}else if(s!==a)throw new u(n);return r}computeOutputShape(t){let e=!1;for(let n=0;n<t.length;++n)if(this.isUnknown(t[n])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Zt(t),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}Yr.className="Reshape",a.serialization.registerClass(Yr);class Qr extends ce{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(t.dims," instead."));const e=ot(1,t.dims.length+1);if(!a.util.arraysEqual(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new re({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Jt(t)).slice();return this.dims.forEach((n,r)=>{e[r+1]=t[n]}),e}call(t,e){return Object(a.transpose)(Zt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}Qr.className="Permute",a.serialization.registerClass(Qr);class Zr extends ce{constructor(t){super(null==t?{}:t),this.supportsMasking=!0,this.maskValue=null!=t?null==t.maskValue?0:t.maskValue:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const n=Zt(t);return Object(a.any)(Object(a.notEqual)(n,this.maskValue),-1)}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Zt(t),r=Object(a.any)(Object(a.notEqual)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))})}}Zr.className="Masking",a.serialization.registerClass(Zr);class Jr extends ce{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),null==t.inputLength?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(b(t.inputLength))}this.inputDim=t.inputDim,j(this.inputDim,"inputDim"),this.outputDim=t.outputDim,j(this.outputDim,"outputDim"),this.embeddingsInitializer=Gt(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=er(t.embeddingsRegularizer),this.activityRegularizer=er(t.activityRegularizer),this.embeddingsConstraint=P(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return Object(a.tidy)(()=>this.maskZero?(t=Zt(t),Object(a.notEqual)(t,Object(a.zerosLike)(t))):null)}computeOutputShape(t){if(t=Jt(t),null==this.inputLength)return[...t,this.outputDim];const e=b(this.inputLength);if(e.length!==t.length-1)throw new u('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));{let n=0;for(let r=0;r<e.length;++r){const a=e[r],o=t[r+1];if(null!=a&&null!=o&&a!==o)throw new u('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(t));null==a&&(e[n]=o),n++}}return[t[0],...e,this.outputDim]}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);let n=Zt(t);"int32"!==n.dtype&&(n=st(n,"int32"));return gt(this.embeddings.read(),n.as1D()).reshape(Jt(this.computeOutputShape(n.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ut(this.embeddingsInitializer),embeddingsRegularizer:$n(this.embeddingsRegularizer),activityRegularizer:$n(this.activityRegularizer),embeddingsConstraint:z(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}Jr.className="Embedding",a.serialization.registerClass(Jr);class $r extends ce{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new l}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const n=t.slice(0,t.length-e.length);for(let r=0;r<e.length;++r){const a=t[t.length-e.length+r],o=e[r];if(null==a||null==o||a<0||o<0)n.push(null);else if(1===a)n.push(o);else if(1===o)n.push(a);else{if(a!==o)throw new u("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));n.push(a)}}return n}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Jt(t)]),(t=t).length<2)throw new u("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(t.length," input(s)."));let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=I(e),e.length>1)throw new u("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(t),"."));let n=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const e=null==t[a]?null:t[a].slice(1);n=this.computeElementwiseOpOutputShape(n,e)}const r=t.map(t=>t.length);-1===t.indexOf(null)&&1===I(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return Object(a.tidy)(()=>{if(t=t,this.reshapeRequired){const e=[],n=t.map(t=>t.rank);if(-1===n.indexOf(null)){const r=at(n);for(let n of t){const t=n.rank;for(let e=0;e<r-t;++e)n=it(n,1);e.push(n)}return this.mergeFunction(e)}{let n=!1;for(const s of t){const t=s.rank;if(null==t){const t=s.shape,r=t[0],o=t.slice(1).concat([r]);let i=s.reshape([r].concat(et(t.slice(1))));i=a.transpose(i,[1,0]),i=i.reshape(o),e.push(i),n=!0}else if(t>1){const r=ot(1,t).concat([0]);e.push(a.transpose(s,r)),n=!0}else e.push(s)}let r=this.mergeFunction(e);const o=r.rank;if(n)if(null==o){const t=r.shape,e=t[t.length-1],n=[e].concat(t.slice(0,t.length-1));r=a.transpose(r.reshape([-1,e]),[1,0]).reshape(n)}else if(o>1){const t=[o-1].concat(ot(0,o-1));r=a.transpose(r,t)}return r}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==(t=t)[0]?null:t[0].slice(1);for(let r=1;r<t.length;++r){const n=null==t[r]?null:t[r].slice(1);e=this.computeElementwiseOpOutputShape(e,n)}let n=[];for(const r of t)null!=r&&null!==r[0]&&n.push(r[0]);return n=I(n),e=1===n.length?n.concat(e):[null].concat(e),e}computeMask(t,e){return a.tidy(()=>{if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an Array");if(!Array.isArray(t))throw new u("`inputs` should be an Array");if(e.length!==t.length)throw new u("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(t.length," vs ").concat(e.length,")"));if(e.every(t=>null==t))return null;let n=(e=e.map(t=>null==t?t:a.expandDims(t,0)))[0];for(let t=1;t<e.length-1;++t)n=a.logicalAnd(n,e[t]);return n})}}class ta extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.add(e,t[n]);return e})}}ta.className="Add",a.serialization.registerClass(ta);class ea extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.mul(e,t[n]);return e})}}ea.className="Multiply",a.serialization.registerClass(ea);class na extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0].clone();for(let n=1;n<t.length;++n)e=a.add(e,t[n]);return a.mul(1/t.length,e)})}}na.className="Average",a.serialization.registerClass(na);class ra extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.maximum(e,t[n]);return e})}}ra.className="Maximum",a.serialization.registerClass(ra);class aa extends $r{constructor(t){super(t)}mergeFunction(t){return Object(a.tidy)(()=>{let e=t[0];for(let n=1;n<t.length;++n)e=a.minimum(e,t[n]);return e})}}aa.className="Minimum",a.serialization.registerClass(aa);class oa extends $r{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=null==t.axis?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new u("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const r of t)if(null!=r){e=!1;break}if(e)return;const n=[];for(let r=0;r<t.length;++r){const e=t[r].slice();e.splice(this.axis,1);let o=!1;for(const t of n)if(a.util.arraysEqual(t,e)){o=!0;break}o||n.push(e)}if(n.length>1)throw new u("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return Object(a.tidy)(()=>ht(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new u("A `Concatenate` layer should be called on a list of inputs.");const e=t,n=e[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const a of e.slice(1)){if(null==n[r]||null==a[r]){n[r]=null;break}n[r]+=a[r]}return n}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new u("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new u("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new u("Mismatch in the length of mask (".concat(e.length,") ")+"and the legnth of inputs (".concat(t.length,")"));return a.tidy(()=>{let n=!0;if(e.forEach(t=>{null==t||(n=!1)}),n)return null;const r=[];for(let s=0;s<t.length;++s)null==e[s]?r.push(a.onesLike(t[s]).asType("bool")):e[s].rank<t[s].rank?r.push(a.expandDims(e[s],-1)):r.push(e[s]);const o=a.concat(r,this.axis);return a.all(o,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function sa(t,e){for(;t<0;)t+=e;return t}oa.className="Concatenate",a.serialization.registerClass(oa);class ia extends $r{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){a.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],n=t[1];if(e.length>3||n.length>3)throw new l("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);if(e[r[0]]!==n[r[1]])throw new u("Dimension incompatibility: "+"".concat(e[r[0]]," !== ").concat(n[r[1]]))}mergeFunction(t){if(2!==t.length)throw new u("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(t.length," input(s)."));let e,n=t[0],r=t[1];return e=Array.isArray(this.axes)?this.axes.map((e,n)=>sa(e,t[n].shape.length)):[sa(this.axes,n.shape.length),sa(this.axes,r.shape.length)],this.normalize&&(n=Oe(n,e[0]),r=Oe(r,e[1])),function(t,e,n){if(t.shape.length>3||e.shape.length>3)throw new l("batchDot is not implemented for tensors of 4D or higher rank yet");if(a.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(t.shape.length)),a.util.assert(t.shape.length>=2,()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(e.shape.length)),"number"===typeof n&&(n=[n,n]),"complex64"===t.dtype||"complex64"===e.dtype)throw new l("batchDot is not implemented for complex64-type Tensors yet.");const r=t.shape.length,o=e.shape.length;null==n&&(n=[r-1,o-2]);const s=n;return a.tidy(()=>{let n,a;if(r>o){n=r-o;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else if(o>r){n=o-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else n=0;if(2===t.shape.length&&2===e.shape.length)a=s[0]===s[1]?t.mul(e).sum(s[0]):t.transpose([1,0]).mul(e).sum(s[1]);else{const n=s[0]!==t.shape.length-1,r=s[1]===e.shape.length-1;a=t.matMul(e,n,r)}if(n>0){let t;t=r>o?r+o-3:r-1;const e=[];for(let r=t;r<t+n;++r)e.push(r);a=a.squeeze(e)}return 1===a.shape.length&&(a=a.expandDims(1)),a})}(n,r,e)}interpretAxes(t,e){let n;return n=Array.isArray(this.axes)?this.axes:[sa(this.axes,t.length),sa(this.axes,e.length)],n}computeOutputShape(t){a.util.assert(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),n=t[1].slice();if(e.length>3||n.length>3)throw new l("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(e,n);e.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const o=e.concat(n);return 1===o.length&&o.push(1),o}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}ia.className="Dot",a.serialization.registerClass(ia);class ca extends ce{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Zt(t);return kt(()=>mt(n.shape,0,this.stddev).add(n),()=>n,e.training||!1)})}}ca.className="GaussianNoise",a.serialization.registerClass(ca);class ua extends ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e);const n=Zt(t);if(this.rate>0&&this.rate<1){return kt(()=>{const t=Math.sqrt(this.rate/(1-this.rate));return n.mul(mt(n.shape,1,t))},()=>n,e.training||!1)}return n})}}ua.className="GaussianDropout",a.serialization.registerClass(ua);class la extends ce{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Zt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return Object(a.tidy)(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(t);return kt(()=>{const e=Zt(t),r=-1.7580993408473766;let o=Object(a.greaterEqual)(Object(a.randomUniform)(n),this.rate);o=st(o,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return e.mul(o).add(o.add(-1).mul(r)).mul(s).add(i)},()=>Zt(t),e.training||!1)}return t})}}function da(t,e,n,r,o){let s,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===t.rank)s=a.batchNorm2d(t,e,n,r,o,i);else if(3===t.rank)s=a.batchNorm3d(t,e,n,r,o,i);else{if(4!==t.rank)throw new l("batchNormalization is not implemented for array of rank ".concat(t.rank," ")+"yet");s=a.batchNorm4d(t,e,n,r,o,i)}return s}function ha(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Object(a.tidy)(()=>{const s=a.moments(t,r),i=s.mean,c=s.variance;return[da(t,i,c,n,e,o),i,c]})}function pa(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return Object(a.tidy)(()=>{const s=a.moments(t,r),i=s.mean,c=s.variance,u=[];for(const e of ot(0,t.rank))-1!==r.indexOf(e)?u.push(1):u.push(t.shape[e]);const l=i.reshape(u),d=c.reshape(u),h=null==e?null:e.reshape(u),p=null==n?null:n.reshape(u);return[da(t,l,d,p,h,o),i,c]})}la.className="AlphaDropout",a.serialization.registerClass(la);class fa extends ce{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=null==t.axis?-1:t.axis,this.momentum=null==t.momentum?.99:t.momentum,this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Gt(t.betaInitializer||"zeros"),this.gammaInitializer=Gt(t.gammaInitializer||"ones"),this.movingMeanInitializer=Gt(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Gt(t.movingVarianceInitializer||"ones"),this.betaConstraint=P(t.betaConstraint),this.gammaConstraint=P(t.gammaConstraint),this.betaRegularizer=er(t.betaRegularizer),this.gammaRegularizer=er(t.gammaRegularizer)}build(t){t=Jt(t);const e=this.axis>=0?this.axis:this.axis+t.length,n=t[e];if(null==n)throw new u("Axis ".concat(e," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(t),"."));this.inputSpec=[new re({ndim:t.length,axes:{[e]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return Object(a.tidy)(()=>{const n=null!=e.training&&e.training,r=Zt(t),o=r.shape,s=o.length,i=ot(0,s),c=this.axis>=0?this.axis:this.axis+s;i.splice(c,1);const u=h(1,s);u[c]=o[c];const l=i.slice();l.sort();const d=!a.util.arraysEqual(l,ot(0,s).slice(0,s-1));if(!n)return(()=>{if(d){const t=this.movingMean.read().reshape(u),e=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return da(r,t,e,n,a,this.epsilon)}return da(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,f,m]=function(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return a.util.arraysEqual(r.slice().sort(),ot(0,t.rank-1))?ha(t,e,n,r,o):pa(t,e,n,r,o)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),b=(t,e,n)=>{a.tidy(()=>{const r=1-n,a=t.read(),o=a.sub(e).mul(r);t.write(a.sub(o))})};return(()=>{b(this.movingMean,f,this.momentum),b(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ut(this.betaInitializer),gammaInitializer:Ut(this.gammaInitializer),movingMeanInitializer:Ut(this.movingMeanInitializer),movingVarianceInitializer:Ut(this.movingVarianceInitializer),betaRegularizer:$n(this.betaRegularizer),gammaRegularizer:$n(this.gammaRegularizer),betaConstraint:z(this.betaConstraint),gammaConstraint:z(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}fa.className="BatchNormalization",a.serialization.registerClass(fa);class ma extends ce{constructor(t){if(null==t&&(t={}),super(t),this.axis=null==t.axis?-1:t.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const t of this.axis)if(!Number.isInteger(t))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==t.epsilon?.001:t.epsilon,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Gt(t.betaInitializer||"zeros"),this.gammaInitializer=Gt(t.gammaInitializer||"ones"),this.betaRegularizer=er(t.betaRegularizer),this.gammaRegularizer=er(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Jt(t)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error("Invalid axis: ".concat(r));if(this.axis.length!==I(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map(e=>t[e]);this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(t,e){const n=Zt(t),r=n.shape,o=r.length;return Object(a.tidy)(()=>{let{mean:t,variance:e}=Object(a.moments)(n,this.axis,!0);const s=h(1,o);for(const n of this.axis)s[n]=r[n];const i=t=>null!=t&&t.shape.length!==o&&this.axis!==[o-1]?t.reshape(s):t;let c=i(this.gamma.read()),u=i(this.beta.read());const l=[],d=[];for(let n=0;n<o;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),d.push(1)):(l.push(1),d.push(r[n]));return t=t.tile(l),e=e.tile(l),c=c.tile(d),u=u.tile(d),da(n,t,e,u,c,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ut(this.betaInitializer),gammaInitializer:Ut(this.gammaInitializer),betaRegularizer:$n(this.betaRegularizer),gammaRegularizer:$n(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}ma.className="LayerNormalization",a.serialization.registerClass(ma);class ba extends ce{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,null==t.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new u("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(t.padding.length," array."));let e,n;if("number"===typeof t.padding[0])e=[t.padding[0],t.padding[0]],n=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new u("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(t.padding[0].length," array."));if(e=t.padding[0],2!==t.padding[1].length)throw new u("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(t.padding[1].length," array."));n=t.padding[1]}this.padding=[e,n]}this.inputSpec=[new re({ndim:4})]}computeOutputShape(t){let e,n;return t=Jt(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,n]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,n,t[3]])}call(t,e){return Object(a.tidy)(()=>{return e=Zt(t),n=this.padding,r=this.dataFormat,Object(a.tidy)(()=>{if(4!==e.rank)throw new u("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(e.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new u("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new u("Unknown data format: ".concat(r,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let t;return t="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],a.pad(e,t)});var e,n,r})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function ga(t,e,n,r,o,s){return Object(a.tidy)(()=>{let i;q(o),X(s),K(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==s&&(s="max"),t=dr(t,o);const c="same"===r?"same":"valid";return i="max"===s?a.maxPool(t,e,n,c):a.avgPool(t,e,n,c),"channelsFirst"===o&&(i=a.transpose(i,[0,3,1,2])),i})}function ya(t,e,n,r,o,s){return Object(a.tidy)(()=>{let i;q(o),X(s),K(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==o&&(o="channelsLast"),null==s&&(s="max"),t=hr(t,o);const c="same"===r?"same":"valid";return i="max"===s?a.maxPool3d(t,e,n,c):a.avgPool3d(t,e,n,c),"channelsFirst"===o&&(i=a.transpose(i,[0,4,1,2,3])),i})}ba.className="ZeroPadding2D",a.serialization.registerClass(ba);class va extends ce{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"===typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!==typeof t.poolSize[0])throw new u("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.poolSize)));this.poolSize=t.poolSize}if(j(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"===typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!==typeof t.strides[0])throw new u("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(t.strides)));this.strides=t.strides}j(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,K(this.padding),this.inputSpec=[new re({ndim:3})]}computeOutputShape(t){const e=ur((t=Jt(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return Object(a.tidy)(()=>{this.invokeCallHook(t,e),t=it(Zt(t),2);const n=this.poolingFunction(Zt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return a.squeeze(n,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class xa extends va{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"max")}}xa.className="MaxPooling1D",a.serialization.registerClass(xa);class wa extends va{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"avg")}}wa.className="AveragePooling1D",a.serialization.registerClass(wa);class ka extends ce{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new u("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides];j(this.poolSize,"poolSize"),j(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),K(this.padding),this.inputSpec=[new re({ndim:4})]}computeOutputShape(t){t=Jt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2];return e=ur(e,this.poolSize[0],this.padding,this.strides[0]),n=ur(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n]:[t[0],e,n,t[3]]}call(t,e){return Object(a.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Zt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Oa extends ka{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"max")}}Oa.className="MaxPooling2D",a.serialization.registerClass(Oa);class Ia extends ka{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ga(t,e,n,r,a,"avg")}}Ia.className="AveragePooling2D",a.serialization.registerClass(Ia);class Sa extends ce{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new u("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(t.strides.length,"."));this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];j(this.poolSize,"poolSize"),j(this.strides,"strides"),this.padding=null==t.padding?"valid":t.padding,this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),K(this.padding),this.inputSpec=[new re({ndim:5})]}computeOutputShape(t){t=Jt(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],n="channelsFirst"===this.dataFormat?t[3]:t[2],r="channelsFirst"===this.dataFormat?t[4]:t[3];return e=ur(e,this.poolSize[0],this.padding,this.strides[0]),n=ur(n,this.poolSize[1],this.padding,this.strides[1]),r=ur(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,n,r]:[t[0],e,n,r,t[4]]}call(t,e){return Object(a.tidy)(()=>(this.invokeCallHook(t,e),this.poolingFunction(Zt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Na extends Sa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ya(t,e,n,r,a,"max")}}Na.className="MaxPooling3D",a.serialization.registerClass(Na);class Ta extends Sa{constructor(t){super(t)}poolingFunction(t,e,n,r,a){return q(a),K(r),ya(t,e,n,r,a,"avg")}}Ta.className="AveragePooling3D",a.serialization.registerClass(Ta);class ja extends ce{constructor(t){super(t),this.inputSpec=[new re({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new l}}class Ca extends ja{constructor(t){super(t||{})}call(t,e){return Object(a.tidy)(()=>{const e=Zt(t);return a.mean(e,1)})}}Ca.className="GlobalAveragePooling1D",a.serialization.registerClass(Ca);class Ea extends ja{constructor(t){super(t||{})}call(t,e){return Object(a.tidy)(()=>{const e=Zt(t);return a.max(e,1)})}}Ea.className="GlobalMaxPooling1D",a.serialization.registerClass(Ea);class Aa extends ce{constructor(t){super(t),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,q(this.dataFormat),this.inputSpec=[new re({ndim:4})]}computeOutputShape(t){return t=t,"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new l}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class _a extends Aa{call(t,e){return Object(a.tidy)(()=>{const e=Zt(t);return"channelsLast"===this.dataFormat?a.mean(e,[1,2]):a.mean(e,[2,3])})}}_a.className="GlobalAveragePooling2D",a.serialization.registerClass(_a);class Ra extends Aa{call(t,e){return Object(a.tidy)(()=>{const e=Zt(t);return"channelsLast"===this.dataFormat?a.max(e,[1,2]):a.max(e,[2,3])})}}Ra.className="GlobalMaxPooling2D",a.serialization.registerClass(Ra);class Da extends ce{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const r=ke(e.layer,n);delete e.layer;const a={layer:r};return Object.assign(a,e),new t(a)}}class Fa extends Da{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Jt(t)).length<3)throw new u("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(t)));this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Jt(t))[0]].concat(t.slice(2)),n=this.layer.computeOutputShape(e),r=t[1];return[n[0],r].concat(n.slice(1))}call(t,e){return Object(a.tidy)(()=>jr((t,n)=>[Zt(this.layer.call(t,e)),[]],t=Zt(t),[],!1,null,null,!1,!0)[1])}}Fa.className="TimeDistributed",a.serialization.registerClass(Fa);class Ma extends Da{constructor(t){super(t);const e=t.layer.getConfig(),n={};n.className=t.layer.getClassName(),n.config=e,this.forwardLayer=ke(n),e.goBackwards=!0!==e.goBackwards;const r={};var a;if(r.className=t.layer.getClassName(),r.config=e,this.backwardLayer=ke(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,a=this.mergeMode,N(G,"BidirectionalMergeMode",a),t.weights)throw new l("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,n=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,n)),this.backwardLayer.setWeights(t.slice(n))}computeOutputShape(t){let e,n,r,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),e=a[0]):e=a[0],e=e,"concat"===this.mergeMode?(e[e.length-1]*=2,n=[e]):n=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[e].concat(r).concat(r.slice()):m(n)}apply(t,e){let n=null==e?null:e.initialState,r=null==e?null:e.constants;null==e&&(e={});const a=Tr(t,n,r,this.numConstants);if(t=a.inputs,n=a.initialState,r=a.constants,Array.isArray(t)&&(n=t.slice(1),t=t[0]),(null==n||0===n.length)&&null==r)return super.apply(t,e);const o=[],s=[];if(null!=n){const t=n.length;if(t%2>0)throw new u("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=n,o.push(...n);const r=n.map(t=>new re({shape:t.shape}));this.forwardLayer.stateSpec=r.slice(0,t/2),this.backwardLayer.stateSpec=r.slice(t/2),s.push(...r)}if(null!=r)throw new l("Support for constants in Bidirectional layers is not implemented yet.");const i=o[0]instanceof ae;for(const c of o)if(c instanceof ae!==i)throw new u("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[t].concat(o),r=this.inputSpec.concat(s),a=this.inputSpec;this.inputSpec=r;const i=super.apply(n,e);return this.inputSpec=a,i}return super.apply(t,e)}call(t,e){return Object(a.tidy)(()=>{const n=e.initialState;let r,o,s,i;if(null==n)r=this.forwardLayer.call(t,e),o=this.backwardLayer.call(t,e);else{const a=n.slice(0,n.length/2),s=n.slice(n.length/2);r=this.forwardLayer.call(t,Object.assign(e,{initialState:a})),o=this.backwardLayer.call(t,Object.assign(e,{initialState:s}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=a.reverse(o,1)),"concat"===this.mergeMode?i=ht([r,o]):"sum"===this.mergeMode?i=a.add(r,o):"ave"===this.mergeMode?i=a.mul(.5,a.add(r,o)):"mul"===this.mergeMode?i=a.mul(r,o):null==this.mergeMode&&(i=[r,o]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){Q(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),Q(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let n;if(Array.isArray(e)&&(e=e[0]),n=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const t=this.forwardLayer.states.map(t=>null);return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const n=ke(e.layer);if(delete e.layer,null!=e.numConstants)throw new l("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=e;return r.layer=n,new t(r)}}Ma.className="Bidirectional",a.serialization.registerClass(Ma);var za=n(97),La=n(76),Pa=n(38),Ba=n(61);class Wa{constructor(){this.size=null}batch(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let r;return a.util.assert(t>0,()=>"batchSize needs to be positive, but it is\n      ".concat(t)),r=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),Va(async()=>(await n.iterator()).columnMajorBatch(t,e,Ua),r)}concatenate(t){const e=this;let n;return n=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,Va(async()=>(await e.iterator()).concatenate(await t.iterator()),n)}filter(t){const e=this;let n;return n=this.size===1/0?1/0:null,Va(async()=>(await e.iterator()).filter(e=>a.tidy(()=>t(e))),n)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return Va(async()=>(await e.iterator()).map(e=>a.tidy(()=>t(e))),this.size)}mapAsync(t){const e=this;return Va(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return Va(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let n;return n=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,Va(async()=>{const n=Object(Pa.e)(async()=>({value:await e.iterator(),done:!1}));return Object(Pa.d)(n.take(t))},n)}skip(t){const e=this;let n;return n=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,Va(async()=>(await e.iterator()).skip(t),n)}shuffle(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const r=this,o=La.alea(e||a.util.now().toString());return Va(async()=>{let e=o.int32();return n&&(e+=o.int32()),(await r.iterator()).shuffle(t,e.toString())},this.size)}take(t){const e=this;let n;return n=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,Va(async()=>(await e.iterator()).take(t),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Va(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Wa{constructor(){super(...arguments),this.size=e}async iterator(){return t()}}}function Ua(t){if(null===t)return null;const e=t[0];if(Object(Ba.a)(e)){return{value:function(t){if(0===t.length)throw new Error("Can't make a batch of zero elements.");return t[0]instanceof a.Tensor?a.stack(t):a.tensor(t)}(t),recurse:!1}}return{value:null,recurse:!0}}Wa.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");Pa.a;Pa.a;var Ga=n(230);Ga.a;function Ha(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&a.util.assert("complex64"!==t.dtype,()=>"".concat(e," does not support complex64 tensors in the CPU backend."))})}const qa=a.kernel_impls.whereImpl;class Ka extends a.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a.DataStorage(this,Object(a.engine)())}write(t,e,n){this.firstUse&&(this.firstUse=!1,Object(a.env)().get("IS_NODE")&&a.backend_util.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={};return this.data.set(r,{values:t,dtype:n,refCount:1}),r}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&a.util.isString(n[0])){const o=n.map(t=>a.util.encodeString(t));r=this.write(o,t,e)}else r=this.write(n,t,e);return{dataId:r,shape:t,dtype:e}}incRef(t){this.data.get(t).refCount++}decRef(t){if(this.data.has(t)){this.data.get(t).refCount--}}move(t,e,n,r){this.data.set(t,{values:e,dtype:r,refCount:1})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:n}=this.data.get(t);if("complex64"===e){const t=this.readSync(n.real.dataId),e=this.readSync(n.imag.dataId);return a.backend_util.mergeRealAndImagArrays(t,e)}return this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>a.util.decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.buffer)(t.shape,t.dtype,n)}makeOutput(t,e,n){const r=this.write(t,e,n);return Object(a.engine)().makeTensorFromDataId(r,e,n,this)}disposeData(t){if(this.data.has(t)){const{complexTensorInfos:e}=this.data.get(t);null!=e&&(this.disposeData(e.real.dataId),this.disposeData(e.imag.dataId)),this.data.delete(t)}}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.data.has(e)){const t=this.data.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}async time(t){const e=a.util.now();t();return{kernelMs:a.util.now()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Ha([t],"where");const e=this.readSync(t.dataId);return qa(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Xa(t,e,n){return r=>{let{inputs:o,attrs:s,backend:i}=r;const{x:c}=o;if(Ha(c,t),"string"===c.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(c.dataId).values,d=a.util.sizeFromShape(c.shape),h=n||c.dtype,p=a.util.getArrayFromDType(h,d);for(let t=0;t<d;++t)p[t]=e(l[t],s);return u.makeTensorInfo(c.shape,h,p)}}function Ya(t,e,n){return r=>{let{inputs:a,attrs:o,backend:s}=r;const{x:i}=a;if(Ha(i,t),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const c=s,u=c.data.get(i.dataId).values,l=n||i.dtype,d=e(u,l,o);return c.makeTensorInfo(i.shape,l,d)}}Object(a.registerBackend)("cpu",()=>new Ka,1);const Qa=Xa(a.Elu,t=>t>=0?t:Math.exp(t)-1),Za={kernelName:a.Elu,backendName:"cpu",kernelFunc:Qa};function Ja(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const $a={kernelName:a.Identity,backendName:"cpu",kernelFunc:Ja};function to(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{alpha:s}=r;Ha([o],"leakyRelu");const i=a.util.sizeFromShape(o.shape),c=n.data.get(o.dataId).values,u=a.util.getTypedArrayFromDType("float32",i);for(let a=0;a<c.length;a++)u[a]=c[a]<0?s*c[a]:c[a];return n.makeTensorInfo(o.shape,"float32",u)}const eo={kernelName:a.LeakyRelu,backendName:"cpu",kernelFunc:to};function no(t){return(e,n,r,o,s)=>{const i=a.backend_util.assertAndGetBroadcastShape(e,n),c=i.length,u=a.util.computeStrides(i),l=a.util.sizeFromShape(i),d=a.util.getTypedArrayFromDType(s,l),h=e.length,p=n.length,f=a.util.computeStrides(e),m=a.util.computeStrides(n),b=a.backend_util.getBroadcastDims(e,i),g=a.backend_util.getBroadcastDims(n,i);if(b.length+g.length===0)for(let a=0;a<d.length;++a)d[a]=t(r[a%r.length],o[a%o.length]);else for(let y=0;y<d.length;++y){const e=a.util.indexToLoc(y,c,u),n=e.slice(-h);b.forEach(t=>n[t]=0);const s=a.util.locToIndex(n,h,f),i=e.slice(-p);g.forEach(t=>i[t]=0);const l=a.util.locToIndex(i,p,m);d[y]=t(r[s],o[l])}return[d,i]}}const ro=no((t,e)=>t<0?e*t:t);function ao(t){const{inputs:e,backend:n}=t,{x:r,alpha:a}=e;Ha([r,a],"prelu");const o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,[i,c]=ro(r.shape,a.shape,o,s,r.dtype);return n.makeTensorInfo(c,r.dtype,i)}const oo={kernelName:a.Prelu,backendName:"cpu",kernelFunc:ao},so=Xa(a.Relu,t=>Math.max(0,t)),io={kernelName:a.Relu,backendName:"cpu",kernelFunc:so},co=Xa(a.Relu6,t=>Math.min(Math.max(0,t),6)),uo={kernelName:a.Relu6,backendName:"cpu",kernelFunc:co};function lo(t,e,n,r,a){if("linear"===n)return Ja({inputs:{x:e},backend:t});if("relu"===n)return so({inputs:{x:e},backend:t});if("elu"===n)return Qa({inputs:{x:e},backend:t});if("relu6"===n)return co({inputs:{x:e},backend:t});if("prelu"===n)return ao({inputs:{x:e,alpha:r},backend:t});if("leakyrelu"===n)return to({inputs:{x:e},backend:t,attrs:{alpha:a}});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function ho(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,o=n.data.get(r.dataId).values,s=n.data.get(a.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(a.shape,"float32",s)},i}const po={kernelName:a.Complex,backendName:"cpu",kernelFunc:ho};function fo(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return ho({inputs:{real:fo(t,e,"float32"),imag:fo(t,e,"float32")},backend:t})}const r=a.util.makeZerosTypedArray(a.util.sizeFromShape(e),n);return t.makeTensorInfo(e,n,r)}function mo(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}const bo={kernelName:a.Real,backendName:"cpu",kernelFunc:mo};function go(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{dtype:s}=r;if("complex64"===s){if("complex64"===o.dtype)return Ja({inputs:{x:o},backend:n});const t=fo(n,o.shape,o.dtype),e=go({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),r=ho({inputs:{real:e,imag:t},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),r}if("complex64"===o.dtype){const t=mo({inputs:{input:o},backend:n}),e=go({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!a.util.hasEncodingLoss(o.dtype,s)){const t=Ja({inputs:{x:o},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(o.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(o.shape,"int32",e)}if("bool"===s){const t=n.data.get(o.dataId).values,e=a.util.toTypedArray([0],o.dtype),[r,s]=no((t,e)=>t!==e?1:0)(o.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error("Error in Cast: failed to cast ".concat(o.dtype," to ").concat(s))}const yo={kernelName:a.Cast,backendName:"cpu",kernelFunc:go};function vo(t,e,n,r){return null==n?n=>{let{inputs:a,backend:o}=n;const{a:s,b:i}=a,c=o;Ha([s,i],t);const u=c.data.get(s.dataId).values,l=c.data.get(i.dataId).values,d=r||s.dtype,[h,p]=e(s.shape,i.shape,u,l,d);return c.makeTensorInfo(p,d,h)}:t=>{let{inputs:a,backend:o}=t;const{a:s,b:i}=a,c=o;if("complex64"===s.dtype||"complex64"===i.dtype){const t=go({inputs:{x:s},backend:c,attrs:{dtype:"complex64"}}),e=c.data.get(t.dataId),r=e.complexTensorInfos.real,a=e.complexTensorInfos.imag,o=c.data.get(r.dataId).values,u=c.data.get(a.dataId).values,l=go({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=c.data.get(h.dataId).values,m=c.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,o,u,f,m),v=c.makeTensorInfo(y,"float32",b),x=c.makeTensorInfo(y,"float32",g),w=ho({inputs:{real:v,imag:x},backend:c});return c.disposeIntermediateTensorInfo(t),c.disposeIntermediateTensorInfo(l),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(x),w}{const t=c.data.get(s.dataId).values,n=c.data.get(i.dataId).values,a=r||s.dtype,[o,u]=e(s.shape,i.shape,t,n,a);return c.makeTensorInfo(u,a,o)}}}function xo(t){return(e,n,r,o,s,i)=>{const c=a.backend_util.assertAndGetBroadcastShape(e,n),u=a.util.sizeFromShape(c),l=c.length,d=a.util.computeStrides(c),h=a.util.getTypedArrayFromDType("float32",u),p=a.util.getTypedArrayFromDType("float32",u),f=a.backend_util.getBroadcastDims(e,c),m=a.backend_util.getBroadcastDims(n,c),b=a.backend_util.mergeRealAndImagArrays(r,o),g=a.backend_util.mergeRealAndImagArrays(s,i),y=e.length,v=a.util.computeStrides(e),x=n.length,w=a.util.computeStrides(n);if(f.length+m.length===0)for(let a=0;a<h.length;a++){const e=a%b.length,n=a%g.length,r=t(b[2*e],b[2*e+1],g[2*n],g[2*n+1]);h[a]=r.real,p[a]=r.imag}else for(let k=0;k<h.length;k++){const e=a.util.indexToLoc(k,l,d),n=e.slice(-y);f.forEach(t=>n[t]=0);const r=a.util.locToIndex(n,y,v),o=e.slice(-x);m.forEach(t=>o[t]=0);const s=a.util.locToIndex(o,x,w),i=t(b[2*r],b[2*r+1],g[2*s],g[2*s+1]);h[k]=i.real,p[k]=i.imag}return[h,p,c]}}const wo=no((t,e)=>t+e),ko=xo((t,e,n,r)=>({real:t+n,imag:e+r})),Oo=vo(a.Add,wo,ko),Io={kernelName:a.Add,backendName:"cpu",kernelFunc:Oo};function So(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{shape:s}=r,i=a.util.sizeFromShape(o.shape),c=a.util.inferFromImplicitShape(s,i),u=a.util.sizeFromShape(c);a.util.assert(i===u,()=>"The new shape (".concat(c,") has ").concat(u," elements and the old ")+"shape (".concat(o.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."),n.incRef(o.dataId);const l=n.data.get(o.dataId);if(null!=l.complexTensorInfos){const t=l.complexTensorInfos.real,e=l.complexTensorInfos.imag;t.shape=c,e.shape=c}return{dataId:o.dataId,shape:c,dtype:o.dtype}}const No={kernelName:a.Reshape,backendName:"cpu",kernelFunc:So};function To(t){const{inputs:e,backend:n,attrs:r}=t,{a:o,b:s}=e,{transposeA:i,transposeB:c}=r;Ha([o,s],"matMul");const u=o.shape.length,l=s.shape.length,d=i?o.shape[u-2]:o.shape[u-1],h=c?s.shape[l-1]:s.shape[l-2],p=i?o.shape[u-1]:o.shape[u-2],f=c?s.shape[l-2]:s.shape[l-1],m=o.shape.slice(0,-2),b=s.shape.slice(0,-2),g=a.util.sizeFromShape(m),y=a.util.sizeFromShape(b),v=g===y||1===g||1===y;a.util.assert(u>=2&&l>=2&&v,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(m,") and (").concat(b,")."));const x=(g>y?o.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,f]);a.util.assert(d===h,()=>"Error in matMul: inner shapes (".concat(d,") and (")+"".concat(h,") of Tensors with shapes ").concat(o.shape," and ")+"".concat(s.shape," and transposeA=").concat(i)+" and transposeB=".concat(c," must match."));const w=c?[y,f,h]:[y,h,f],k=So({inputs:{x:o},backend:n,attrs:{shape:i?[g,d,p]:[g,p,d]}}),O=So({inputs:{x:s},backend:n,attrs:{shape:w}}),I=i?k.shape[1]:k.shape[2],S=i?k.shape[2]:k.shape[1],N=c?O.shape[1]:O.shape[2],T=Math.max(g,y),j=n.data.get(k.dataId).values,C=n.data.get(O.dataId).values,E=a.util.computeStrides(k.shape),A=a.util.computeStrides(O.shape),[_,R,D]=i?[E[0],1,E[1]]:[E[0],E[1],1],[F,M,z]=c?[1,A[1],A[0]]:[A[1],1,A[0]],L=S*N,P=Object(a.buffer)([T,S,N],k.dtype),B=P.values,W=n.blockSize;for(let a=0;a<T;a++)for(let t=0;t<S;t+=W)for(let e=0;e<N;e+=W)for(let n=0;n<I;n+=W){const r=Math.min(t+W,S),o=Math.min(e+W,N),s=Math.min(n+W,I);for(let i=t;i<r;i++)for(let t=e;t<o;t++){let e=0;for(let r=n;r<s;r++){const n=Math.min(a,g-1)*_,o=Math.min(a,y-1)*z;e+=j[n+i*R+r*D]*C[r*F+t*M+o]}B[a*L+(i*N+t)]+=e}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(O),n.makeTensorInfo(x,P.dtype,P.values)}const jo={kernelName:a.BatchMatMul,backendName:"cpu",kernelFunc:To};const Co={kernelName:a._FusedMatMul,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:o,bias:s,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=To({inputs:{a:a,b:o},attrs:{transposeA:c,transposeB:u},backend:n}),s&&(p=Oo({inputs:{a:h,b:s},backend:n}),m.push(h),h=p),l&&(f=lo(n,h,l,i,d),m.push(h),h=f);for(const b of m)n.disposeIntermediateTensorInfo(b);return h}};function Eo(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const Ao={kernelName:a.Abs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend;Ha(e,"abs");let r=new Float32Array(a.util.sizeFromShape(e.shape));return r=Eo(n.data.get(e.dataId).values),n.makeOutput(r,e.shape,"float32")}},_o=Xa(a.Acos,t=>Math.acos(t)),Ro={kernelName:a.Acos,backendName:"cpu",kernelFunc:_o},Do=Xa(a.Acosh,t=>Math.acosh(t)),Fo={kernelName:a.Acosh,backendName:"cpu",kernelFunc:Do};const Mo={kernelName:a.AddN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,r=e;Ha(e,"addN");const o=r.map(t=>n.data.get(t.dataId).values),s=Object(a.buffer)(r[0].shape,r[0].dtype),i=s.values;for(let a=0;a<r.length;a++){const t=o[a];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function zo(t,e,n,r,o){const s=e.length,i=a.util.sizeFromShape(e),c=a.util.computeStrides(e),u=a.util.computeStrides(o),l=a.util.getTypedArrayFromDType(n,a.util.sizeFromShape(o));for(let d=0;d<i;++d){const e=a.util.indexToLoc(d,s,c),n=new Array(e.length);for(let t=0;t<n.length;t++)n[t]=e[r[t]];l[a.util.locToIndex(n,s,u)]=t[d]}return l}function Lo(t){const{inputs:e,attrs:n,backend:r}=t,{x:a}=e,{perm:o}=n;Ha(a,"transpose");const s=a.shape.length,i=new Array(s);for(let u=0;u<i.length;u++)i[u]=a.shape[o[u]];const c=zo(r.data.get(a.dataId).values,a.shape,a.dtype,o,i);return{dataId:r.write(c,i,a.dtype),shape:i,dtype:a.dtype}}const Po={kernelName:a.Transpose,backendName:"cpu",kernelFunc:Lo};const Bo={kernelName:a.All,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ha(o,"all");const c=a.util.parseAxisParam(s,o.shape);let u=c;const l=a.backend_util.getAxesPermutation(u,o.shape.length);let d=o;null!=l&&(d=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),u=a.backend_util.getInnerMostAxes(u.length,o.shape.length)),a.backend_util.assertAxesAreInnerMostDims("all",u,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const t=a*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];e=e&&r}m[a]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(i){const t=So({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Wo={kernelName:a.Any,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ha(o,"any");const c=a.util.parseAxisParam(s,o.shape);let u=c;const l=a.backend_util.getAxesPermutation(u,o.shape.length);let d=o;null!=l&&(d=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),u=a.backend_util.getInnerMostAxes(u.length,o.shape.length)),a.backend_util.assertAxesAreInnerMostDims("any",u,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const t=a*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];e=e||r}m[a]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(i){const t=So({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}};const Vo={kernelName:a.ArgMax,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;Ha(o,"argMax");let i=a.util.parseAxisParam(s,o.shape);const c=a.backend_util.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=Lo({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],a.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[d,h]=a.backend_util.computeOutAndReduceShapes(u.shape,i),p=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(p,"int32"),m=a.util.sizeFromShape(h),b=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const t=a*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a>e&&(e=a,n=r)}f[a]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}};const Uo={kernelName:a.ArgMin,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;Ha(o,"argMin");let i=a.util.parseAxisParam(s,o.shape);const c=a.backend_util.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=Lo({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],a.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[d,h]=a.backend_util.computeOutAndReduceShapes(u.shape,i),p=a.util.sizeFromShape(d),f=a.util.makeZerosTypedArray(p,"int32"),m=a.util.sizeFromShape(h),b=n.data.get(u.dataId).values;for(let a=0;a<f.length;++a){const t=a*m;let e=b[t],n=0;for(let r=0;r<m;++r){const a=b[t+r];a<e&&(e=a,n=r)}f[a]=n}return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(d,"int32",f)}},Go=Xa(a.Asin,t=>Math.asin(t)),Ho={kernelName:a.Asin,backendName:"cpu",kernelFunc:Go},qo=Xa(a.Asinh,t=>Math.asinh(t)),Ko={kernelName:a.Asinh,backendName:"cpu",kernelFunc:qo},Xo=Xa(a.Atan,t=>Math.atan(t)),Yo={kernelName:a.Atan,backendName:"cpu",kernelFunc:Xo},Qo=no((t,e)=>Math.atan2(t,e)),Zo=vo(a.Atan2,Qo),Jo={kernelName:a.Atan2,backendName:"cpu",kernelFunc:Zo},$o=Xa(a.Atanh,t=>Math.atanh(t)),ts={kernelName:a.Atanh,backendName:"cpu",kernelFunc:$o};function es(t,e,n,r,o,s){const i=o.strideHeight,c=o.strideWidth,u=o.dilationHeight,l=o.dilationWidth,d=o.effectiveFilterHeight,h=o.effectiveFilterWidth,p=o.padInfo.top,f=o.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Object(a.buffer)(o.outShape,n),g=b.values,y=o.outShape[1]*o.outShape[2]*o.outShape[3],v=o.outShape[2]*o.outShape[3],x=o.outShape[3];for(let a=0;a<o.batchSize;++a){const e=a*y,n=a*r[0];for(let a=0;a<o.inChannels;++a)for(let b=0;b<o.outHeight;++b){const y=b*i-p,w=Math.max(0,y),k=Math.min(o.inHeight,d+y),O=e+b*v;for(let e=0;e<o.outWidth;++e){const i=e*c-f,d=Math.max(0,i),p=Math.min(o.inWidth,h+i);let b=m,y=0,v=0;for(let e=w;e<k;e+=u){const o=n+e*r[1];for(let e=d;e<p;e+=l){const n=t[o+e*r[2]+a];"max"===s&&n>b?b=n:"avg"===s&&(y+=n,v++)}if(isNaN(b))break}g[O+e*x+a]="avg"===s?y/v:b}}}return b}function ns(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const i=Object(a.buffer)(r.outShape,"int32"),c=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,b=Object(a.buffer)(e,n,t);for(let a=0;a<r.batchSize;++a)for(let t=0;t<r.inChannels;++t)for(let e=0;e<r.outHeight;++e){const n=e*c-f;let g=n;for(;g<0;)g+=l;const y=Math.min(r.inHeight,h+n);for(let c=0;c<r.outWidth;++c){const h=c*u-m;let f=h;for(;f<0;)f+=d;const v=Math.min(r.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let e=g;e<y;e+=l){const i=e-n;for(let n=f;n<v;n+=d){const c=n-h,u=b.get(a,e,n,t);u>x&&(x=u,w=o?s?((a*r.inHeight+e)*r.inWidth+n)*r.inChannels+t:(e*r.inWidth+n)*r.inChannels+t:i*p+c)}}i.set(w,a,e,c,t)}}return i}function rs(t,e,n,r,o,s){const i=o.strideDepth,c=o.strideHeight,u=o.strideWidth,l=o.dilationDepth,d=o.dilationHeight,h=o.dilationWidth,p=o.effectiveFilterDepth,f=o.effectiveFilterHeight,m=o.effectiveFilterWidth,b=o.padInfo.front,g=o.padInfo.top,y=o.padInfo.left,v="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Object(a.buffer)(o.outShape,n),w=x.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],O=o.outShape[2]*o.outShape[3]*o.outShape[4],I=o.outShape[3]*o.outShape[4],S=o.outShape[4];for(let a=0;a<o.batchSize;++a){const e=a*k,n=a*r[0];for(let a=0;a<o.inChannels;++a)for(let x=0;x<o.outDepth;++x){const k=x*i-b;let N=k;for(;N<0;)N+=l;const T=Math.min(o.inDepth,p+k),j=e+x*O;for(let e=0;e<o.outHeight;++e){const i=e*c-g;let p=i;for(;p<0;)p+=d;const b=Math.min(o.inHeight,f+i),x=j+e*I;for(let e=0;e<o.outWidth;++e){const i=e*u-y;let c=i;for(;c<0;)c+=h;const f=Math.min(o.inWidth,m+i),g=x+e*S;let k=v,O=0,I=0;for(let e=N;e<T;e+=l){const o=n+e*r[1];for(let e=p;e<b;e+=d){const n=o+e*r[2];for(let e=c;e<f;e+=h){const o=t[n+e*r[3]+a];if("max"===s&&o>k?k=o:"avg"===s&&(O+=o,I++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+a]="avg"===s?O/I:k}}}}return x}const as={kernelName:a.AvgPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;Ha(o,"avgPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.backend_util.computePool2DInfo(o.shape,s,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))d=Ja({inputs:{x:o},backend:n});else{const t=n.data.get(o.dataId).values,e=a.util.computeStrides(o.shape),r=es(t,o.shape,o.dtype,e,l,"avg");d=n.makeTensorInfo(l.outShape,o.dtype,r.values)}return d}};const os={kernelName:a.AvgPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dimRoundingMode:u,dataFormat:l,dilations:d}=r;Ha(o,"avgPool3d");let h=d;null==h&&(h=[1,1,1]);const p=a.backend_util.computePool3DInfo(o.shape,s,i,h,c,u,l),f=rs(n.data.get(o.dataId).values,o.shape,o.dtype,a.util.computeStrides(o.shape),p,"avg");return n.makeTensorInfo(f.shape,"float32",f.values)}};const ss={kernelName:a.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,{filterSize:i,strides:c,pad:u,dilations:l,dimRoundingMode:d}=r;Ha([o,s],"avgPool3DGrad");const h=a.backend_util.computePool3DInfo(s.shape,i,c,l,u,d),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,v=h.dilationDepth,x=h.dilationHeight,w=h.dilationWidth,k=h.effectiveFilterDepth,O=h.effectiveFilterHeight,I=h.effectiveFilterWidth,S=k-1-h.padInfo.front,N=I-1-h.padInfo.left,T=O-1-h.padInfo.top,j=Object(a.buffer)(s.shape,"float32"),C=1/(b*g*y),E=n.bufferSync(o);for(let a=0;a<h.batchSize;++a)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const o=e-S,s=n-T,i=r-N;let c=0;for(let e=0;e<k;e+=v){const n=(o+e)/p;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let e=0;e<O;e+=x){const r=(s+e)/f;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let e=0;e<I;e+=w){const o=(i+e)/m;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;c+=E.get(a,n,r,o,t)}}}j.set(c*C,a,e,n,r,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const is={kernelName:a.AvgPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s;Ha([o,s],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=r,d=a.backend_util.computePool2DInfo(i.shape,c,u,1,l),h=d.strideHeight,p=d.strideWidth,f=d.filterHeight,m=d.filterWidth,b=d.dilationHeight,g=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,x=v-1-d.padInfo.left,w=y-1-d.padInfo.top,k=Object(a.buffer)(i.shape,"float32"),O=1/(f*m),I=n.data.get(o.dataId).values,S=Object(a.buffer)(o.shape,"float32",I);for(let a=0;a<d.batchSize;++a)for(let t=0;t<d.inChannels;++t)for(let e=0;e<d.inHeight;++e)for(let n=0;n<d.inWidth;++n){const r=e-w,o=n-x;let s=0;for(let e=0;e<y;e+=b){const n=(r+e)/h;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let e=0;e<v;e+=g){const r=(o+e)/p;if(r<0||r>=d.outWidth||Math.floor(r)!==r)continue;s+=S.get(a,n,r,t)}}k.set(s*O,a,e,n,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const cs={kernelName:a.FusedBatchNorm,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,scale:s,offset:i,mean:c,variance:u}=e;a.util.assert(c.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.util.assert(null==i||c.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.util.assert(null==s||c.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Ha([o,c,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=n.data.get(o.dataId).values,h=n.data.get(c.dataId).values,p=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),b=new Float32Array(d.length),g=m.length,y=f.length,v=p.length,x=h.length;let w=0,k=0,O=0,I=0;for(let a=0;a<d.length;++a)b[a]=m[w++]+(d[a]-h[k++])*f[O++]/Math.sqrt(p[I++]+l),w>=g&&(w=0),k>=x&&(k=0),O>=y&&(O=0),I>=v&&(I=0);return n.makeTensorInfo(o.shape,o.dtype,b)}};function us(t,e,n,r,o){const s=a.slice_util.isSliceContinous(r,e,n),i=a.util.sizeFromShape(n),c=a.util.computeStrides(r);if(s){const n=a.slice_util.computeFlatOffset(e,c);return"string"===o?t.slice(n,n+i):t.subarray(n,n+i)}const u="string"===o?a.backend_util.fromUint8ToStringArray(t):t,l=Object(a.buffer)(r,o,u),d=Object(a.buffer)(n,o);for(let a=0;a<d.size;++a){const t=d.indexToLoc(a),n=t.map((t,n)=>t+e[n]);d.set(l.get(...n),...t)}return"string"===o?a.backend_util.fromStringArrayToUint8(d.values):d.values}function ls(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,size:i}=r;Ha(o,"slice");const[c,u]=a.slice_util.parseSliceParams(o,s,i);a.slice_util.assertParamsValid(o,c,u);const l=us(n.data.get(o.dataId).values,c,u,o.shape,o.dtype);return n.makeTensorInfo(u,o.dtype,l)}const ds={kernelName:a.Slice,backendName:"cpu",kernelFunc:ls};const hs={kernelName:a.BatchToSpaceND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,crops:i}=r;Ha([o],"batchToSpaceND");const c=s.reduce((t,e)=>t*e),u=a.backend_util.getReshaped(o.shape,s,c),l=a.backend_util.getPermuted(u.length,s.length),d=a.backend_util.getReshapedPermuted(o.shape,s,c),h=a.backend_util.getSliceBeginCoords(i,s.length),p=a.backend_util.getSliceSize(d,i,s.length),f=So({inputs:{x:o},backend:n,attrs:{shape:u}}),m=Lo({inputs:{x:f},backend:n,attrs:{perm:l}}),b=So({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ls({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}};function ps(t,e,n,r,o){const s=a.util.sizeFromShape(r),i=a.util.makeZerosTypedArray(o,n);for(let a=0;a<t.length;a++){const n=t[a];if(n<0)throw new Error("Input x must be non-negative!");n>=o||(i[n]+=s>0?e[a]:1)}return i}function fs(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const o=t.shape[0],s=t.shape[1],i=Object(a.buffer)([o,n],e.dtype);for(let a=0;a<o;a++)for(let o=0;o<s;o++){const s=t.get(a,o);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,a,s):e.size>0?i.set(i.get(a,s)+e.get(a,o),a,s):i.set(i.get(a,s)+1,a,s))}return i}const ms={kernelName:a.Bincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s}=r,i=ps(n.data.get(a.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,i)}};function bs(t){return(e,n,r)=>{const o=a.util.getTypedArrayFromDType(n,e.length);for(let a=0;a<e.length;++a)o[a]=t(e[a],r);return o}}const gs=bs(t=>Math.ceil(t)),ys=Ya(a.Ceil,gs),vs={kernelName:a.Ceil,backendName:"cpu",kernelFunc:ys},xs=Xa(a.ClipByValue,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),ws={kernelName:a.ClipByValue,backendName:"cpu",kernelFunc:xs},ks={kernelName:a.ComplexAbs,backendName:"cpu",kernelFunc:t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(a.util.sizeFromShape(e.shape)),o=n.data.get(e.dataId),s=o.complexTensorInfos.real,i=o.complexTensorInfos.imag,c=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let a=0;a<c.length;a++){const t=c[a],e=u[a];r[a]=Math.hypot(t,e)}return n.makeOutput(r,e.shape,"float32")}};function Os(t,e,n,r){const o=a.util.getArrayFromDType(n,a.util.sizeFromShape(e));if(r&&"string"!==n){let e=0;t.forEach(t=>{const n=a.util.sizeFromShape(t.shape);o.set(t.vals,e),e+=n})}else{let r=0;t.forEach(t=>{const s="string"===n?a.backend_util.fromUint8ToStringArray(t.vals):t.vals;let i=0;for(let n=0;n<t.shape[0];++n){const a=n*e[1]+r;for(let e=0;e<t.shape[1];++e)o[a+e]=s[i++]}r+=t.shape[1]})}return o}function Is(t){const{inputs:e,backend:n}=t,{input:r}=e,a=n.data.get(r.dataId).complexTensorInfos.imag,o=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,o)}const Ss={kernelName:a.Imag,backendName:"cpu",kernelFunc:Is};function Ns(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r,s=a.util.parseAxisParam(o,e[0].shape)[0];let i=a.backend_util.computeOutShape(e.map(t=>t.shape),s);if(0===a.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(t=>a.util.sizeFromShape(t.shape)>0);if(1===c.length)return Ja({inputs:{x:c[0]},backend:n});const u=c.map(t=>t.shape);if(a.backend_util.assertParamsConsistent(u,s),"complex64"===c[0].dtype){const t=c.map(t=>mo({inputs:{input:t},backend:n})),e=c.map(t=>Is({inputs:{input:t},backend:n})),r=Ns({inputs:t,backend:n,attrs:{axis:s}}),a=Ns({inputs:e,backend:n,attrs:{axis:s}}),o=ho({inputs:{real:r,imag:a},backend:n});return t.forEach(t=>n.disposeIntermediateTensorInfo(t)),e.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),o}const l=c.map(t=>{const e=a.util.sizeFromShape(t.shape.slice(s));return So({inputs:{x:t},backend:n,attrs:{shape:[-1,e]}})}),d=l.map(t=>({vals:n.data.get(t.dataId).values,shape:t.shape}));i=a.backend_util.computeOutShape(l.map(t=>t.shape),1);const h=1===l[0].shape[0],p=Os(d,i,e[0].dtype,h),f=a.backend_util.computeOutShape(c.map(t=>t.shape),s),m=n.makeTensorInfo(f,e[0].dtype,p);return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}const Ts={kernelName:a.Concat,backendName:"cpu",kernelFunc:Ns};function js(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=r;Ha([o,s],"conv2d");const h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(o.shape,s.shape,i,l,c,d,!1,h),f=p.filterHeight,m=p.filterWidth,b=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,v=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new a.TensorBuffer(p.outShape,o.dtype),k=a.util.computeStrides(o.shape),O=a.util.computeStrides(s.shape),I=k[0],S=x?k[1]:k[2],N=x?k[2]:1,T=x?1:k[1],j=w.strides[0],C=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],_=n.data.get(o.dataId).values,R=n.data.get(s.dataId).values,D=w.values;for(let a=0;a<p.batchSize;++a){const t=a*I,e=a*j;for(let n=0;n<p.outHeight;++n){const r=e+n*C,a=n*p.strideHeight-v;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=p.inHeight)continue;const o=e*O[0],s=t+n*S;for(let t=0;t<p.outWidth;++t){const e=r+t*E,n=t*p.strideWidth-y;for(let t=0;t<m;++t){const r=n+t*g;if(r<0||r>=p.inWidth)continue;const a=s+r*N;let i=o+t*O[1];for(let t=0;t<p.inChannels;++t){const n=_[a+t*T];for(let t=0;t<p.outChannels;++t)D[e+t*A]+=n*R[i+t];i+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const Cs={kernelName:a.Conv2D,backendName:"cpu",kernelFunc:js};const Es={kernelName:a.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=r;Ha([o,s],"conv2dBackpropFilter");const h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(o.shape,d,i,1,c,l,!1,h),{strideHeight:f,strideWidth:m,filterHeight:b,filterWidth:g}=p,y="channelsLast"===p.dataFormat,v=new a.TensorBuffer(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=n.data.get(o.dataId).values,O=n.data.get(s.dataId).values,I=new a.TensorBuffer(o.shape,o.dtype,k),S=new a.TensorBuffer(s.shape,s.dtype,O);for(let a=0;a<b;++a){const t=Math.max(0,Math.ceil((w-a)/f)),e=Math.min(p.outHeight,(p.inHeight+w-a)/f);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/m)),o=Math.min(p.outWidth,(p.inWidth+x-n)/m);for(let s=0;s<p.inChannels;++s)for(let i=0;i<p.outChannels;++i){let c=0;for(let u=0;u<p.batchSize;++u)for(let l=t;l<e;++l){const t=a+l*f-w;for(let e=r;e<o;++e){const r=n+e*m-x;c+=y?I.get(u,t,r,s)*S.get(u,l,e,i):I.get(u,s,t,r)*S.get(u,i,l,e)}}v.set(c,a,n,s,i)}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const As={kernelName:a.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=r;Ha([o,s],"conv2dBackpropInput");const h=a.util.computeStrides(s.shape),p=a.util.computeStrides(o.shape);let f=a.backend_util.convertConv2DDataFormat(l);const m=a.backend_util.computeConv2DInfo(i,s.shape,c,1,u,d,!1,f),b=new a.TensorBuffer(m.inShape,"float32"),g=b.values,y=n.data.get(o.dataId).values,v=n.data.get(s.dataId).values,[x,w,k]=h,{batchSize:O,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:j,outChannels:C,outHeight:E,outWidth:A,strideHeight:_,strideWidth:R}=m;f=m.dataFormat;const D=I-1-m.padInfo.top,F=S-1-m.padInfo.left,M="channelsLast"===f,z=b.strides[0],L=M?b.strides[1]:b.strides[2],P=M?b.strides[2]:1,B=M?1:b.strides[1],W=p[0],V=M?p[1]:p[2],U=M?p[2]:1,G=M?1:p[1];for(let a=0;a<O;++a)for(let t=0;t<N;++t)for(let e=0;e<T;++e){const n=e-D,r=Math.max(0,Math.ceil(n/_)),o=Math.min(E,(I+n)/_);for(let s=0;s<j;++s){const i=s-F,c=Math.max(0,Math.ceil(i/R)),u=Math.min(A,(S+i)/R);let l=0;for(let e=r;e<o;++e){const r=e*_-n;for(let n=c;n<u;++n){const o=W*a+V*e+U*n,s=x*(I-1-r)+w*(S-1-(n*R-i))+k*t;for(let t=0;t<C;++t){l+=y[o+G*t]*v[s+t]}}}g[z*a+L*e+P*s+B*t]=l}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const _s={kernelName:a.Conv3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r;Ha([o,s],"conv3d");const l=a.backend_util.computeConv3DInfo(o.shape,s.shape,i,u,c),{filterDepth:d,filterHeight:h,filterWidth:p,dilationDepth:f,dilationHeight:m,dilationWidth:b,padInfo:g}=l,y=g.front,v=g.left,x=g.top,w=new a.TensorBuffer(l.outShape,o.dtype),k=n.data.get(o.dataId).values,O=n.data.get(s.dataId).values,I=w.values,S=a.util.computeStrides(o.shape),N=a.util.computeStrides(s.shape);for(let a=0;a<l.batchSize;++a){const t=a*S[0],e=a*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=e+n*w.strides[1],a=n*l.strideDepth-y;for(let e=0;e<d;++e){const n=a+e*f;if(n<0||n>=l.inDepth)continue;const o=e*N[0],s=t+n*S[1];for(let t=0;t<l.outHeight;++t){const e=r+t*w.strides[2],n=t*l.strideHeight-x;for(let t=0;t<h;++t){const r=n+t*m;if(r<0||r>=l.inHeight)continue;const a=o+t*N[1],i=s+r*S[2];for(let t=0;t<l.outWidth;++t){const n=e+t*l.outChannels,r=t*l.strideWidth-v;for(let t=0;t<p;++t){const e=r+t*b;if(e<0||e>=l.inWidth)continue;const o=a+t*N[2],s=i+e*l.inChannels;let c=o;for(let t=0;t<l.inChannels;++t){const e=k[s+t];for(let t=0;t<l.outChannels;++t)I[n+t]+=e*O[c+t];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Rs={kernelName:a.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,filterShape:u}=r;Ha([o,s],"conv3dBackpropFilterV2");const l=a.util.computeStrides(o.shape),d=a.util.computeStrides(s.shape),h=a.backend_util.computeConv3DInfo(o.shape,u,i,1,c),p=h.strideDepth,f=h.strideHeight,m=h.strideWidth,b=h.filterDepth,g=h.filterHeight,y=h.filterWidth,v=new a.TensorBuffer(h.filterShape,"float32"),x=v.values,[w,k,O,I]=v.strides,S=n.data.get(s.dataId).values,[N,T,j,C]=d,E=n.data.get(o.dataId).values,[A,_,R,D]=l,F=h.padInfo.front,M=h.padInfo.left,z=h.padInfo.top;for(let a=0;a<b;++a){const t=Math.max(0,Math.ceil((F-a)/p)),e=Math.min(h.outDepth,(h.inDepth+F-a)/p),n=a*w;for(let r=0;r<g;++r){const o=Math.max(0,Math.ceil((z-r)/f)),s=Math.min(h.outHeight,(h.inHeight+z-r)/f),i=r*k+n;for(let n=0;n<y;++n){const c=Math.max(0,Math.ceil((M-n)/m)),u=Math.min(h.outWidth,(h.inWidth+M-n)/m),l=n*O+i;for(let i=0;i<h.inChannels;++i){const d=i*I+l;for(let l=0;l<h.outChannels;++l){let b=0;for(let d=0;d<h.batchSize;++d){const h=d*A,g=d*N;for(let d=t;d<e;++d){const t=(a+d*p-F)*_+h,e=d*T+g;for(let a=o;a<s;++a){const o=(r+a*f-z)*R+t,s=a*j+e;for(let t=c;t<u;++t){const e=t*C+s;b+=E[(n+t*m-M)*D+o+i]*S[e+l]}}}}x[d+l]=b}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Ds={kernelName:a.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{pad:i,strides:c,inputShape:u}=r;Ha([o],"conv3dBackpropInputV2");const l=a.util.computeStrides(o.shape),d=a.util.computeStrides(s.shape),h=a.backend_util.computeConv3DInfo(u,s.shape,c,1,i),p=new a.TensorBuffer(h.inShape,"float32"),f=p.values,[m,b,g,y]=p.strides,v=n.data.get(o.dataId).values,[x,w,k,O]=l,I=n.data.get(s.dataId).values,[S,N,T,j]=d,{batchSize:C,filterDepth:E,filterHeight:A,filterWidth:_,inChannels:R,inDepth:D,inHeight:F,inWidth:M,outChannels:z,outDepth:L,outHeight:P,outWidth:B,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=E-1-h.padInfo.front,H=A-1-h.padInfo.top,q=_-1-h.padInfo.left;for(let a=0;a<C;++a)for(let t=0;t<R;++t)for(let e=0;e<D;++e){const n=e-G,r=Math.max(0,Math.ceil(n/W)),o=Math.min(L,(E+n)/W);for(let s=0;s<F;++s){const i=s-H,c=Math.max(0,Math.ceil(i/V)),u=Math.min(P,(A+i)/V);for(let l=0;l<M;++l){const d=l-q,h=Math.max(0,Math.ceil(d/U)),p=Math.min(B,(_+d)/U);let C=0;for(let e=r;e<o;++e){const r=e*W-n;for(let n=c;n<u;++n){const o=n*V-i;for(let s=h;s<p;++s){const i=x*a+w*e+k*n+O*s,c=S*(E-1-r)+N*(A-1-o)+T*(_-1-(s*U-d))+j*t;for(let t=0;t<z;++t){C+=v[i+t]*I[c+t]}}}}f[m*a+b*e+g*s+y*l+t]=C}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Fs=Xa(a.Cos,t=>Math.cos(t)),Ms={kernelName:a.Cos,backendName:"cpu",kernelFunc:Fs},zs=Xa(a.Cosh,t=>Math.cosh(t)),Ls={kernelName:a.Cosh,backendName:"cpu",kernelFunc:zs};const Ps={kernelName:a.CropAndResize,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{image:o,boxes:s,boxInd:i}=e,{cropSize:c,method:u,extrapolationValue:l}=r,[d,h,p,f]=o.shape,m=s.shape[0],[b,g]=c,y=Object(a.buffer)([m,b,g,f],"float32"),v=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(o.dataId).values,k=a.util.computeStrides(o.shape),O=a.util.computeStrides(y.shape);for(let a=0;a<m;a++){const t=4*a,e=v[t],n=v[t+1],r=v[t+2],o=v[t+3],s=x[a];if(s>=d)continue;const i=b>1?(r-e)*(h-1)/(b-1):0,c=g>1?(o-n)*(p-1)/(g-1):0;for(let d=0;d<b;d++){const t=b>1?e*(h-1)+d*i:.5*(e+r)*(h-1);if(t<0||t>h-1)for(let e=0;e<g;e++)for(let t=0;t<f;t++){const n=t+e*O[2]+d*O[1]+a*O[0];y.values[n]=l}else if("bilinear"===u){const e=Math.floor(t),r=Math.ceil(t),i=t-e;for(let t=0;t<g;t++){const u=g>1?n*(p-1)+t*c:.5*(n+o)*(p-1);if(u<0||u>p-1){for(let e=0;e<f;e++){const n=e+t*O[2]+d*O[1]+a*O[0];y.values[n]=l}continue}const h=Math.floor(u),m=Math.ceil(u),b=u-h;for(let n=0;n<f;n++){let o=n+h*k[2]+e*k[1]+s*k[0];const c=w[o];o=n+m*k[2]+e*k[1]+s*k[0];const u=w[o];o=n+h*k[2]+r*k[1]+s*k[0];const l=w[o];o=n+m*k[2]+r*k[1]+s*k[0];const p=c+(u-c)*b,f=l+(w[o]-l)*b;o=n+t*O[2]+d*O[1]+a*O[0],y.values[o]=p+(f-p)*i}}}else for(let e=0;e<g;++e){const r=g>1?n*(p-1)+e*c:.5*(n+o)*(p-1);if(r<0||r>p-1){for(let t=0;t<f;t++){const n=t+e*O[2]+d*O[1]+a*O[0];y.values[n]=l}continue}const i=Math.round(r),u=Math.round(t);for(let t=0;t<f;t++){const n=t+i*k[2]+u*k[1]+s*k[0],r=t+e*O[2]+d*O[1]+a*O[0];y.values[r]=w[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Bs={kernelName:a.Cumsum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,exclusive:i,reverse:c}=r;Ha(o,"cumsum");const u=a.backend_util.getAxesPermutation([s],o.shape.length);let l=o;null!=u&&(l=Lo({inputs:{x:o},backend:n,attrs:{perm:u}}));const d=a.backend_util.getInnerMostAxes(1,o.shape.length)[0];if(d!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(d));const h=Object(a.upcastType)(l.dtype,"int32"),p=a.util.makeZerosTypedArray(a.util.sizeFromShape(l.shape),h),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],b=c?(t,e)=>t+m-e-1:(t,e)=>t+e;for(let a=0;a<f.length;a+=m)for(let t=0;t<m;t++){const e=b(a,t);if(0===t)p[e]=i?0:f[e];else{const n=b(a,t-1);p[e]=i?f[n]+p[n]:f[e]+p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const t=Lo({inputs:{x:g},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const Ws={kernelName:a.DenseBincount,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const t=ps(n.data.get(a.dataId).values,n.data.get(o.dataId).values,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,t)}if(2===a.shape.length){const t=fs(n.bufferSync(a),n.bufferSync(o),s,i);return n.makeTensorInfo(t.shape,o.dtype,t.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};const Vs={kernelName:a.DepthToSpace,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockSize:s,dataFormat:i}=r;a.util.assert("NHWC"===i,()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(i)),a.util.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(s));const c=o.shape[0],u=o.shape[1],l=o.shape[2],d=o.shape[3],h=u*s,p=l*s,f=d/(s*s),m=n.data.get(o.dataId).values,b=new Float32Array(c*h*p*f);let g=0;for(let a=0;a<c;++a)for(let t=0;t<h;++t){const e=Math.floor(t/s),n=t%s;for(let t=0;t<p;++t){const r=Math.floor(t/s),o=(n*s+t%s)*f;for(let t=0;t<f;++t){const n=t+o+d*(r+l*(e+u*a));b[g++]=m[n]}}}return n.makeTensorInfo([c,h,p,f],o.dtype,b)}};function Us(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=r;Ha([o,s],"depthwiseConv2DNative");const d=a.util.computeStrides(o.shape),h=a.util.computeStrides(s.shape);let p=u;null==p&&(p=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,p),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(p,"'"));const f=a.backend_util.computeConv2DInfo(o.shape,s.shape,i,p,c,l,!0),{filterHeight:m,filterWidth:b,dilationHeight:g,dilationWidth:y,padInfo:v}=f,x=v.left,w=v.top,k=f.outChannels/f.inChannels,O=new a.TensorBuffer(f.outShape,o.dtype),I=n.data.get(o.dataId).values,S=n.data.get(s.dataId).values,N=O.values;for(let a=0;a<f.batchSize;++a){const t=a*d[0],e=a*O.strides[0];for(let n=0;n<f.outHeight;++n){const r=e+n*O.strides[1],a=n*f.strideHeight-x;for(let e=0;e<m;++e){const n=a+e*g;if(n<0||n>=f.inHeight)continue;const o=e*h[0],s=t+n*d[1];for(let t=0;t<f.outWidth;++t){const e=r+t*O.strides[2],n=t*f.strideWidth-w;for(let t=0;t<b;++t){const r=n+t*y;if(r<0||r>=f.inWidth)continue;const a=o+t*h[1],i=s+r*f.inChannels;let c=e,u=a;for(let t=0;t<f.inChannels;++t){const e=I[i+t];for(let t=0;t<k;++t)N[c+t]+=e*S[u+t];c+=k,u+=k}}}}}}return n.makeTensorInfo(O.shape,O.dtype,O.values)}const Gs={kernelName:a.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Us};const Hs={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=r;Ha([o,s],"depthwiseConv2dNativeBackpropFilter");const h=a.backend_util.computeConv2DInfo(o.shape,d,i,c,u,l,!0),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g=new a.TensorBuffer(h.filterShape,"float32"),y=h.padInfo.left,v=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(o.dataId).values,k=new a.TensorBuffer(o.shape,o.dtype,w),O=n.data.get(s.dataId).values,I=new a.TensorBuffer(s.shape,s.dtype,O);for(let a=0;a<m;++a){const t=Math.max(0,Math.ceil((v-a)/p)),e=Math.min(h.outHeight,(h.inHeight+v-a)/p);for(let n=0;n<b;++n){const r=Math.max(0,Math.ceil((y-n)/f)),o=Math.min(h.outWidth,(h.inWidth+y-n)/f);for(let s=0;s<h.outChannels;++s){const i=Math.trunc(s/x),c=s%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<e;++c){const t=a+c*p-v;for(let e=r;e<o;++e){const r=n+e*f-y;u+=k.get(l,t,r,i)*I.get(l,c,e,s)}}g.set(u,a,n,i,c)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const qs={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=r;Ha([o,s],"depthwiseConv2DNativeBackpropInput");const h=a.util.computeStrides(o.shape),p=a.util.computeStrides(s.shape),f=a.backend_util.computeConv2DInfo(d,s.shape,i,c,u,l,!0),m=new a.TensorBuffer(f.inShape,"float32"),b=m.values,[g,y,v]=m.strides,x=n.data.get(o.dataId).values,[w,k,O]=h,I=n.data.get(s.dataId).values,[S,N,T]=p,{batchSize:j,filterHeight:C,filterWidth:E,inChannels:A,inHeight:_,inWidth:R,outChannels:D,outHeight:F,outWidth:M,strideHeight:z,strideWidth:L}=f,P=C-1-f.padInfo.top,B=E-1-f.padInfo.left,W=D/A;for(let a=0;a<j;++a)for(let t=0;t<A;++t)for(let e=0;e<_;++e){const n=e-P,r=Math.max(0,Math.ceil(n/z)),o=Math.min(F,(C+n)/z);for(let s=0;s<R;++s){const i=s-B,c=Math.max(0,Math.ceil(i/L)),u=Math.min(M,(E+i)/L);let l=0;for(let e=r;e<o;++e){const r=e*z-n;for(let n=c;n<u;++n){const o=w*a+k*e+O*n,s=S*(C-1-r)+N*(E-1-(n*L-i))+T*t;for(let e=0;e<W;++e){l+=x[o+(t*W+e)]*I[s+e]}}}b[g*a+y*e+v*s+t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Ks={kernelName:a.Diag,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,o=a.util.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(a.buffer)([o,o],r.dtype),c=i.values;for(let a=0;a<s.length;a++)c[a*o+a]=s[a];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Xs={kernelName:a.Dilation2D,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r,l=n,d=l.data.get(o.dataId).values,h=o.shape.length,p=l.data.get(s.dataId).values,f=s.shape.length,{batchSize:m,inHeight:b,inWidth:g,inChannels:y,outHeight:v,outWidth:x,padInfo:w,strideHeight:k,strideWidth:O,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:j}=a.backend_util.computeDilation2DInfo(o.shape,s.shape,i,c,"NHWC",u),C=a.util.sizeFromShape(j),E=j.length,A=a.util.getArrayFromDType(o.dtype,C);for(let _=0;_<m;++_)for(let t=0;t<v;++t){const e=t*k-w.top;for(let n=0;n<x;++n){const r=n*O-w.left;for(let i=0;i<y;++i){let c=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const n=e+t*N;if(n>=0&&n<b)for(let e=0;e<S;++e){const u=r+e*T;if(u>=0&&u<g){const r=a.util.locToIndex([_,n,u,i],h,a.util.computeStrides(o.shape)),l=a.util.locToIndex([t,e,i],f,a.util.computeStrides(s.shape)),m=d[r]+p[l];m>c&&(c=m)}}}A[a.util.locToIndex([_,t,n,i],E,a.util.computeStrides(j))]=c}}}return{dataId:l.write(a.util.toTypedArray(A,o.dtype),j,o.dtype),shape:j,dtype:o.dtype}}},Ys={kernelName:a.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,filter:s,dy:i}=e,{strides:c,pad:u,dilations:l}=r,d=n,h=a.util.toNestedArray(o.shape,d.data.get(o.dataId).values),p=a.util.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:O,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=a.backend_util.computeDilation2DInfo(o.shape,s.shape,c,u,"NHWC",l);a.util.assert(i.rank===T.length,()=>"Error in ".concat(a.Dilation2DBackpropFilter,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(i.rank));const j=a.util.toNestedArray(T,d.data.get(i.dataId).values),C=a.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let a=0;a<f;++a)for(let t=0;t<y;++t){const e=t*w-x.top;for(let n=0;n<v;++n){const r=n*k-x.left;for(let o=0;o<g;++o){let s=Number.MIN_SAFE_INTEGER,i=0,c=0;for(let t=0;t<O;++t){const n=e+t*S;if(n>=0&&n<m)for(let e=0;e<I;++e){const u=r+e*N;if(u>=0&&u<b){const r=h[a][n][u][o]+p[t][e][o];r>s&&(s=r,i=t,c=e)}}}C[i][c][o]+=j[a][t][n][o]}}}return{dataId:d.write(a.util.toTypedArray(C,o.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Qs={kernelName:a.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,filter:s,dy:i}=e,{strides:c,pad:u,dilations:l}=r,d=n,h=a.util.toNestedArray(o.shape,d.data.get(o.dataId).values),p=a.util.toNestedArray(s.shape,d.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:b,inChannels:g,outHeight:y,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:O,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=a.backend_util.computeDilation2DInfo(o.shape,s.shape,c,u,"NHWC",l);a.util.assert(i.rank===T.length,()=>"Error in ".concat(a.Dilation2DBackpropInput,", dy ")+"must have the same rank as output ".concat(T.length,", but got ")+"".concat(i.rank));const j=a.util.toNestedArray(T,d.data.get(i.dataId).values),C=a.util.makeZerosNestedTypedArray(o.shape,o.dtype);for(let a=0;a<f;++a)for(let t=0;t<y;++t){const e=t*w-x.top;for(let n=0;n<v;++n){const r=n*k-x.left;for(let o=0;o<g;++o){let s=Number.MIN_SAFE_INTEGER,i=e<0?0:e,c=r<0?0:r;for(let t=0;t<O;++t){const n=e+t*S;if(n>=0&&n<m)for(let e=0;e<I;++e){const u=r+e*N;if(u>=0&&u<b){const r=h[a][n][u][o]+p[t][e][o];r>s&&(s=r,i=n,c=u)}}}C[a][i][c][o]+=j[a][t][n][o]}}}return{dataId:d.write(a.util.toTypedArray(C,o.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};const Zs={kernelName:a.EluGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{dy:r,y:o}=e;Ha([r,o],"eluGrad");const s=new Float32Array(a.util.sizeFromShape(o.shape)),i=n.data.get(o.dataId).values,c=n.data.get(r.dataId).values;for(let a=0;a<i.length;++a){const t=i[a];s[a]=t>=1?c[a]:c[a]*(t+1)}return n.makeTensorInfo(o.shape,"float32",s)}},Js=no((t,e)=>t===e?1:0),$s=vo(a.Equal,Js,null,"bool"),ti={kernelName:a.Equal,backendName:"cpu",kernelFunc:$s},ei=a.backend_util.ERF_P,ni=a.backend_util.ERF_A1,ri=a.backend_util.ERF_A2,ai=a.backend_util.ERF_A3,oi=a.backend_util.ERF_A4,si=a.backend_util.ERF_A5,ii=Xa(a.Erf,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+ei*n);return e*(1-((((si*r+oi)*r+ai)*r+ri)*r+ni)*r*Math.exp(-n*n))}),ci={kernelName:a.Erf,backendName:"cpu",kernelFunc:ii},ui=bs(t=>Math.exp(t)),li=Ya(a.Exp,ui),di={kernelName:a.Exp,backendName:"cpu",kernelFunc:li};function hi(t){const{inputs:e,backend:n,attrs:r}=t,{input:o}=e,{dim:s}=r,i=o.shape.length,c=o.shape.slice();let u=s;return s<0&&(a.util.assert(-(i+1)<=s,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+s+1),c.splice(u,0,1),So({inputs:{x:o},backend:n,attrs:{shape:c}})}const pi={kernelName:a.ExpandDims,backendName:"cpu",kernelFunc:hi},fi=bs(t=>Math.expm1(t)),mi=Ya(a.Expm1,fi),bi={kernelName:a.Expm1,backendName:"cpu",kernelFunc:mi},gi=no((t,e)=>t*e),yi=xo((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),vi=vo(a.Multiply,gi,yi),xi={kernelName:a.Multiply,backendName:"cpu",kernelFunc:vi},wi=no((t,e)=>t/e),ki=vo(a.RealDiv,wi),Oi={kernelName:a.RealDiv,backendName:"cpu",kernelFunc:ki},Ii=no((t,e)=>t-e),Si=xo((t,e,n,r)=>({real:t-n,imag:e-r})),Ni=vo(a.Sub,Ii,Si),Ti={kernelName:a.Sub,backendName:"cpu",kernelFunc:Ni};function ji(t,e,n){const r=t.shape,o=r[0],s=r[1],i=n.data.get(t.dataId),c=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[o,s],d=a.util.sizeFromShape(l),h=a.util.getTypedArrayFromDType("float32",d),p=a.util.getTypedArrayFromDType("float32",d);for(let g=0;g<o;g++){const t=ls({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=ls({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),o=ho({inputs:{real:t,imag:r},backend:n}),{real:i,imag:l}=Ci(o,e,n),d=a.backend_util.mergeRealAndImagArrays(i,l);for(let e=0;e<s;e++){const t=a.backend_util.getComplexWithIndex(d,e);h[g*s+e]=t.real,p[g*s+e]=t.imag}n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(o)}const f=n.makeTensorInfo(l,"float32",h),m=n.makeTensorInfo(l,"float32",p),b=ho({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}function Ci(t,e,n){const r=a.util.sizeFromShape(t.shape),o=n.data.get(t.dataId),s=n.data.get(o.complexTensorInfos.real.dataId).values,i=n.data.get(o.complexTensorInfos.imag.dataId).values;if(0===((c=r)&c-1)){const o=function t(e,n,r,o,s){if(1===r)return{real:e,imag:n};const i=a.backend_util.mergeRealAndImagArrays(e,n),c=r/2,u=a.backend_util.complexWithEvenIndex(i),l=u.real,d=u.imag,h=[l.length],p=s.makeTensorInfo(h,"float32",l),f=s.makeTensorInfo(h,"float32",d),m=ho({inputs:{real:p,imag:f},backend:s}),b=a.backend_util.complexWithOddIndex(i),g=b.real,y=b.imag,v=[g.length],x=s.makeTensorInfo(v,"float32",g),w=s.makeTensorInfo(v,"float32",y),k=ho({inputs:{real:x,imag:w},backend:s}),O=t(l,d,c,o,s),I=O.real,S=O.imag,N=[I.length],T=s.makeTensorInfo(N,"float32",I),j=s.makeTensorInfo(N,"float32",S),C=ho({inputs:{real:T,imag:j},backend:s}),E=t(g,y,c,o,s),A=E.real,_=E.imag,R=[A.length],D=s.makeTensorInfo(R,"float32",A),F=s.makeTensorInfo(R,"float32",_),M=ho({inputs:{real:D,imag:F},backend:s}),z=a.backend_util.exponents(r,o),L=[z.real.length],P=s.makeTensorInfo(L,"float32",z.real),B=s.makeTensorInfo(L,"float32",z.imag),W=ho({inputs:{real:P,imag:B},backend:s}),V=vi({inputs:{a:W,b:M},backend:s}),U=Oo({inputs:{a:C,b:V},backend:s}),G=Ni({inputs:{a:C,b:V},backend:s}),H=mo({inputs:{input:U},backend:s}),q=mo({inputs:{input:G},backend:s}),K=Is({inputs:{input:U},backend:s}),X=Is({inputs:{input:G},backend:s}),Y=Ns({inputs:[H,q],backend:s,attrs:{axis:0}}),Q=Ns({inputs:[K,X],backend:s,attrs:{axis:0}}),Z=s.data.get(Y.dataId).values,J=s.data.get(Q.dataId).values;return s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(k),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(Q),{real:Z,imag:J}}(s,i,r,e,n),c=[t.shape[0],t.shape[1]];if(e){const t=n.makeTensorInfo(c,"float32",o.real),e=n.makeTensorInfo(c,"float32",o.imag),s=n.makeTensorInfo([],"float32",a.util.createScalarValue(r,"float32")),i=Ja({inputs:{x:s},backend:n}),u=Oi.kernelFunc({inputs:{a:t,b:s},backend:n}),l=Oi.kernelFunc({inputs:{a:e,b:i},backend:n}),d=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:d,imag:h}}return o}{const t=function(t,e,n){const r=new Float32Array(2*e);for(let o=0;o<e;o++){let s=0,i=0;for(let r=0;r<e;r++){const c=a.backend_util.exponent(o*r,e,n),u=a.backend_util.getComplexWithIndex(t,r);s+=u.real*c.real-u.imag*c.imag,i+=u.real*c.imag+u.imag*c.real}n&&(s/=e,i/=e),a.backend_util.assignToTypedArray(r,s,i,o)}return r}(a.backend_util.mergeRealAndImagArrays(s,i),r,e);return a.backend_util.splitRealAndImagArrays(t)}var c}const Ei={kernelName:a.FFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,o=a.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=So({inputs:{x:r},backend:n,attrs:{shape:[o/s,s]}}),c=ji(i,!1,n),u=So({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}};function Ai(t){const{backend:e,attrs:n}=t,{shape:r,value:o,dtype:s}=n,i=s||a.util.inferDtype(o),c=a.util.getArrayFromDType(i,a.util.sizeFromShape(r));return function(t,e,n){t.fill(e)}(c,o),e.makeTensorInfo(r,i,c)}const _i={kernelName:a.Fill,backendName:"cpu",kernelFunc:Ai};const Ri={kernelName:a.FlipLeftRight,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{image:o}=e,s=r,i=a.util.getTypedArrayFromDType(o.dtype,a.util.sizeFromShape(o.shape)),[c,u,l,d]=o.shape,h=s.data.get(o.dataId).values;for(let a=0;a<c;a++){const t=a*l*u*d;for(let e=0;e<u;e++){const n=e*(l*d);for(let r=0;r<l;r++){const a=r*d;for(let o=0;o<d;o++){const s=[c,e,r,o][2],u=Math.round(l-s),p=t+n+a+o;let f=h[p];if(u>=0&&u<l){f=h[t+n+u*d+o]}i[p]=f}}}}return{dataId:s.write(i,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Di=bs(t=>Math.floor(t)),Fi=Ya(a.Floor,Di),Mi={kernelName:a.Floor,backendName:"cpu",kernelFunc:Fi},zi=no((t,e)=>Math.floor(t/e)),Li=vo(a.FloorDiv,zi,null,"int32"),Pi={kernelName:a.FloorDiv,backendName:"cpu",kernelFunc:Li};const Bi={kernelName:a.FusedConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:o,bias:s,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=js({inputs:{x:a,filter:o},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(s){const t=m;m=Oo({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=lo(n,m,p,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const Wi={kernelName:a.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,filter:o,bias:s,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=Us({inputs:{x:a,filter:o},backend:n,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(s){const t=m;m=Oo({inputs:{a:m,b:s},backend:n}),n.disposeIntermediateTensorInfo(t)}if(p){const t=m;m=lo(n,m,p,i,f),n.disposeIntermediateTensorInfo(t)}return m}};const Vi={kernelName:a.GatherNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:o}=e,s=a.util.sizeFromShape(r.shape),i=o.shape,c=i[i.length-1],[u,l,d,h]=a.backend_util.prepareAndValidate(r,o);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=Object(a.buffer)([l,d],r.dtype),f=n.data.get(o.dataId).values,m=n.data.get(r.dataId).values;for(let a=0;a<l;a++){const t=[];let e=0;for(let n=0;n<c;n++){const r=f[a*c+n];e+=r*h[n],t.push(r)}if(e<0||e>=s/d)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(r.shape));for(let n=0;n<d;n++)p.values[a*d+n]=m[e*d+n]}return n.makeTensorInfo(u,p.dtype,p.values)}};function Ui(t,e,n){const r=Object(a.buffer)(n,t.dtype);for(let a=0;a<r.size;++a){const n=r.indexToLoc(a).slice(),o=n[0],s=n[2],i=e.locToIndex([o,s]);n[2]=e.values[i];const c=t.locToIndex(n);r.values[a]=t.values[c]}return r}const Gi={kernelName:a.GatherV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,indices:s}=e,{axis:i,batchDims:c}=r;Ha([o,s],"gatherV2");let u=c;null==c&&(u=0);const l=a.util.sizeFromShape(s.shape),d=a.util.parseAxisParam(i,o.shape)[0],h=a.backend_util.segment_util.collectGatherOpShapeInfo(o,s,d,u),p=So({inputs:{x:o},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),f=So({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,l/h.batchSize]}}),m=[h.batchSize,h.outerSize,l/h.batchSize,h.sliceSize],b=n.bufferSync(f),g=Ui(n.bufferSync(p),b,m);return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(h.outputShape,g.dtype,g.values)}},Hi=no((t,e)=>t>e?1:0),qi=vo(a.Greater,Hi,null,"bool"),Ki={kernelName:a.Greater,backendName:"cpu",kernelFunc:qi},Xi=no((t,e)=>t>=e?1:0),Yi=vo(a.GreaterEqual,Xi,null,"bool"),Qi={kernelName:a.GreaterEqual,backendName:"cpu",kernelFunc:Yi};const Zi={kernelName:a.IFFT,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e,o=a.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=So({inputs:{x:r},backend:n,attrs:{shape:[o/s,s]}}),c=ji(i,!0,n),u=So({inputs:{x:c},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),u}},Ji=Xa(a.IsFinite,t=>Number.isFinite(t)?1:0,"bool"),$i={kernelName:a.IsFinite,backendName:"cpu",kernelFunc:Ji},tc=Xa(a.IsInf,t=>Math.abs(t)===1/0?1:0,"bool"),ec={kernelName:a.IsInf,backendName:"cpu",kernelFunc:tc},nc=Xa(a.IsNan,t=>Number.isNaN(t)?1:0,"bool"),rc={kernelName:a.IsNan,backendName:"cpu",kernelFunc:nc},ac=no((t,e)=>t<e?1:0),oc=vo(a.Less,ac,null,"bool"),sc={kernelName:a.Less,backendName:"cpu",kernelFunc:oc},ic=no((t,e)=>t<=e?1:0),cc=vo(a.LessEqual,ic,null,"bool"),uc={kernelName:a.LessEqual,backendName:"cpu",kernelFunc:cc};function lc(t,e,n){const r=(e-t)/(n-1),o=a.util.makeZerosTypedArray(n,"float32");o[0]=t;for(let a=1;a<o.length;a++)o[a]=o[a-1]+r;return o}const dc={kernelName:a.LinSpace,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:o}=n,s=lc(r,a,o);return e.makeTensorInfo([s.length],"float32",s)}},hc=bs(t=>Math.log(t)),pc=Ya(a.Log,hc),fc={kernelName:a.Log,backendName:"cpu",kernelFunc:pc},mc=Xa(a.Log1p,t=>Math.log1p(t)),bc={kernelName:a.Log1p,backendName:"cpu",kernelFunc:mc},gc=no((t,e)=>t&&e),yc=vo(a.LogicalAnd,gc,null,"bool"),vc={kernelName:a.LogicalAnd,backendName:"cpu",kernelFunc:yc},xc=Xa(a.LogicalNot,t=>t?0:1,"bool"),wc={kernelName:a.LogicalNot,backendName:"cpu",kernelFunc:xc},kc=no((t,e)=>t||e),Oc=vo(a.LogicalOr,kc,null,"bool"),Ic={kernelName:a.LogicalOr,backendName:"cpu",kernelFunc:Oc};const Sc={kernelName:a.LRN,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{depthRadius:s,bias:i,alpha:c,beta:u}=r;Ha(o,"LRN");const l=o.shape[3],d=l-1,h=n.data.get(o.dataId).values,p=a.util.sizeFromShape(o.shape),f=new Float32Array(p);function m(t){const e=t%l;let n=t-e+Math.max(0,e-s);const r=t-e+Math.min(e+s,d);let a=0;for(;n<=r;n++){const t=h[n];a+=t*t}return a}for(let a=0;a<p;a++){const t=m(a),e=h[a]*Math.pow(i+c*t,-u);f[a]=e}return n.makeTensorInfo(o.shape,o.dtype,f)}};const Nc={kernelName:a.LRNGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,y:s,dy:i}=e,{depthRadius:c,bias:u,alpha:l,beta:d}=r;Ha(i,"LRNGrad");const h=a.util.sizeFromShape(i.shape),p=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(o.dataId).values,b=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let a=0;a<y;a++){const t=a%p,e=a-t+Math.max(0,t-c),n=a-t+Math.min(p,t+c+1);let r=0;for(let a=e;a<n;a++)r+=Math.pow(m[a],2);r=l*r+u;for(let o=e;o<n;o++){let t=-2*l*d*m[o]*b[a]/r;a===o&&(t+=Math.pow(r,-d)),t*=f[a],g[o]+=t}}return n.makeTensorInfo(i.shape,o.dtype,g)}};function Tc(t,e,n,r){const o=a.util.getTypedArrayFromDType(r,a.util.sizeFromShape(n));for(let a=0;a<o.length;++a){const n=a*e;let r=t[n];for(let a=0;a<e;++a){const e=t[n+a];e>r&&(r=e)}o[a]=r}return o}function jc(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{reductionIndices:s,keepDims:i}=r,c=n;let u=o.shape;const l=u.length,d=a.util.parseAxisParam(s,u);let h=d;const p=a.backend_util.getAxesPermutation(h,l);let f=c.data.get(o.dataId).values;if(null!=p){const t=new Array(l);for(let e=0;e<t.length;e++)t[e]=u[p[e]];f=zo(f,u,o.dtype,p,t),h=a.backend_util.getInnerMostAxes(h.length,l),u=t}Ha(o,"max"),a.backend_util.assertAxesAreInnerMostDims("max",h,l);const[m,b]=a.backend_util.computeOutAndReduceShapes(u,h),g=Tc(f,a.util.sizeFromShape(b),m,o.dtype),y=c.write(g,m,o.dtype);let v=m;if(i){v=a.backend_util.expandShapeToKeepDim(m,d)}return{dataId:y,shape:v,dtype:o.dtype}}const Cc={kernelName:a.Max,backendName:"cpu",kernelFunc:jc},Ec=no((t,e)=>Math.max(t,e)),Ac=vo(a.Maximum,Ec),_c={kernelName:a.Maximum,backendName:"cpu",kernelFunc:Ac};const Rc={kernelName:a.MaxPool,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;Ha(o,"maxPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.backend_util.computePool2DInfo(o.shape,s,i,1,c,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))d=Ja({inputs:{x:o},backend:n});else{const t=n.data.get(o.dataId).values,e=a.util.computeStrides(o.shape),r=es(t,o.shape,o.dtype,e,l,"max");d=n.makeTensorInfo(l.outShape,o.dtype,r.values)}return d}};const Dc={kernelName:a.MaxPool3D,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dimRoundingMode:u,dataFormat:l,dilations:d}=r;Ha(o,"maxPool3d");let h=d;null==h&&(h=[1,1,1]);const p=a.backend_util.computePool3DInfo(o.shape,s,i,h,c,u,l),f=rs(n.data.get(o.dataId).values,o.shape,o.dtype,a.util.computeStrides(o.shape),p,"max");return n.makeTensorInfo(f.shape,"float32",f.values)}};const Fc={kernelName:a.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,{filterSize:i,strides:c,pad:u,dilations:l,dimRoundingMode:d}=r;Ha([o,s],"maxPool3DGrad");const h=a.backend_util.computePool3DInfo(s.shape,i,c,l,u,d),p=function(t,e){const n=Object(a.buffer)(e.outShape,"int32"),r=e.strideDepth,o=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,m=e.padInfo.left;for(let a=0;a<e.batchSize;++a)for(let b=0;b<e.inChannels;++b)for(let g=0;g<e.outDepth;++g){const y=g*r-p;let v=y;for(;v<0;)v+=i;const x=Math.min(e.inDepth,l+y);for(let r=0;r<e.outHeight;++r){const l=r*o-f;let p=l;for(;p<0;)p+=c;const w=Math.min(e.inHeight,d+l);for(let o=0;o<e.outWidth;++o){const f=o*s-m;let k=f;for(;k<0;)k+=u;const O=Math.min(e.inWidth,h+f);let I=Number.NEGATIVE_INFINITY,S=-1;for(let e=v;e<x;e+=i){const n=e-y;for(let r=p;r<w;r+=c){const o=r-l;for(let s=k;s<O;s+=u){const i=s-f,c=t.get(a,e,r,s,b);c>=I&&(I=c,S=n*d*h+o*d+i)}}}n.set(S,a,g,r,o,b)}}}return n}(n.bufferSync(s),h),f=h.strideDepth,m=h.strideHeight,b=h.strideWidth,g=h.dilationDepth,y=h.dilationHeight,v=h.dilationWidth,x=h.effectiveFilterDepth,w=h.effectiveFilterHeight,k=h.effectiveFilterWidth,O=x-1-h.padInfo.front,I=k-1-h.padInfo.left,S=w-1-h.padInfo.top,N=Object(a.buffer)(s.shape,"float32"),T=n.bufferSync(o);for(let a=0;a<h.batchSize;++a)for(let t=0;t<h.inChannels;++t)for(let e=0;e<h.inDepth;++e)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const o=e-O,s=n-S,i=r-I;let c=0;for(let e=0;e<x;e+=g){const n=(o+e)/f;if(!(n<0||n>=h.outDepth||Math.floor(n)!==n))for(let r=0;r<w;r+=y){const o=(s+r)/m;if(!(o<0||o>=h.outHeight||Math.floor(o)!==o))for(let s=0;s<k;s+=v){const u=(i+s)/b;if(u<0||u>=h.outWidth||Math.floor(u)!==u)continue;const l=x*w*k-1-p.get(a,n,o,u,t)===e*w*k+r*k+s?1:0;if(0===l)continue;c+=T.get(a,n,o,u,t)*l}}}N.set(c,a,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Mc={kernelName:a.MaxPoolGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s,output:i}=e,c=s;Ha([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:h}=r,p=a.backend_util.computePool2DInfo(c.shape,u,l,1,d,h),f=n.data.get(c.dataId).values,m=Object(a.buffer)(p.outShape,c.dtype,ns(f,c.shape,c.dtype,p).values),b=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,v=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,O=x-1-p.padInfo.top,I=Object(a.buffer)(c.shape,"float32"),S=n.data.get(o.dataId).values,N=Object(a.buffer)(o.shape,"float32",S);for(let a=0;a<p.batchSize;++a)for(let t=0;t<p.inChannels;++t)for(let e=0;e<p.inHeight;++e)for(let n=0;n<p.inWidth;++n){const r=e-O,o=n-k;let s=0;for(let e=0;e<x;e+=y){const n=(r+e)/b;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=v){const i=(o+r)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const c=x*w-1-m.get(a,n,i,t)===e*w+r?1:0;if(0===c)continue;s+=N.get(a,n,i,t)*c}}I.set(s,a,e,n,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const zc={kernelName:a.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{x:o}=e,{filterSize:s,strides:i,pad:c,includeBatchInIndex:u}=n,l=r;Ha(o,"MaxPoolWithArgmax");const d=l.data.get(o.dataId).values,h=a.backend_util.computePool2DInfo(o.shape,s,i,[1,1],c),[p,f]=function(t,e,n,r,o){const s=es(t,0,n,a.util.computeStrides(e),o,"max"),i=ns(t,e,n,o,!0,r);return[s.values,i.values]}(d,o.shape,o.dtype,u,h),m=l.write(p,h.outShape,o.dtype),b=l.write(f,h.outShape,o.dtype);return[{dataId:m,shape:h.outShape,dtype:o.dtype},{dataId:b,shape:h.outShape,dtype:"int32"}]}};function Lc(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;let c;Ha(o,"sum"),c="bool"===o.dtype?go({inputs:{x:o},backend:n,attrs:{dtype:"int32"}}):Ja({inputs:{x:o},backend:n});const u=c.shape.length,l=a.util.parseAxisParam(s,c.shape),d=a.backend_util.getAxesPermutation(l,u);let h=l,p=c;null!=d&&(p=Lo({inputs:{x:c},backend:n,attrs:{perm:d}}),h=a.backend_util.getInnerMostAxes(h.length,u)),a.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[f,m]=a.backend_util.computeOutAndReduceShapes(p.shape,h);let b=fo(n,f,a.backend_util.upcastType(p.dtype,"int32"));const g=a.util.sizeFromShape(m),y=n.data.get(b.dataId).values,v=n.data.get(p.dataId).values;for(let a=0;a<y.length;++a){const t=a*g;let e=0;for(let n=0;n<g;++n)e+=v[t+n];y[a]=e}if(i){const t=b;b=So({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(b.shape,l)}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(c),null!=d&&n.disposeIntermediateTensorInfo(p),b}const Pc={kernelName:a.Sum,backendName:"cpu",kernelFunc:Lc};const Bc={kernelName:a.Mean,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=a.util.parseAxisParam(s,o.shape),u=a.backend_util.computeOutAndReduceShapes(o.shape,c)[1],l=a.util.sizeFromShape(u),d=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=go({inputs:{x:o},backend:n,attrs:{dtype:"float32"}});d.push(p);const f=ki({inputs:{a:p,b:h},backend:n});d.push(f);const m=Lc({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),m}};const Wc={kernelName:a.Min,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ha(o,"min");const c=a.util.parseAxisParam(s,o.shape);let u=c;const l=a.backend_util.getAxesPermutation(u,o.shape.length);let d=o;null!=l&&(d=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),u=a.backend_util.getInnerMostAxes(u.length,o.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",u,d.shape.length);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,u),f=a.util.sizeFromShape(p),m=a.util.makeZerosTypedArray(a.util.sizeFromShape(h),d.dtype),b=n.data.get(d.dataId).values;for(let a=0;a<m.length;++a){const t=a*f;let e=b[t];for(let n=0;n<f;++n){const r=b[t+n];r<e&&(e=r)}m[a]=e}null!=l&&n.disposeIntermediateTensorInfo(d);const g=n.makeTensorInfo(h,d.dtype,m);if(i){const t=So({inputs:{x:g},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(h,c)}});return n.disposeIntermediateTensorInfo(g),t}return g}},Vc=no((t,e)=>Math.min(t,e)),Uc=vo(a.Minimum,Vc),Gc={kernelName:a.Minimum,backendName:"cpu",kernelFunc:Uc};const Hc={kernelName:a.MirrorPad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{paddings:s,mode:i}=r;Ha(o,"mirrorPad");const c=s.map((t,e)=>t[0]+o.shape[e]+t[1]),u=s.map(t=>t[0]),l=s.map((t,e)=>t[0]+o.shape[e]),d="reflect"===i?0:1,h=n.data.get(o.dataId).values,p=o.shape.length,f=a.util.computeStrides(o.shape),m=a.util.sizeFromShape(c),b=c.length,g=a.util.computeStrides(c),y=a.util.getTypedArrayFromDType(o.dtype,m);for(let v=0;v<m;v++){let t=a.util.indexToLoc(v,b,g);for(let n=0;n<b;n++)t[n]<u[n]?t[n]=2*u[n]-t[n]-d:t[n]>=l[n]&&(t[n]=2*(l[n]-1)-t[n]+d);t=t.map((t,e)=>t-u[e]);const e=a.util.locToIndex(t,p,f);y[v]=h[e]}return{dataId:n.write(y,c,o.dtype),shape:c,dtype:o.dtype}}},qc=no((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),Kc=vo(a.Mod,qc),Xc={kernelName:a.Mod,backendName:"cpu",kernelFunc:Kc};function Yc(t){const{inputs:e,backend:n,attrs:r}=t,{logits:o}=e,{dim:s}=r,i=o.shape.length;let c=s;if(-1===c&&(c=i-1),c!==i-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(i," and dim was ").concat(c));const u=a.util.parseAxisParam([c],o.shape),l=jc({inputs:{x:o},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=a.backend_util.expandShapeToKeepDim(l.shape,u),h=So({inputs:{x:l},backend:n,attrs:{shape:d}}),p=Ni({inputs:{a:o,b:h},backend:n}),f=li({inputs:{x:p},backend:n}),m=Lc({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),b=So({inputs:{x:m},backend:n,attrs:{shape:d}}),g=ki({inputs:{a:f,b:b},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),g}const Qc={kernelName:a.Softmax,backendName:"cpu",kernelFunc:Yc};const Zc={kernelName:a.Multinomial,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:o}=e,{numSamples:s,seed:i,normalized:c}=r;Ha(o,"multinomial");const u=c?o:Yc({inputs:{logits:o},backend:n,attrs:{dim:-1}}),l=u.shape[0],d=u.shape[1],h=n.data.get(u.dataId).values,p=[l,s],f=a.util.makeZerosTypedArray(a.util.sizeFromShape(p),"int32");for(let a=0;a<l;++a){const t=a*d,e=new Float32Array(d-1);e[0]=h[t];for(let a=1;a<e.length;++a)e[a]=e[a-1]+h[t+a];const n=La.alea(i.toString()),r=a*s;for(let a=0;a<s;++a){const t=n();f[r+a]=e.length;for(let n=0;n<e.length;n++)if(t<e[n]){f[r+a]=n;break}}}return c||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",f)}};function Jc(t,e,n){const r=a.util.createScalarValue(-1,n);return gi([],e,r,t,n)}const $c={kernelName:a.Neg,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;Ha(r,"neg");const a=n.data.get(r.dataId).values,[o,s]=Jc(a,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,o)}},tu=a.kernel_impls.nonMaxSuppressionV3Impl;const eu={kernelName:a.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:o}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c}=r;Ha(a,"NonMaxSuppression");const u=n.data.get(a.dataId).values,l=n.data.get(o.dataId).values,{selectedIndices:d}=tu(u,l,s,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},nu=a.kernel_impls.nonMaxSuppressionV4Impl;const ru={kernelName:a.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:o}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=r;Ha(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=nu(l,d,s,i,c,u);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},au=a.kernel_impls.nonMaxSuppressionV5Impl;const ou={kernelName:a.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:a,scores:o}=e,{maxOutputSize:s,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=r;Ha(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=s,p=i,f=c,m=u,{selectedIndices:b,selectedScores:g}=au(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},su=no((t,e)=>t!==e?1:0),iu=vo(a.NotEqual,su,null,"bool"),cu={kernelName:a.NotEqual,backendName:"cpu",kernelFunc:iu};const uu={kernelName:a.OneHot,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:o}=e,{depth:s,onValue:i,offValue:c}=r;Ha(o,"oneHot");const u=a.util.sizeFromShape(o.shape),l=new Float32Array(u*s);l.fill(c);const d=n.data.get(o.dataId).values;for(let a=0;a<u;++a)d[a]>=0&&d[a]<s&&(l[a*s+d[a]]=i);return n.makeTensorInfo([...o.shape,s],"int32",l)}};function lu(t){const{inputs:e,backend:n}=t,{x:r}=e;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const t=mo({inputs:{input:r},backend:n}),e=lu({inputs:{x:t},backend:n}),a=Is({inputs:{input:r},backend:n}),o=lu({inputs:{x:a},backend:n}),s=ho({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return Ai({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const du={kernelName:a.ZerosLike,backendName:"cpu",kernelFunc:lu};const hu={kernelName:a.OnesLike,backendName:"cpu",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const e=mo({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),o=Is({inputs:{input:a},backend:r}),s=lu({inputs:{x:o},backend:r}),i=ho({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}return Ai({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function pu(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r;if(1===e.length)return hi({inputs:{input:e[0]},backend:n,attrs:{dim:o}});const s=e[0].shape,i=e[0].dtype;e.forEach(t=>{a.util.assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=Ns({inputs:e.map(t=>{const e=hi({inputs:{input:t},backend:n,attrs:{dim:o}});return c.push(e),e}),backend:n,attrs:{axis:o}});return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}const fu={kernelName:a.Pack,backendName:"cpu",kernelFunc:pu};const mu={kernelName:a.PadV2,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{paddings:s,constantValue:i}=r;Ha(o,"pad");const c=s.map((t,e)=>t[0]+o.shape[e]+t[1]),u=s.map(t=>t[0]),l=n.data.get(o.dataId).values,d=a.util.sizeFromShape(o.shape),h=o.shape.length,p=a.util.computeStrides(o.shape),f=a.util.sizeFromShape(c),m=c.length,b=a.util.computeStrides(c),g=a.util.getTypedArrayFromDType(o.dtype,f);0!==i&&g.fill(i);for(let y=0;y<d;y++){const t=a.util.indexToLoc(y,h,p).map((t,e)=>t+u[e]);g[a.util.locToIndex(t,m,b)]=l[y]}return{dataId:n.write(g,c,o.dtype),shape:c,dtype:o.dtype}}},bu=no((t,e)=>Math.pow(t,e)),gu=vo(a.Pow,bu),yu={kernelName:a.Pow,backendName:"cpu",kernelFunc:gu};function vu(t,e,n,r){const[o,s]=a.backend_util.computeOutAndReduceShapes(t,r),i=Object(a.upcastType)(e,"int32"),c=a.util.makeZerosTypedArray(a.util.sizeFromShape(o),i),u=a.util.sizeFromShape(s);for(let a=0;a<c.length;++a){const t=a*u;let e=1;for(let r=0;r<u;++r)e*=n[t+r];c[a]=e}return{outVals:c,outShape:o,outDtype:i}}const xu={kernelName:a.Prod,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;Ha(o,"prod");const c=o.shape.length,u=a.util.parseAxisParam(s,o.shape),l=a.backend_util.getAxesPermutation(u,c);let d=u,h=o;const p=[];null!=l&&(h=Lo({inputs:{x:o},backend:n,attrs:{perm:l}}),p.push(h),d=a.backend_util.getInnerMostAxes(d.length,c));const f=n.data.get(h.dataId).values,{outVals:m,outShape:b,outDtype:g}=vu(h.shape,h.dtype,f,d);let y=b;return i&&(y=a.backend_util.expandShapeToKeepDim(b,u)),p.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(y,g,m)}};function wu(t,e,n,r){if(t===e||t<e&&n<0||e<t&&n>1)return a.util.makeZerosTypedArray(0,r);const o=Math.abs(Math.ceil((e-t)/n)),s=a.util.makeZerosTypedArray(o,r);e<t&&1===n&&(n=-1),s[0]=t;for(let a=1;a<s.length;a++)s[a]=s[a-1]+n;return s}const ku={kernelName:a.Range,backendName:"cpu",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,dtype:o,step:s}=n,i=wu(r,a,s,o);return e.makeTensorInfo([i.length],o,i)}},Ou=Xa(a.Reciprocal,t=>1/t),Iu={kernelName:a.Reciprocal,backendName:"cpu",kernelFunc:Ou};const Su={kernelName:a.ResizeBilinear,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:c}=r;Ha(o,"resizeBilinear");const u=a.util.computeStrides(o.shape),[l,d]=c,[h,p,f,m]=o.shape,b=n.data.get(o.dataId).values,g=new Float32Array(a.util.sizeFromShape([h,l,d,m])),y=[s&&l>1?p-1:p,s&&d>1?f-1:f],v=[s&&l>1?l-1:l,s&&d>1?d-1:d];let x=0;const w=y[0]/v[0],k=y[1]/v[1];for(let a=0;a<h;a++)for(let t=0;t<l;t++){let e;e=i?w*(t+.5)-.5:w*t;const n=Math.max(0,Math.floor(e)),r=e-n,o=Math.min(p-1,Math.ceil(e)),s=a*u[0]+n*u[1],c=a*u[0]+o*u[1];for(let t=0;t<d;t++){let e;e=i?k*(t+.5)-.5:k*t;const n=Math.max(0,Math.floor(e)),a=e-n,o=Math.min(f-1,Math.ceil(e)),l=s+n*u[2],d=c+n*u[2],h=s+o*u[2],p=c+o*u[2];for(let t=0;t<m;t++){const e=b[l+t],n=b[d+t],o=e+(b[h+t]-e)*a,s=o+(n+(b[p+t]-n)*a-o)*r;g[x++]=s}}}return n.makeTensorInfo([h,l,d,m],"float32",g)}};const Nu={kernelName:a.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o,dy:s}=e,{alignCorners:i}=r;Ha([s,o],"resizeBilinearGrad");const c=a.util.computeStrides(o.shape),[u,l,d,h]=o.shape,[,p,f]=s.shape,m=new Float32Array(u*l*d*h),b=[i&&p>1?l-1:l,i&&f>1?d-1:d],g=[i&&p>1?p-1:p,i&&f>1?f-1:f],y=b[0]/g[0],v=b[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let a=0;a<u;a++){const t=a*c[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),o=t+r*c[1],s=t+a*c[1],i=n-r,u=1-i;for(let t=0;t<f;t++){const e=t*v,n=Math.floor(e),r=Math.min(Math.ceil(e),d-1),a=e-n,l=1-a,p=o+n*c[2],f=o+r*c[2],b=s+n*c[2],g=s+r*c[2],y=u*l,k=u*a,O=i*l,I=i*a;for(let t=0;t<h;t++){const e=x[w++];m[p+t]+=e*y,m[f+t]+=e*k,m[b+t]+=e*O,m[g+t]+=e*I}}}}return n.makeTensorInfo([u,d,l,h],"float32",m)}};const Tu={kernelName:a.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:c}=r;Ha(o,"resizeNearestNeighbor");const u=a.util.computeStrides(o.shape),[l,d]=c,[h,p,f,m]=o.shape,b=n.data.get(o.dataId).values,g=new Float32Array(h*l*d*m),y=[s&&l>1?p-1:p,s&&d>1?f-1:f],v=[s&&l>1?l-1:l,s&&d>1?d-1:d],x=y[0]/v[0],w=y[1]/v[1];let k=0;for(let a=0;a<h;a++){const t=a*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let t=0;t<d;t++){const e=i?w*(t+.5):w*t;let n=Math.min(f-1,s?Math.round(e):Math.floor(e));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let t=0;t<m;t++){const e=b[r+t];g[k++]=e}}}}return n.makeTensorInfo([h,l,d,m],o.dtype,g)}};const ju={kernelName:a.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o,dy:s}=e,{alignCorners:i}=r;Ha([s,o],"resizeNearestNeighborGrad");const c=a.util.computeStrides(o.shape),u=a.util.computeStrides(s.shape),[l,d,h,p]=o.shape,[,f,m]=s.shape,b=new Float32Array(l*d*h*p),g=n.data.get(s.dataId).values,y=[i&&f>1?d-1:d,i&&m>1?h-1:h],v=[i&&f>1?f-1:f,i&&m>1?m-1:m],x=y[0]/v[0],w=y[1]/v[1],k=1/x,O=1/w,I=2*Math.ceil(k)+2,S=2*Math.ceil(O)+2;for(let a=0;a<l;a++){const t=a*c[0];for(let e=0;e<d;e++){const n=t+e*c[1],r=Math.floor(e*k),a=Math.floor(r-I/2);for(let o=0;o<h;o++){const r=n+o*c[2],s=Math.floor(o*O),l=Math.floor(s-S/2);for(let n=0;n<p;n++){let s=0;for(let r=0;r<I;r++){const c=r+a;if(c<0||c>=f)continue;const p=t+c*u[1],b=c*x;if(e===Math.min(d-1,i?Math.round(b):Math.floor(b)))for(let t=0;t<S;t++){const e=t+l;if(e<0||e>=m)continue;const r=p+e*u[2],a=e*w;o===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(s+=g[r+n])}}b[r+n]=s}}}}return n.makeTensorInfo(o.shape,o.dtype,b)}};const Cu={kernelName:a.Reverse,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{dims:s}=r;Ha(o,"reverse");const i=o.shape.length,c=a.util.parseAxisParam(s,o.shape);if(0===i)return Ja({inputs:{x:o},backend:n});const u=new a.TensorBuffer(o.shape,o.dtype),l=n.bufferSync(o);for(let a=0;a<u.size;a++){const t=u.indexToLoc(a),e=t.slice();c.forEach(t=>e[t]=o.shape[t]-1-e[t]),u.set(l.get(...e),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Eu={kernelName:a.RotateWithOffset,backendName:"cpu",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{image:o}=e,{radians:s,fillValue:i,center:c}=n,u=r,l=a.util.getTypedArrayFromDType(o.dtype,a.util.sizeFromShape(o.shape)),[d,h,p,f]=o.shape,[m,b]=a.backend_util.getImageCenter(c,h,p),g=Math.sin(s),y=Math.cos(s),v=u.data.get(o.dataId).values;for(let a=0;a<d;a++){const t=a*p*h*f;for(let e=0;e<h;e++){const n=e*(p*f);for(let r=0;r<p;r++){const a=r*f;for(let o=0;o<f;o++){const s=[d,e,r,o],c=s[2],u=s[1];let x=(c-m)*y-(u-b)*g,w=(c-m)*g+(u-b)*y;x=Math.round(x+m),w=Math.round(w+b);let k=i;if("number"!==typeof i&&(k=3===o?255:i[o]),x>=0&&x<p&&w>=0&&w<h){k=v[t+w*(p*f)+x*f+o]}l[t+n+a+o]=k}}}}return{dataId:u.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},Au=Xa(a.Round,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),_u={kernelName:a.Round,backendName:"cpu",kernelFunc:Au},Ru=bs(t=>1/Math.sqrt(t)),Du=Ya(a.Rsqrt,Ru),Fu={kernelName:a.Rsqrt,backendName:"cpu",kernelFunc:Du};function Mu(t,e,n,r,o,s,i,c,u,l){const d=[r/o,o],h=t.values,p=e.values;if(0===r)return Object(a.buffer)(n,e.dtype);const f=Object(a.buffer)(d,e.dtype);f.values.fill(u);for(let a=0;a<s;a++){const t=[];let s=0;for(let e=0;e<i;e++){const n=h[a*i+e];t.push(n),s+=n*c[e]}if(s<0||s>=r/o)throw new Error("Invalid indices: ".concat(t," does not index into ").concat(n));for(let n=0;n<o;n++)l?f.values[s*o+n]+=p[a*o+n]:f.values[s*o+n]=0===e.rank?p[0]:p[a*o+n]}return f}const zu={kernelName:a.ScatterNd,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:o,updates:s}=e,{shape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=a.backend_util.calculateShapes(s,o,i),p=Mu(n.bufferSync(o),n.bufferSync(s),i,h,l,u,c,d,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};const Lu={kernelName:a.Select,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:o,e:s}=e;Ha([r,o,s],"select");const i=r.shape.length,c=n.data.get(r.dataId).values,u=n.data.get(o.dataId).values,l=n.data.get(s.dataId).values,d=Object(a.upcastType)(o.dtype,s.dtype),h=a.util.makeZerosTypedArray(a.util.sizeFromShape(o.shape),d);let p=0;const f=0===i||i>1||1===o.shape.length?1:a.util.sizeFromShape(o.shape.slice(1));for(let a=0;a<c.length;a++)for(let t=0;t<f;t++)1===c[a]?h[p++]=u[a]:h[p++]=l[a];return n.makeTensorInfo(o.shape,d,h)}},Pu=a.backend_util.SELU_SCALEALPHA,Bu=a.backend_util.SELU_SCALE,Wu=Xa(a.Selu,t=>t>=0?Bu*t:Pu*(Math.exp(t)-1)),Vu={kernelName:a.Selu,backendName:"cpu",kernelFunc:Wu},Uu=Xa(a.Sigmoid,t=>1/(1+Math.exp(-t))),Gu={kernelName:a.Sigmoid,backendName:"cpu",kernelFunc:Uu},Hu=Xa(a.Sign,t=>t<0?-1:t>0?1:0),qu={kernelName:a.Sign,backendName:"cpu",kernelFunc:Hu},Ku=Xa(a.Sin,t=>Math.sin(t)),Xu={kernelName:a.Sin,backendName:"cpu",kernelFunc:Ku},Yu=Xa(a.Sinh,t=>Math.sinh(t)),Qu={kernelName:a.Sinh,backendName:"cpu",kernelFunc:Yu},Zu=Math.log(1.1920928955078125e-7)+2,Ju=Xa(a.Softplus,t=>{const e=t>-Zu,n=t<Zu,r=Math.exp(t);let a;return a=n?r:e?t:Math.log(1+r),a}),$u={kernelName:a.Softplus,backendName:"cpu",kernelFunc:Ju};const tl={kernelName:a.SpaceToBatchND,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,paddings:i}=r;Ha([o],"spaceToBatchND");const c=a.util.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let a=1+s.length;a<o.shape.length;++a)u.push([0,0]);const l=mu.kernelFunc({inputs:{x:o},backend:n,attrs:{paddings:u,constantValue:0}}),d=a.backend_util.getReshaped(l.shape,s,c,!1),h=a.backend_util.getPermuted(d.length,s.length,!1),p=a.backend_util.getReshapedPermuted(l.shape,s,c,!1),f=So({inputs:{x:l},backend:n,attrs:{shape:d}}),m=Lo({inputs:{x:f},backend:n,attrs:{perm:h}}),b=So({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};const el={kernelName:a.SparseToDense,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:c}=r,{sliceRank:u,numUpdates:l,sliceSize:d,strides:h,outputSize:p}=a.backend_util.calculateShapes(s,o,c),f=Mu(n.bufferSync(o),n.bufferSync(s),c,p,d,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(c,f.dtype,f.values)}};const nl={kernelName:a.SplitV,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{numOrSizeSplits:s,axis:i}=r,c=a.util.parseAxisParam(i,o.shape)[0],u=a.backend_util.prepareSplitSize(o,s,c),l=new Array(o.shape.length).fill(0),d=o.shape.slice();return u.map(t=>{const e=[...d];e[c]=t;const r=ls({inputs:{x:o},backend:n,attrs:{begin:l,size:e}});return l[c]+=t,r})}},rl=Xa(a.Sqrt,t=>Math.sqrt(t)),al={kernelName:a.Sqrt,backendName:"cpu",kernelFunc:rl},ol={kernelName:a.Square,backendName:"cpu",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{x:r}=e,a=n;Ha(r,"square");const o=a.data.get(r.dataId).values,s=new Float32Array(o.length);for(let i=0;i<o.length;++i){const t=o[i];s[i]=t*t}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},sl=no((t,e)=>{const n=t-e;return n*n}),il=vo(a.SquaredDifference,sl),cl={kernelName:a.SquaredDifference,backendName:"cpu",kernelFunc:il},ul=Xa(a.Step,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),ll={kernelName:a.Step,backendName:"cpu",kernelFunc:ul};function dl(t,e,n,r){const o=Object(a.buffer)(t,e.dtype);for(let a=0;a<o.size;a++){const t=o.indexToLoc(a),s=new Array(t.length);for(let e=0;e<s.length;e++)s[e]=t[e]*n[e]+r[e];o.set(e.get(...s),...t)}return o}const hl={kernelName:a.StridedSlice,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r;Ha(o,"stridedSlice");const{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:v}=a.slice_util.sliceInfo(o.shape,s,i,c,u,l,d,h,p),x=So({inputs:{x:o},backend:n,attrs:{shape:y}});let w;if(f){const t=ls({inputs:{x:x},backend:n,attrs:{begin:m,size:g}});w=So({inputs:{x:t},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(t)}else if(v.some(t=>0===t))w=n.makeTensorInfo(v,o.dtype,[]);else{const t=dl(v,n.bufferSync(x),b,m);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const k=So({inputs:{x:w},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),k}},pl=Xa(a.Tan,t=>Math.tan(t)),fl={kernelName:a.Tan,backendName:"cpu",kernelFunc:pl},ml=Xa(a.Tanh,t=>Math.tanh(t)),bl={kernelName:a.Tanh,backendName:"cpu",kernelFunc:ml};function gl(t,e){const n=new Array(t.rank);for(let a=0;a<n.length;a++)n[a]=t.shape[a]*e[a];const r=Object(a.buffer)(n,t.dtype);for(let a=0;a<r.values.length;++a){const e=r.indexToLoc(a),n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=e[r]%t.shape[r];const o=t.locToIndex(n);r.values[a]=t.values[o]}return r}const yl={kernelName:a.Tile,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{reps:o}=r;Ha(a,"tile");const s=gl(n.bufferSync(a),o);return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function vl(t,e,n,r,o){const s=e[e.length-1],[i,c]=[t.length/s,s],u=a.util.getTypedArrayFromDType(n,i*r),l=a.util.getTypedArrayFromDType("int32",i*r);for(let a=0;a<i;a++){const e=a*c,n=t.subarray(e,e+c),o=[];for(let t=0;t<n.length;t++)o.push({value:n[t],index:t});o.sort((t,e)=>e.value-t.value);const s=a*r,i=u.subarray(s,s+r),d=l.subarray(s,s+r);for(let t=0;t<r;t++)i[t]=o[t].value,d[t]=o[t].index}const d=e.slice();return d[d.length-1]=r,[Object(a.buffer)(d,n,u),Object(a.buffer)(d,"int32",l)]}const xl={kernelName:a.TopK,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:o,sorted:s}=r;Ha(a,"topk");const i=n.data.get(a.dataId).values,[c,u]=vl(i,a.shape,a.dtype,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};function wl(t,e,n,r){const o=a.util.parseAxisParam(e,n)[0],s=[1,n[0],1];for(let a=0;a<o;a++)s[0]*=n[a];s[1]=n[o];for(let a=o+1;a<n.length;a++)s[2]*=n[a];const i={},c=new Int32Array(n[o]),u=new a.TensorBuffer(s,r,t),l=[],d=1===s[0]&&1===s[2];for(let a=0;a<n[o];a++){let e;if(d)e=t[a].toString();else{const t=[];for(let e=0;e<s[0];e++)for(let n=0;n<s[2];n++)t.push(u.get(e,a,n));e=t.join(",")}if(void 0!==i[e])c[a]=i[e];else{const t=Object.keys(i).length;i[e]=t,c[a]=t,l.push(a)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new a.TensorBuffer(h,r);l.forEach((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,t,r),n,e,r)});const f=n.slice();return f[o]=h[1],{outputValues:p.values,outputShape:f,indices:c}}const kl={kernelName:a.Unique,backendName:"cpu",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:o}=e;Ha(o,"unique");const s=r.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:u}=wl(s,a,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const Ol={kernelName:a.Unpack,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a.shape.length,i=a.shape[o],c=new Array(s-1);let u=0;for(let p=0;p<s;p++)p!==o&&(c[u++]=a.shape[p]);const l=new Array(s).fill(0),d=a.shape.slice();d[o]=1;const h=new Array(i);for(let p=0;p<h.length;p++){l[o]=p;const t=ls({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[p]=So({inputs:{x:t},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(t)}return h}};const Il={kernelName:a.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,segmentIds:s}=e,{numSegments:i}=r;Ha(o,"unsortedSegmentSum");const c=[],u=[],l=o.shape.length-s.shape.length;let d=s;for(let a=0;a<l;++a){const t=hi({inputs:{input:d},backend:n,attrs:{dim:a+1}});d=t,u.push(t)}for(let p=0;p<i;++p){const t=a.util.createScalarValue(p,"int32"),e=n.makeTensorInfo([],"int32",t),r=$s({inputs:{a:e,b:d},backend:n}),s=go({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=vi({inputs:{a:s,b:o},backend:n}),l=Lc({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});c.push(l),u.push(e),u.push(r),u.push(s),u.push(i),u.push(l)}const h=pu({inputs:c,backend:n,attrs:{axis:0}});return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),h}},Sl=[Co,Ao,Ro,Fo,Io,Mo,Bo,Wo,Vo,Uo,Ho,Ko,Yo,Jo,ts,as,os,ss,is,jo,cs,hs,ms,yo,vs,ws,po,ks,Ts,Es,As,Cs,Rs,Ds,_s,Ms,Ls,Ps,Bs,Ws,Vs,Gs,Hs,qs,Ks,Xs,Qs,Ys,Oi,Za,Zs,ti,ci,di,pi,bi,Ei,_i,Ri,Mi,Pi,Bi,Wi,Vi,Gi,Ki,Qi,$a,Zi,Ss,$i,ec,rc,eo,sc,uc,dc,fc,bc,vc,wc,Ic,Sc,Nc,_c,Rc,Dc,Fc,Mc,zc,Cc,Bc,Wc,Gc,Hc,Xc,Zc,xi,$c,eu,ru,ou,cu,uu,hu,fu,mu,yu,oo,xu,ku,bo,Iu,io,uo,No,Su,Nu,Tu,ju,Cu,Eu,_u,Fu,zu,Lu,Vu,Gu,qu,Xu,Qu,ds,Qc,$u,tl,el,nl,al,ol,cl,ll,hl,Ti,Pc,fl,bl,yl,xl,Po,kl,Ol,Il,du];for(const Xy of Sl)Object(a.registerKernel)(Xy);const Nl={},Tl={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function jl(t){if(!(t in Nl)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!==typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);if(e.addEventListener("webglcontextlost",e=>{e.preventDefault(),delete Nl[t]},!1),1===t)return e.getContext("webgl",Tl)||e.getContext("experimental-webgl",Tl);return e.getContext("webgl2",Tl)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;Nl[t]=e}const e=Nl[t];return e.isContextLost()?(delete Nl[t],jl(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Nl[t])}var Cl,El,Al;function _l(t,e){return[e,t]}function Rl(t){const e=a.util.sizeFromShape(t),n=Math.ceil(e/4);return a.util.sizeToSquarishShape(n)}function Dl(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Fl(t,e){const n=t;let r,o,s,i,c,u,l,d,h,p;return 2===Object(a.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,o=n.R16F,s=n.RGBA16F,i=n.RGBA32F,c=n.RED,l=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=t.RGBA,o=t.RGBA,s=t.RGBA,i=n.RGBA,c=t.RGBA,l=4,d=4,h=null!=e?e.HALF_FLOAT_OES:null,p=t.FLOAT),u=t.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:c,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function Ml(t,e){const n=e();return Object(a.env)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(e)}}(t,e))}(t),n}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(Cl||(Cl={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(El||(El={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Al||(Al={}));function zl(t){return!!(Object(a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function Ll(t,e){return Kl(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Pl(t,e){const n=Kl(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ml(t,()=>t.shaderSource(n,e)),Ml(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=Bl.exec(e);if(null==n)return console.log("Couldn't parse line number in error: ".concat(e)),void console.log(t);const r=+n[1],o=t.split("\n"),s=o.length.toString().length+2,i=o.map((t,e)=>a.util.rightPad((e+1).toString(),s)+t);let c=0;for(let a=0;a<i.length;a++)c=Math.max(i[a].length,c);const u=i.slice(0,r-1),l=i.slice(r-1,r),d=i.slice(r);console.log(u.join("\n")),console.log(e.split("\n")[0]),console.log("%c ".concat(a.util.rightPad(l[0],c)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Bl=/ERROR: [0-9]+:([0-9]+):/g;function Wl(t,e){if(Ml(t,()=>t.validateProgram(e)),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Vl(t,e,n,r,a,o,s){const i=t.getAttribLocation(e,n);return-1!==i&&(Ml(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Ml(t,()=>t.vertexAttribPointer(i,a,t.FLOAT,!1,o,s)),Ml(t,()=>t.enableVertexAttribArray(i)),!0)}function Ul(t,e,n,r){Ml(t,()=>function(t,e,n){Xl(t,n),Ml(t,()=>t.activeTexture(t.TEXTURE0+n)),Ml(t,()=>t.bindTexture(t.TEXTURE_2D,e))}(t,e,r)),Ml(t,()=>t.uniform1i(n,r))}function Gl(t,e,n){Ml(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),Ml(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function Hl(t,e){Ml(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),Ml(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function ql(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(e)}}(t,e))}function Kl(t,e,n){const r=Ml(t,()=>e());if(null==r)throw new Error(n);return r}function Xl(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){const t="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(t,"."))}}function Yl(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return a.util.sizeFromShape(t.slice(0,t.length-e))}function Ql(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Zl(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Yl(t),...Ql(t)]),e}function Jl(t){return t%2===0}function $l(t,e){if(t=t.slice(-2),e=e.slice(-2),a.util.arraysEqual(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Jl(n)&&Jl(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Jl(t[0])&&Jl(e[0])}let td,ed;function nd(t,e){return null!=t.getExtension(e)}function rd(t){try{if(null!=jl(t))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ad(t){if(0===t)return!1;const e=jl(t);if(1!==t){if(nd(e,"EXT_color_buffer_float"))return od(e);const t="EXT_color_buffer_half_float";if(nd(e,t)){const n=e.getExtension(t);return function(t,e){const n=Fl(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(a),o}(e,n)}return!1}if(!nd(e,"OES_texture_float"))return!1;if(!nd(e,"WEBGL_color_buffer_float"))return!1;return od(e)}function od(t){const e=Fl(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),a}function sd(t,e){Array.isArray(t)||(t=[t]),t.forEach(t=>{null!=t&&a.util.assert("complex64"!==t.dtype,()=>"".concat(e," does not support complex64 tensors ")+"in the WebGL backend.")})}const id=Object(a.env)();function cd(){let t,e,n,r,o,s,i,c,u,l;return 2===Object(a.env)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",r="in",o="texture",s="outputColor",i="out vec4 outputColor;",c="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",r="varying",o="texture2D",s="gl_FragColor",i="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:o,output:s,defineOutput:i,defineSpecialNaN:c,defineSpecialInf:u,defineRound:l}}function ud(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const r=a.util.computeStrides(e);return r.map((e,a)=>{const o="int ".concat(t[a]," = ").concat(n," / ").concat(e),s=a===r.length-1?"int ".concat(t[a+1]," = ").concat(n," - ").concat(t[a]," * ").concat(e):"index -= ".concat(t[a]," * ").concat(e);return"".concat(o,"; ").concat(s,";")}).join("")}function ld(t){const e=a.util.computeStrides(t).map(t=>t.toString());return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(e[0]," + coords.y * ").concat(e[1]," + coords.z;\n  }\n")}id.registerFlag("HAS_WEBGL",()=>id.getNumber("WEBGL_VERSION")>0),id.registerFlag("WEBGL_VERSION",()=>rd(2)?2:rd(1)?1:0),id.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),id.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===id.get("WEBGL_VERSION")),id.registerFlag("WEBGL_CPU_FORWARD",()=>!0),id.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),id.registerFlag("WEBGL_PACK",()=>id.getBool("HAS_WEBGL")),id.registerFlag("WEBGL_PACK_NORMALIZATION",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_PACK_CLIP",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>!1),id.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_PACK_REDUCE",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_LAZILY_UNPACK",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_CONV_IM2COL",()=>id.getBool("WEBGL_PACK")),id.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(t){if(null==td){const e=jl(t);td=e.getParameter(e.MAX_TEXTURE_SIZE)}return td}(id.getNumber("WEBGL_VERSION"))),id.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(t){if(null==ed){const e=jl(t);ed=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ed)}(id.getNumber("WEBGL_VERSION"))),id.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=id.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=jl(t);return e=nd(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:nd(n,"EXT_disjoint_timer_query")?1:0,e}(t)}),id.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>id.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!a.device_util.isMobile()),id.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(t){if(0===t)return!1;const e=jl(t);if(1===t){if(!nd(e,"OES_texture_float"))return!1}else if(!nd(e,"EXT_color_buffer_float"))return!1;return od(e)}(id.getNumber("WEBGL_VERSION"))),id.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!id.getBool("WEBGL_FORCE_F16_TEXTURES")&&id.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),id.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>ad(id.getNumber("WEBGL_VERSION"))),id.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(t=id.getNumber("WEBGL_VERSION"))&&null!=jl(t).fenceSync;var t}),id.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>id.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),id.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(t<0&&-1!==t)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(t,"."))});const dd="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class hd{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Cl.DENSE;const e=Rl(t),n=cd();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(ud(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class pd{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Cl.DENSE;const e=Rl(t),n=cd();this.outputShape=t,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(ud(["r","c","d"],t),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(").concat(e[0],", ").concat(e[1],"));\n        int index = 4 * (resTexRC.x * ").concat(e[1]," + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(n.output," = result;\n      }\n    ")}}class fd{constructor(t){this.variableNames=["A"],this.outTexUsage=El.DOWNLOAD;const e=cd();this.outputShape=t,this.userCode="\n      ".concat(dd,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class md{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=El.DOWNLOAD;const e=cd();this.outputShape=t,this.userCode="\n      ".concat(dd,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(e.output," = encode_float(x);\n      }\n    ")}}class bd{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"];const r=cd(),[a,o]=e;this.outputShape=t;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode="\n      ".concat(ld(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ").concat(o,";\n        int c = imod(flatIndex, ").concat(o,");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(").concat(o,".0, ").concat(a,".0);\n        vec4 values = ").concat(r.texture2D,"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ").concat(r.output," = vec4(").concat(s,", 0., 0., 0.);\n      }\n    ")}}class gd{constructor(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=cd(),[a,o]=e;this.outputShape=t;let s="",i="result";n&&(i="floor(result * 255. + 0.5)");for(let c=0;c<=1;c++)for(let e=0;e<=1;e++){const n=2*c+e;s+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(e," < ").concat(t[2],") {\n            localCoords[2] += ").concat(e,";\n            if(localCoords[1] + ").concat(c," < ").concat(t[1],") {\n              localCoords[1] += ").concat(c,";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ").concat(o,";\n              c = imod(flatIndex, ").concat(o,");\n              uv = (vec2(c, r) + halfCR) / vec2(").concat(o,".0, ").concat(a,".0);\n              values = ").concat(r.texture2D,"(A, uv);\n\n              if(offset == 0) {\n                result[").concat(n,"] = values[0];\n              } else if(offset == 1) {\n                result[").concat(n,"] = values[1];\n              } else if(offset == 2) {\n                result[").concat(n,"] = values[2];\n              } else {\n                result[").concat(n,"] = values[3];\n              }\n            }\n          }\n        ")}this.userCode="\n      ".concat(ld(t),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ").concat(s,"\n\n        ").concat(r.output," = ").concat(i,";\n      }\n    ")}}function yd(t){const e=cd();return function(t,e){const n=Kl(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ml(t,()=>t.shaderSource(n,e)),Ml(t,()=>t.compileShader(n)),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,"".concat(e.version,"\n    precision highp float;\n    ").concat(e.attribute," vec3 clipSpacePos;\n    ").concat(e.attribute," vec2 uv;\n    ").concat(e.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function vd(t){return function(t,e){const n=Kl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ml(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Ml(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function xd(t){return function(t,e){const n=Kl(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ml(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),Ml(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}(t,new Uint16Array([0,1,2,2,1,3]))}function wd(t,e,n,r,o,s){!function(t,e){const n=Object(a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const n="[".concat(t,"x").concat(e,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(t>n||e>n){const r="[".concat(t,"x").concat(e,"]"),a="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}(e,n);const i=function(t){return Kl(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}(t),c=t.TEXTURE_2D;return Ml(t,()=>t.bindTexture(c,i)),Ml(t,()=>t.texParameteri(c,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),Ml(t,()=>t.texParameteri(c,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),Ml(t,()=>t.texParameteri(c,t.TEXTURE_MIN_FILTER,t.NEAREST)),Ml(t,()=>t.texParameteri(c,t.TEXTURE_MAG_FILTER,t.NEAREST)),Ml(t,()=>t.texImage2D(c,0,r,e,n,0,o,s,null)),Ml(t,()=>t.bindTexture(t.TEXTURE_2D,null)),i}function kd(t){return t.internalFormatFloat}function Od(t){return t.internalFormatHalfFloat}function Id(t){return t.downloadTextureFormat}function Sd(t){return t.internalFormatPackedFloat}function Nd(t){return t.internalFormatPackedHalfFloat}function Td(t,e,n,r,a,o,s,i){const c=t,u=new Float32Array(function(t,e){const[n,r]=Dl(t,e);return n*r*4}(o,s));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}class jd{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Object(a.env)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){Nl[t]=e}(e,t)):this.gl=jl(e);let n="WEBGL_color_buffer_float";if(1===Object(a.env)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=Ll(this.gl,t),nd(this.gl,e))this.textureHalfFloatExtension=Ll(this.gl,e);else if(Object(a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),nd(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=Ll(this.gl,"EXT_color_buffer_half_float");else if(Object(a.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",nd(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!nd(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=vd(this.gl),this.indexBuffer=xd(this.gl),this.framebuffer=function(t){return Kl(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Fl(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(a.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Ml(t,()=>t.finish()),Ml(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ml(t,()=>t.deleteFramebuffer(this.framebuffer)),Ml(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ml(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ml(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=_l(e,n);return wd(t,a,o,kd(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=_l(e,n);return wd(t,a,o,Od(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=_l(e,n);return wd(t,a,o,Id(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){Ml(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?Ml(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):Ml(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),Ml(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,a,o){let s,i,c;Ml(t,()=>t.bindTexture(t.TEXTURE_2D,e)),a instanceof Uint8Array?(s=new Uint8Array(n*r*4),i=t.UNSIGNED_BYTE,c=t.RGBA):(s=new Float32Array(n*r*4),i=t.FLOAT,c=o.internalFormatPackedFloat),s.set(a),Ml(t,()=>t.texImage2D(t.TEXTURE_2D,0,c,n,r,0,t.RGBA,i,s)),Ml(t,()=>t.bindTexture(t.TEXTURE_2D,null))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=Dl(e,n);return wd(t,a,o,Nd(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[a,o]=Dl(e,n);return wd(t,a,o,Sd(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(Hl(this.gl,this.framebuffer),this.outputTexture=null),Ml(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n,r){const[a,o]=_l(e,n),s=new Uint8Array(e*n*4);return Ml(t,()=>t.readPixels(0,0,a,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,s)),new Float32Array(s.buffer)}(this.gl,e,n,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,n,r,a,o){return Td(this.gl,t,0,0,0,a,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const a=t.createBuffer();Ml(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,a));const o=16*e*n;return Ml(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ)),Ml(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),Ml(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),a}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if(Object(a.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(a,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=a}else Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,()=>function(t,e,n){const r=new Float32Array(e*n*4);return Ml(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}(this.gl,e,n))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=Pl(e,t),r=yd(e),a=function(t){return Kl(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}(e);return Ml(e,()=>e.attachShader(a,r)),Ml(e,()=>e.attachShader(a,n)),function(t,e){if(Ml(t,()=>t.linkProgram(e)),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,a),this.debug&&Wl(e,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(t,e,n){return Ml(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),Vl(t,e,"clipSpacePos",n,3,20,0)&&Vl(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),a}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Ml(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&Wl(this.gl,this.program),Ml(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(t,e,n){return Kl(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Ml(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),Ul(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,a]=Dl(e,n);this.setOutputMatrixTextureDriver(t,r,a)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Wl(this.gl,this.program),ql(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ml(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ml(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Ll(this.gl,2===Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await a.util.repeatedTry(()=>this.disposed||this.isQueryAvailable(t,Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(t){let e=0;for(;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||a.util.repeatedTry(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Gl(this.gl,t,this.framebuffer),this.debug&&ql(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Gl(this.gl,this.outputTexture,this.framebuffer),this.debug&&ql(this.gl)):Hl(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;Gl(r,t,this.framebuffer),this.debug&&ql(r),this.outputTexture=t,Ml(r,()=>r.viewport(0,0,e,n)),Ml(r,()=>r.scissor(0,0,e,n))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),Ml(this.gl,()=>this.gl.scissor(t,e,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Cd}=a.backend_util;function Ed(t,e,n,r){const o=[];t.forEach(t=>{const e=a.util.sizeFromShape(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?o.push("uniform float ".concat(t.name).concat(e>1?"[".concat(e,"]"):"",";")):(o.push("uniform sampler2D ".concat(t.name,";")),o.push("uniform int offset".concat(t.name,";")))});const s=o.join("\n"),i=t.map(t=>function(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r="";r+=n?_d(t):Ad(t);const a=t.shapeInfo.logicalShape,o=e.logicalShape;a.length<=o.length&&(r+=n?Pd(t,e):Bd(t,e));return r}(t,e,r)).join("\n"),c=e.texShape,u=cd(),l=function(t){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(t.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(u);let d,h,p=function(t){return"".concat(t.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(t.varyingFs," vec2 resultUV;\n    ").concat(t.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(t.defineSpecialNaN,"\n    ").concat(t.defineSpecialInf,"\n    ").concat(t.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(Rd,"\n    ").concat(Dd,"\n    ").concat(Fd,"\n  ")}(u);e.isPacked?(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(n[1],".0);\n      }\n    ");if(1===n[1])return"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(n[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      return 2 * (resTexRC.x * ").concat(n[1]," + resTexRC.y);\n    }\n  ")}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(a.util.arraysEqual(t,e))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(n[0],", ").concat(n[1],"));\n      }\n    ");const r=Math.ceil(t[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),a=r*Math.ceil(t[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      int b = index / ").concat(a,";\n      index -= b * ").concat(a,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),a=r*Math.ceil(t[t.length-2]/2);let o=a,s="",i="b, r, c";for(let c=2;c<t.length-1;c++)o*=t[t.length-c-1],s="\n      int b".concat(c," = index / ").concat(o,";\n      index -= b").concat(c," * ").concat(o,";\n    ")+s,i="b".concat(c,", ")+i;return"\n    ivec".concat(t.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(n[0],", ").concat(n[1],"));\n      int index = resTexRC.x * ").concat(n[1]," + resTexRC.y;\n\n      ").concat(s,"\n\n      int b = index / ").concat(a,";\n      index -= b * ").concat(a,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(t.length,"(").concat(i,");\n    }\n  ")}(t,e)}}(e.logicalShape,c),h=function(t){return"\n    void setOutput(vec4 val) {\n      ".concat(t.output," = val;\n    }\n  ")}(u)):(d=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){if(1===e[0])return"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(e[1],".0);\n      }\n    ");if(1===e[1])return"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(e[0],".0);\n      }\n    ");return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      return resTexRC.x * ").concat(e[1]," + resTexRC.y;\n    }\n  ")}(0,e);case 2:return function(t,e){if(a.util.arraysEqual(t,e))return"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(e[0],", ").concat(e[1],"));\n      }\n    ");if(1===t[1])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===t[0])return"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(e[0],", ").concat(e[1],"));\n        int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      int r = index / ").concat(t[1],";\n      int c = index - r * ").concat(t[1],";\n      return ivec2(r, c);\n    }\n  ")}(t,e);case 3:return function(t,e){const n=ud(["r","c","d"],t);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,e);case 4:return function(t,e){const n=ud(["r","c","d","d2"],t);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n      ").concat(n,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(t,e);case 5:return function(t,e){const n=ud(["r","c","d","d2","d3"],t);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(e[0],",\n                             ").concat(e[1],"));\n\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(t,e);case 6:return function(t,e){const n=ud(["r","c","d","d2","d3","d4"],t);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(e[0],", ").concat(e[1],"));\n      int index = resTexRC.x * ").concat(e[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(t,e);default:throw new Error("".concat(t.length,"-D output sampling is not yet supported"))}}(e.logicalShape,c),h=function(t){return"\n    void setOutput(float val) {\n      ".concat(t.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(u)),r&&(p+=Md);return[p,l,h,s,d,i,n].join("\n")}function Ad(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"float ".concat(n,"() {return ").concat(e,";}");const[r,a]=t.shapeInfo.texShape;if(1===r&&1===a)return"\n      float ".concat(n,"() {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const[o,s]=t.shapeInfo.texShape,i=zd(e);return"\n    float ".concat(n,"() {\n      vec2 uv = uvFromFlat(").concat(o,", ").concat(s,", ").concat(i,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return"\n      float ".concat(n,"(int index) {\n        ").concat(Ld(t),"\n      }\n    ");const r=t.shapeInfo.texShape,a=r[0],o=r[1];if(1===o&&1===a)return"\n      float ".concat(n,"(int index) {\n        return sampleTexture(").concat(e,", halfCR);\n      }\n    ");const s=zd(e);if(1===o)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(s,") + 0.5) / ").concat(a,".0);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");if(1===a)return"\n      float ".concat(n,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(s,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(e,", uv);\n      }\n    ");return"\n    float ".concat(n,"(int index) {\n      vec2 uv = uvFromFlat(").concat(a,", ").concat(o,", index + ").concat(s,");\n      return sampleTexture(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape;if(null!=o&&a.util.arraysEqual(e,o)){const t=o[0],e=o[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(e,".0, ").concat(t,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}const{newShape:s,keptDims:i}=a.util.squeezeShape(e),c=s;if(c.length<e.length){const e=Vd(t,c),n=["row","col"];return"\n      ".concat(Ad(e),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(Ud(n,i),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(e[1],", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const u=o[0],l=o[1],d=zd(n);if(1===l)return"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(u,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");if(1===u)return"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(e[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(l,".0, 0.5);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");return"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(e[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(u,", ").concat(l,", index);\n    return sampleTexture(").concat(n,", uv);\n  }\n")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[1]*e[2],s=e[2],{newShape:i,keptDims:c}=a.util.squeezeShape(e),u=i;if(u.length<e.length){const e=Vd(t,u),n=["row","col","depth"];return"\n        ".concat(Ad(e),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(Ud(n,c),");\n        }\n      ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(o,", ").concat(s,", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const l=t.shapeInfo.texShape,d=l[0],h=l[1],p=t.shapeInfo.flatOffset;if(h===o&&null==p)return"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(s,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(h,".0, ").concat(d,".0);\n          return sampleTexture(").concat(n,", uv);\n        }\n      ");if(h===s&&null==p)return"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(e[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(h,".0, ").concat(d,".0);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const f=zd(n);return"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(o," + col * ").concat(s," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(h,", index);\n        return sampleTexture(").concat(n,", uv);\n      }\n  ")}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[3],s=e[2]*o,i=e[1]*s,{newShape:c,keptDims:u}=a.util.squeezeShape(e);if(c.length<e.length){const e=Vd(t,c),n=["row","col","depth","depth2"];return"\n      ".concat(Ad(e),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(Ud(n,u),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(s,", ").concat(o,", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const l=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&null==l)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(s,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===o&&null==l)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(e[1]*e[2],", ").concat(e[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=zd(n);return"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(s," +\n          depth * ").concat(o," + depth2;\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index + ").concat(f,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[4],s=e[3]*o,i=e[2]*s,c=e[1]*i,{newShape:u,keptDims:l}=a.util.squeezeShape(e);if(u.length<e.length){const e=Vd(t,u),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(Ad(e),"\n      float ").concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(r,"(").concat(Ud(n,l),");\n      }\n    ")}if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(c,", ").concat(i,", ").concat(s,", ").concat(o,")) +\n          depth3;\n        ").concat(Ld(t),"\n      }\n    ");const d=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(i,", ").concat(s,", ").concat(o,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==d)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3],",\n               ").concat(e[2]*e[3],", ").concat(e[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=zd(n);return"\n    float ".concat(r,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(c," + col * ").concat(i," + depth * ").concat(s," +\n          depth2 * ").concat(o," + depth3 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:s}=a.util.squeezeShape(e);if(o.length<e.length){const e=Vd(t,o),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(Ad(e),"\n      float ").concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(r,"(").concat(Ud(n,s),");\n      }\n    ")}const i=e[5],c=e[4]*i,u=e[3]*c,l=e[2]*u,d=e[1]*l;if(t.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(d,", ").concat(l,", ").concat(u,", ").concat(c,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(i,", 1)));\n        ").concat(Ld(t),"\n      }\n    ");const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],m=p[1];if(m===d&&null==h)return"\n      float ".concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(u,", ").concat(c,", ").concat(i,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(m===i&&null==h)return"\n      float ".concat(r,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(e[1]*e[2]*e[3]*e[4],",\n               ").concat(e[2]*e[3]*e[4],",\n               ").concat(e[3]*e[4],",\n               ").concat(e[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(m,".0, ").concat(f,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const b=zd(n);return"\n    float ".concat(r,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(d," + col * ").concat(l," + depth * ").concat(u," +\n          depth2 * ").concat(c," + depth3 * ").concat(i," + depth4 + ").concat(b,";\n      vec2 uv = uvFromFlat(").concat(f,", ").concat(m,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}(t);default:throw new Error("".concat(e.length,"-D input sampling")+" is not yet supported")}}function _d(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=cd();return"\n    vec4 ".concat(n,"() {\n      return ").concat(r.texture2D,"(").concat(e,", halfCR);\n    }\n  ")}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],o=cd();return"\n    vec4 ".concat(n,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(a[0],", ").concat(a[1],", index);\n      return ").concat(o.texture2D,"(").concat(e,", uv);\n    }\n  ")}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,s=o[0],i=o[1],c=cd();if(null!=o&&a.util.arraysEqual(e,o))return"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(s,".0);\n\n        return ").concat(c.texture2D,"(").concat(n,", uv);\n      }\n    ");const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(e[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(l,", ").concat(u[0],", ").concat(u[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t.shapeInfo.texShape,o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===e[0]){const n=e.slice(1),a=[1,2],o=Vd(t,n),s=["b","row","col"];return"\n        ".concat(_d(o),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(Ud(s,a),");\n        }\n      ")}const s=o[0],i=o[1],c=Math.ceil(e[2]/2),u=c*Math.ceil(e[1]/2),l=cd();return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(s,", ").concat(i,", ").concat(u,", ").concat(c,", b, row, col);\n      return ").concat(l.texture2D,"(").concat(n,", uv);\n    }\n  ")}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],i=s[0],c=s[1],u=Math.ceil(e[n-1]/2);let l=u*Math.ceil(e[n-2]/2),d="int b, int row, int col",h="b * ".concat(l," + (row / 2) * ").concat(u," + (col / 2)");for(let f=2;f<n-1;f++)d="int b".concat(f,", ")+d,l*=e[n-f-1],h="b".concat(f," * ").concat(l," + ")+h;const p=cd();return"\n    vec4 ".concat(a,"(").concat(d,") {\n      int index = ").concat(h,";\n      int texR = index / ").concat(c,";\n      int texC = index - texR * ").concat(c,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(c,", ").concat(i,");\n      return ").concat(p.texture2D,"(").concat(r,", uv);\n    }\n  ")}(t)}}const Rd="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Dd="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Fd="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Md="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function zd(t){return"offset".concat(t)}function Ld(t){const e=t.name,n=a.util.sizeFromShape(t.shapeInfo.logicalShape);return n<2?"return ".concat(e,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(e,"[i];\n      }\n    }\n  ")}function Pd(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",s=t.shapeInfo.logicalShape.length,i=e.logicalShape.length,c=Cd(t.shapeInfo.logicalShape,e.logicalShape),u=Wd(i),l=i-s;let d;const h=["x","y","z","w","u","v"];d=0===s?"":i<2&&c.length>=1?"coords = 0;":c.map(t=>"coords.".concat(h[t+l]," = 0;")).join("\n");let p="";p=i<2&&s>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords.".concat(h[e+l])).join(", ");let f="return outputValue;";const m=1===a.util.sizeFromShape(t.shapeInfo.logicalShape),b=1===a.util.sizeFromShape(e.logicalShape);if(1!==s||m||b){if(m&&!b)f=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(c.length){const t=s-2,e=s-1;c.indexOf(t)>-1&&c.indexOf(e)>-1?f="return vec4(outputValue.x);":c.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":c.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(o,"() {\n      ").concat(u," coords = getOutputCoords();\n      ").concat(d,"\n      vec4 outputValue = get").concat(r,"(").concat(p,");\n      ").concat(f,"\n    }\n  ")}function Bd(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o="get"+r+"AtOutCoords",s=e.texShape,i=t.shapeInfo.texShape,c=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&c===u&&null==t.shapeInfo.flatOffset&&a.util.arraysEqual(i,s))return"\n      float ".concat(o,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=Wd(u),d=Cd(t.shapeInfo.logicalShape,e.logicalShape),h=u-c;let p;const f=["x","y","z","w","u","v"];p=0===c?"":u<2&&d.length>=1?"coords = 0;":d.map(t=>"coords.".concat(f[t+h]," = 0;")).join("\n");let m="";return m=u<2&&c>0?"coords":t.shapeInfo.logicalShape.map((t,e)=>"coords.".concat(f[e+h])).join(", "),"\n    float ".concat(o,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(p,"\n      return get").concat(r,"(").concat(m,");\n    }\n  ")}function Wd(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error("GPU for rank ".concat(t," is not yet supported"))}function Vd(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Ud(t,e){return e.map(e=>t[e]).join(", ")}function Gd(t,e){if(t.length!==e.length)throw Error("Binary was compiled with ".concat(t.length," inputs, but ")+"was executed with ".concat(e.length," inputs"));t.forEach((t,n)=>{const r=t.logicalShape,o=e[n],s=o.shape;if(!a.util.arraysEqual(r,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(r," and ").concat(s," must match"));if(t.isUniform&&o.isUniform)return;const i=t.texShape,c=o.isUniform?null:o.texData.texShape;if(!a.util.arraysEqual(i,c))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(i," and ").concat(c," must match"))})}const{addImpl:Hd,bincountImpl:qd,bincountReduceImpl:Kd,ceilImpl:Xd,concatImpl:Yd,expImpl:Qd,expm1Impl:Zd,floorImpl:Jd,gatherV2Impl:$d,greaterImpl:th,lessImpl:eh,linSpaceImpl:nh,logImpl:rh,maxImpl:ah,maximumImpl:oh,minimumImpl:sh,multiplyImpl:ih,negImpl:ch,prodImpl:uh,rangeImpl:lh,rsqrtImpl:dh,simpleAbsImpl:hh,sliceImpl:ph,stridedSliceImpl:fh,subImpl:mh,tileImpl:bh,topKImpl:gh,transposeImpl:yh,uniqueImpl:vh}=r;function xh(t,e){return["x","y","z","w","u","v"].slice(0,e).map(e=>"".concat(t,".").concat(e))}function wh(t,e){return 1===e?[t]:xh(t,e)}class kh{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=wh("rc",e),r=Wd(e),a=function(t,e,n){if(1===t)return"rc > ".concat(e[0]);let r="";for(let a=t-2;a<t;a++)r+="".concat(n[a]," >= ").concat(e[a]),a<t-1&&(r+="||");return r}(e,t,n),o=function(t,e,n,r){if(1===t)return"";const a=r.slice(-2);return"\n    int r = ".concat(a[0],";\n    int c = ").concat(a[1],";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ").concat(e,";\n    bool rEdge = rp1 >= ").concat(n,";\n  ")}(e,t[t.length-1],t[t.length-2],n),s=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let o="".concat(0===r?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let n=2;n<t;n++)o="".concat(e[e.length-1-n],",")+o;n.push(o)}return n}(n,e);if(1===n)return"getA(rc),\n            rc + 1 >= ".concat(t[0]," ? 0. : getA(rc + 1),\n            0, 0");return"getA(".concat(r[0],"),\n          cEdge ? 0. : getA(").concat(r[1],"),\n          rEdge ? 0. : getA(").concat(r[2],"),\n          rEdge || cEdge ? 0. : getA(").concat(r[3],")")}(t,n);this.userCode="\n        void main() {\n          ".concat(r," rc = getOutputCoords();\n\n          if(").concat(a,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(o,"\n\n            setOutput(vec4(").concat(s,"));\n          }\n        }\n      ")}}}class Oh{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let r=0;r<4;r++){let t="thisRC = rc;";r%2===1&&(t+="thisRC.z += 1;"),r>1&&(t+="thisRC.y += 1;"),n+="\n        ".concat(t,"\n        ").concat(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(r,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(r>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(t){const e=ud(["r","c","d"],t);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(e,"\n      return ivec3(r, c, d);\n    }\n  ")}(e),"\n      ").concat(ld(t),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(t[1],";\n        int cols = ").concat(t[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class Ih{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=Nh(e,n),a=Th(t,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const o=Sh(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const t=this.freeTextures[a].shift();return this.usedTextures[a].push(t),t}let s;return r===Al.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===Al.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===Al.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===Al.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===Al.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(t,e,n,r){if(null==this.freeTextures)return;const o=Nh(n,r),s=Th(e,o,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=Sh(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=Object(a.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==c&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=i):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(t,")"));const e=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*e),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const t in this.usedTextures)this.usedTextures[t].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Sh(t,e,n,r,a){const o=function(t,e){switch(t){case Al.PACKED_2X2_FLOAT32:return Sd(e);case Al.PACKED_2X2_FLOAT16:return Nd(e);case Al.UNPACKED_FLOAT32:return kd(e);case Al.UNPACKED_FLOAT16:return Od(e);case Al.PACKED_4X1_UNSIGNED_BYTE:return Id(e);default:throw new Error("Unknown physical texture type ".concat(t))}}(e,r);let s;if(a){const[e,n]=Dl(t[0],t[1]);s=e*n}else{const[e,n]=_l(t[0],t[1]);s=e*n}return s*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error("Unknown internal format ".concat(e))}(n,o)}function Nh(t,e){if(t===El.UPLOAD)return Al.PACKED_2X2_FLOAT32;if(t===El.RENDER||null==t)return function(t){return Object(a.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Al.PACKED_2X2_FLOAT32:Al.UNPACKED_FLOAT32:t?Al.PACKED_2X2_FLOAT16:Al.UNPACKED_FLOAT16}(e);if(t===El.DOWNLOAD||t===El.PIXELS)return Al.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(t))}function Th(t,e,n){return"".concat(t[0],"_").concat(t[1],"_").concat(e,"_").concat(n)}class jh{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      float unaryOperation(float x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const Ch="if (isnan(x)) return x;",Eh="return abs(x);";const Ah=Ch+"\n  return (x < 0.0) ? 0.0 : x;\n",_h=Ch+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Rh="return x;",Dh="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Fh="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Mh="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";class zh{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class Lh{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=wh("rc",e),r=Wd(e),a=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),o=n.slice(-2),s=e<=1?"rc":"vec2(".concat(o.join(","),")");this.userCode="\n      void main() {\n        ".concat(r," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(a,");\n\n        setOutput(getChannel(packedInput, ").concat(s,"));\n      }\n    ")}}const Ph=a.kernel_impls.whereImpl,Bh={};class Wh extends a.KernelBackend{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(a.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=jl(Object(a.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=Object(a.env)().getNumber("WEBGL_VERSION"))in Bh||(Bh[e]={}),Bh[e]),this.gpgpu=new jd(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new Ih(this.gpgpu),this.numMBBeforeWarning=null==Object(a.env)().global.screen?1024:Object(a.env)().global.screen.height*Object(a.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a.DataStorage(this,Object(a.engine)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if((Object(a.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(a.env)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={};return this.texData.set(r,{shape:e,dtype:n,values:t,usage:El.UPLOAD,refCount:1,complexParentRefCount:0}),r}incRef(t){this.texData.get(t).refCount++}decRef(t){if(this.texData.has(t)){this.texData.get(t).refCount--}}decComplexRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.complexParentRefCount>0&&e.refCount--}}move(t,e,n,r){if(Object(a.env)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:r,values:e,usage:El.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:r,complexTensorInfos:o,slice:s,shape:i,isPacked:c}=e;if(null!=s){let e;e=c?new zh(i,Rh):new jh(i,Rh);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===r)return n;const u=null!=this.activeTimers;let l,d;if(u&&(l=a.util.now()),"complex64"===r){const t=this.readSync(o.real.dataId),e=this.readSync(o.imag.dataId);d=a.backend_util.mergeRealAndImagArrays(t,e)}else d=this.getValuesFromTexture(t);return u&&(this.downloadWaitMs+=a.util.now()-l),this.convertAndCacheOnCPU(t,d)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise(t=>e.push(t))}const e=this.texData.get(t),{values:n,shape:r,slice:o,dtype:s,complexTensorInfos:i,isPacked:c}=e;if(null!=o){let e;e=c?new zh(r,Rh):new jh(r,Rh);const n=this.runWebGLProgram(e,[{dataId:t,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(t);if(!Object(a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(a.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,d=null;if("complex64"!==s&&Object(a.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(t);const e=this.texData.get(u.dataId);d=this.gpgpu.createBufferFromTexture(e.texture,...Rl(r))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),e=t[0],n=t[1];l=a.backend_util.mergeRealAndImagArrays(e,n)}else if(null==d)l=this.getValuesFromTexture(t);else{const t=a.util.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(d,t)}null!=u&&this.disposeIntermediateTensorInfo(u);const h=this.convertAndCacheOnCPU(t,l),p=this.pendingRead.get(t);return this.pendingRead.delete(t),p.forEach(t=>t(h)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),h}bufferSync(t){const e=this.readSync(t.dataId);let n=e;if("string"===t.dtype)try{n=e.map(t=>a.util.decodeString(t))}catch(r){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(a.buffer)(t.shape,t.dtype,n)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!zl(n)){if(Object(a.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:r}=this.texData.get(t),o=a.util.sizeFromShape(e);if(Object(a.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Rl(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(n),a}const s=Object(a.env)().getBool("WEBGL_PACK")&&!0===r,i=s?Zl(e):e,c=s?new md(i):new fd(i),u=this.runWebGLProgram(c,[{shape:i,dtype:n,dataId:t}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),d}async time(t){const e=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t();const o=a.util.flatten(this.activeTimers.map(t=>t.query)).filter(t=>null!=t),s=a.util.flatten(this.activeTimers.map(t=>t.name)).filter(t=>null!=t);this.activeTimers=e,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(o);i.kernelMs=a.util.sum(t),i.getExtraProfileInfo=()=>t.map((t,e)=>({name:s[e],ms:t})).map(t=>"".concat(t.name,": ").concat(t.ms)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:a.util.now(),endMs:null}}endTimer(t){return Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=a.util.now(),t)}async getQueryTime(t){if(Object(a.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:a,isPacked:o,slice:s}=this.texData.get(t),i=s&&s.origDataId||t,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,a,o)));const u=this.texData.get(t);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return Object(a.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(a.engine)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:128;const n=this.getCPUBackend();return Object(a.env)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every(t=>null==this.texData.get(t.dataId).texture&&a.util.sizeFromShape(t.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){a.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Ph(t.shape,e)}packedUnaryOp(t,e,n){const r=new zh(t.shape,e);return this.compileAndRun(r,[t],n)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=hh(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if(Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Eh,t.dtype);const e=new jh(t.shape,Eh);return this.compileAndRun(e,[t])}makeTensorInfo(t,e,n){let r;if("string"===e&&null!=n&&n.length>0&&a.util.isString(n[0])){const o=n.map(t=>a.util.encodeString(t));r=this.write(o,t,e)}else r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:r}=this.makeTensorInfo(t,e,n);return Object(a.engine)().makeTensorFromDataId(r,t,e,this)}unpackTensor(t){const e=new Lh(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new kh(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[Yl(t.shape),...Ql(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},a=[Yl(e),...Ql(e)],o=new Oh(a,n),s=this.runWebGLProgram(o,[r],t.dtype,null,!0);return{dataId:s.dataId,shape:e,dtype:s.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:a}=e,o=Zl(r);let s;s=n?new pd(o):new hd(o);return{dtype:a,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:a,dataId:t}],a,null,!0).dataId}}runWebGLProgram(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s=this.makeTensorInfo(t.outputShape,n),i=this.texData.get(s.dataId);if(t.packedOutput&&(i.isPacked=!0),t.outPackingScheme===Cl.DENSE){const e=Rl(t.outputShape);i.texShape=e.map(t=>2*t)}if(null!=t.outTexUsage&&(i.usage=t.outTexUsage),0===a.util.sizeFromShape(s.shape))return i.values=a.util.getTypedArrayFromDType(s.dtype,0),s;const c=[],u=e.map(e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&a.util.sizeFromShape(e.shape)<=Object(a.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!==!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),c.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!$l(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),c.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},d=function(t,e,n){let r="";e.concat(n).forEach(t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+="".concat(t.shape,"_").concat(n,"_").concat(e)});const a=t.userCode;let o=t.constructor.name;return o+="_"+r+"_"+a,o}(t,u,l),h=this.getAndSaveBinary(d,()=>function(t,e,n,r){const o=e.userCode,s=n.map((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=s.map(t=>t.shapeInfo),c={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Ed(s,c,o,e.packedInputs),l=t.createProgram(u);let d=null;const h=t.getUniformLocation(l,"NAN",!1);1===Object(a.env)().getNumber("WEBGL_VERSION")&&(d=t.getUniformLocation(l,"INFINITY",!1));const p={};for(let a=0;a<e.variableNames.length;a++){const n=e.variableNames[a],r=!1;p[n]=t.getUniformLocation(l,n,r),p["offset".concat(n)]=t.getUniformLocation(l,"offset".concat(n),r)}return{program:e,source:u,webGLProgram:l,uniformLocations:p,inShapeInfos:i,outShapeInfo:c,infLoc:d,nanLoc:h}}(this.gpgpu,t,u,l)),p=null!=this.activeTimers;let f;if(p&&(f=this.startTimer()),function(t,e,n,r,o){Gd(e.inShapeInfos,n),Gd([e.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(s,i[0],i[1]):t.setOutputMatrixTexture(s,i[0],i[1]),t.setProgram(e.webGLProgram),1===Object(a.env)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach((n,r)=>{const o=e.program.variableNames[r],s=e.uniformLocations[o],i=e.uniformLocations["offset".concat(o)];if(null!=s)if(n.isUniform)if(a.util.sizeFromShape(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,r)}),null!=o&&o(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,u,l,r),c.forEach(t=>this.disposeIntermediateTensorInfo(t)),p&&(f=this.endTimer(f),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(f)})),!Object(a.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===o){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,r){let o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||e[0].dtype;const s=this.runWebGLProgram(t,e,n,r,o);return Object(a.engine)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(a.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(a.tidy)(()=>{if(!Object(a.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Object(a.env)().getBool("DEBUG");Object(a.env)().set("DEBUG",!1);const e=this.abs(Object(a.scalar)(1e-8)).dataSync()[0];if(Object(a.env)().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:r,values:o,texture:s,usage:i,isPacked:c}=e;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=a.util.now());let d=e.texShape;if(null==d&&(d=function(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Object(a.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map((e,n)=>n>=t.length-2?a.util.nearestLargerEven(t[n]):t[n])).length&&(t=[2,t[0]])),2!==t.length){const e=a.util.squeezeShape(t);t=e.newShape}let r=a.util.sizeFromShape(t);if(t.length<=1&&r<=n)return[1,r];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=Yl(t);let n=2,o=2;return t.length&&([n,o]=Ql(t)),r=e*(n/2)*(o/2),a.util.sizeToSquarishShape(r).map(t=>2*t)}return a.util.sizeToSquarishShape(r)}(n,c),e.texShape=d),null!=o){const t=Zl(n);let s,i=d[1],h=d[0];const p=o instanceof Uint8Array;c?([i,h]=Dl(d[0],d[1]),s=new gd(t,[h,i],p)):s=new bd(t,[h,i],p);const f=this.makeTensorInfo([h,i],r);this.texData.get(f.dataId).usage=p?El.PIXELS:El.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,o);const m=!0,b=this.runWebGLProgram(s,[f],r,null,m),g=this.texData.get(b.dataId);e.texture=g.texture,e.texShape=g.texShape,e.isPacked=g.isPacked,e.usage=g.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),e.values=null,u&&(this.uploadWaitMs+=a.util.now()-l)}else{const t=this.acquireTexture(d,i,r,c);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error("Unknown dtype ".concat(e))}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(t," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*a.util.bytesPerElement(e)}}a.device_util.isBrowser()&&Object(a.registerBackend)("webgl",()=>new Wh,2);class Vh{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}class Uh{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a.backend_util.assertAndGetBroadcastShape(e,n);const o=this.outputShape.length;let s="";if(r)if(0===o||1===a.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const t=Wd(o);if(s="\n          ".concat(t," coords = getOutputCoords();\n        "),1===o)s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const t=wh("coords",o);s+="\n            bool nextRowOutOfBounds =\n              (".concat(t[o-2]," + 1) >= ").concat(this.outputShape[o-2],";\n            bool nextColOutOfBounds =\n              (").concat(t[o-1]," + 1) >= ").concat(this.outputShape[o-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function Gh(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Hh={kernelName:a.Identity,backendName:"webgl",kernelFunc:Gh};function qh(t){const{inputs:e,backend:n}=t,{real:r,imag:a}=e,o=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(o.dataId),i=Gh({inputs:{x:r},backend:n});n.texData.get(i.dataId).complexParentRefCount++;const c=Gh({inputs:{x:a},backend:n});return n.texData.get(c.dataId).complexParentRefCount++,s.complexTensorInfos={real:i,imag:c},o}const Kh={kernelName:a.Complex,backendName:"webgl",kernelFunc:qh},Xh="return (a < 0.) ? b * a : a;",Yh="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Qh={kernelName:a.LeakyRelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{alpha:s}=r,i=n.makeTensorInfo([],"float32",a.util.createScalarValue(s,"float32")),c=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Uh(Yh,o.shape,i.shape):new Vh(Xh,o.shape,i.shape),u=n.runWebGLProgram(c,[o,i],o.dtype);return n.disposeIntermediateTensorInfo(i),u}},Zh="return (a < 0.) ? b * a : a;",Jh="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const $h={kernelName:a.Prelu,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r,alpha:o}=e,s=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Uh(Jh,r.shape,o.shape):new Vh(Zh,r.shape,o.shape);return n.runWebGLProgram(s,[r,o],r.dtype)}};function tp(t){let{opSnippet:e,packedOpSnippet:n,cpuKernelImpl:r,dtype:o}=t;return t=>{let{inputs:s,backend:i}=t;const{x:c}=s,u=i,l=o||c.dtype;if(u.shouldExecuteOnCPU([c])&&null!=r){const t=u.texData.get(c.dataId),e=r(t.values,l);return u.makeTensorInfo(c.shape,l,e)}let d;return d=Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new zh(c.shape,n):new jh(c.shape,e),u.runWebGLProgram(d,[c],l)}}function ep(t){let{opSnippet:e,packedOpSnippet:n,checkOutOfBounds:r=!1,supportsComplex:o=!1,cpuKernelImpl:s,dtype:i}=t;return t=>{let{inputs:c,backend:u}=t;const{a:l,b:d}=c,h=u;if(o&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(d.dataId),[r,o]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,o={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:d.shape},i=new Vh(e,l.shape,d.shape);return h.runWebGLProgram(i,[o,s],Object(a.upcastType)(n.dtype,r.dtype))}),s=qh({inputs:{real:r,imag:o},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(o),s}const p=i||Object(a.upcastType)(l.dtype,d.dtype);if(h.shouldExecuteOnCPU([l,d])&&null!=s){const t=h.texData.get(l.dataId),e=h.texData.get(d.dataId),[n,r]=s(l.shape,d.shape,t.values,e.values,p),a=h.makeTensorInfo(r,p);return h.texData.get(a.dataId).values=n,a}let f;return f=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Uh(n,l.shape,d.shape,r):new Vh(e,l.shape,d.shape),h.runWebGLProgram(f,[l,d],p)}}function np(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===t)return"return x;";if("relu"===t)return e?Fh:Ah;if("elu"===t)return e?Dh:"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===t)return e?Mh:_h;if("prelu"===t)return e?Jh:Zh;if("leakyrelu"===t)return e?Yh:Xh;throw new Error("Activation ".concat(t," has not been implemented for the WebGL backend."))}class rp{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4],o=arguments.length>5&&void 0!==arguments[5]&&arguments[5],s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],l=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";s&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(s,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(s,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(s,"\n        }"),b="result = activation(result);");const g=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";t[0]<e[0]?y="int(min(float(rc.x), ".concat(t[0]-1,".))"):e[0]<t[0]&&(v="int(min(float(rc.x), ".concat(e[0]-1,".))")),this.userCode="\n      ".concat(m,"\n\n      const float sharedDimension = ").concat(l,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ").concat(l,"; i++) {\n          int batchA = ").concat(y,";\n          int batchB = ").concat(v,";\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(g,"\n\n        ").concat(b,"\n\n        setOutput(result);\n      }\n    ")}}const ap="return areal * breal - aimag * bimag;",op="return areal * bimag + aimag * breal;";class sp{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=a.backend_util.assertAndGetBroadcastShape(e,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const ip="return a * b;";function cp(t){const{inputs:e,backend:n}=t,{a:r,b:o}=e,s=a.backend_util.upcastType(r.dtype,o.dtype);if("complex64"===r.dtype){const t=n.texData.get(r.dataId),e=n.texData.get(o.dataId),a=new sp(ap,r.shape,o.shape),s=new sp(op,r.shape,o.shape),i=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:o.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:o.shape}],c=n.runWebGLProgram(a,i,"float32"),u=n.runWebGLProgram(s,i,"float32"),l=qh({inputs:{real:c,imag:u},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(u),l}if(n.shouldExecuteOnCPU([r,o])){const t=n.texData.get(r.dataId),e=n.texData.get(o.dataId),[a,i]=ih(r.shape,o.shape,t.values,e.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=a,c}let i;return i=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Uh(ip,r.shape,o.shape):new Vh(ip,r.shape,o.shape),n.runWebGLProgram(i,[r,o],s)}const up={kernelName:a.Multiply,backendName:"webgl",kernelFunc:cp};function lp(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{shape:s}=r,i=n,c=a.util.sizeFromShape(o.shape),u=a.util.inferFromImplicitShape(s,c),l=a.util.sizeFromShape(u);a.util.assert(c===l,()=>"The new shape (".concat(u,") has ").concat(l," elements and the old ")+"shape (".concat(o.shape,") has ").concat(c," elements. The new shape and old ")+"shape must have the same number of elements.");const d=i.texData.get(o.dataId);return!d.isPacked||$l(o.shape,u)||null!==d.texture&&$l(d.shape,u)?(i.incRef(o.dataId),{dataId:o.dataId,shape:u,dtype:o.dtype}):function(t,e,n){const r=[Yl(t.shape),...Ql(t.shape)],a={dtype:t.dtype,shape:r,dataId:t.dataId},o=[Yl(e),...Ql(e)],s=new Oh(o,r),i=n.runWebGLProgram(s,[a],t.dtype,null,!0);return{dataId:i.dataId,shape:e,dtype:i.dtype}}(o,u,i)}const dp={kernelName:a.Reshape,backendName:"webgl",kernelFunc:lp};class hp{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:o,outSize:s}=t;this.outputShape=[r,s];const i=4*Math.floor(n/4),c=n%4;let u="sumValue += dot(values, ones);";if(null!=e){const t=1/e;u="sumValue += dot(values * ".concat(a.util.isInt(t)?t.toPrecision(2):t,", ones);")}let l="";o%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(o,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(u,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class pp{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:o}=t;this.outputShape=[r,o];let s="0.0",i="";"prod"===e?s="1.0":"min"===e?(s="1.0 / 1e-20",i="min"):"max"===e&&(s="-1.0 / 1e-20",i="max");let c="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const u=4*Math.floor(n/4),l=n%4;let d="\n      if (".concat("sum"===e,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===e,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n      }\n    "),h="vec4";"all"===e?(s="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===e&&(s="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(s,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(s,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(u,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(u,";\n        if (").concat(1===l,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===l,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===l,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function fp(t,e,n,r){const o=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],r=a.backend_util.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}(t.shape);let s=t;for(let a=0;a<o.length;a++){const{inSize:i,windowSize:c,outSize:u}=o[a];let l,d;l="mean"===n?0===a?new hp({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u},i):new hp({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u}):new pp({windowSize:c,inSize:i,batchSize:t.shape[0],outSize:u},n),d=s,s=r.runWebGLProgram(l,[s],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class mp{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[e[o]];this.outputShape=n,this.rank=n.length;const r=Wd(this.rank),a=function(t){const e=t.length;if(e>6)throw Error("Transpose for rank ".concat(e," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let a=0;a<t.length;a++)r[t[a]]=n[a];return r.join()}(e);this.userCode="\n    void main() {\n      ".concat(r," resRC = getOutputCoords();\n      setOutput(getA(").concat(a,"));\n    }\n    ")}}class bp{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let u=0;u<n.length;u++)n[u]=t[e[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const r=Wd(this.rank),a=xh("rc",this.rank),o=new Array(this.rank);for(let u=0;u<e.length;u++)o[e[u]]=a[u];const s="vec2(".concat(o.slice(-2).join(),")"),i="++".concat(a[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(o.join(),"), ").concat(s,")");this.userCode="\n    void main() {\n      ".concat(r," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(a[this.rank-1],";\n      if(++").concat(a[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function gp(t,e,n){const r=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bp(t.shape,e):new mp(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}function yp(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r;return function(t,e,n,r){const o=e,s=t.shape.length,i=a.util.parseAxisParam(o,t.shape);let c=i;const u=a.backend_util.getAxesPermutation(c,s),l=null!=u;let d=t;l&&(d=gp(t,u,r),c=a.backend_util.getInnerMostAxes(c.length,s)),a.backend_util.assertAxesAreInnerMostDims("sum",c,s);const[h,p]=a.backend_util.computeOutAndReduceShapes(d.shape,c);let f=h;n&&(f=a.backend_util.expandShapeToKeepDim(h,i));const m=a.util.sizeFromShape(p),b=lp({inputs:{x:d},attrs:{shape:[a.util.sizeFromShape(t.shape)/m,m]},backend:r}),g=fp(b,Object(a.sumOutType)(t.dtype),"sum",r),y=lp({inputs:{x:g},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(d),y}(o,s,i,n)}const vp={kernelName:a.Sum,backendName:"webgl",kernelFunc:yp};function xp(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{perm:o}=r,s=n,i=a.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=a.shape[o[l]];let u;if(s.shouldExecuteOnCPU([a])){const t=s.texData.get(a.dataId).values,e=yh(t,a.shape,a.dtype,o,c);u=s.makeTensorInfo(c,a.dtype);s.texData.get(u.dataId).values=e}else u=gp(a,o,s);return u}const wp={kernelName:a.Transpose,backendName:"webgl",kernelFunc:xp};function kp(t){let{a:e,b:n,transposeA:r,transposeB:o,backend:s,bias:i=null,preluActivationWeights:c=null,leakyreluAlpha:u=0,activation:l=null}=t;const d=e.shape.length,h=n.shape.length,p=r?e.shape[d-2]:e.shape[d-1],f=o?n.shape[h-1]:n.shape[h-2],m=r?e.shape[d-1]:e.shape[d-2],b=o?n.shape[h-2]:n.shape[h-1],g=e.shape.slice(0,-2),y=n.shape.slice(0,-2),v=a.util.sizeFromShape(g),x=a.util.sizeFromShape(y),w=v===x||1===v||1===x;a.util.assert(d>=2&&h>=2&&w,()=>"Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input "+"batch dimensions of (".concat(g,") and (").concat(y,")."));const k=(v>x?e.shape.slice(0,-2):n.shape.slice(0,-2)).concat([m,b]);a.util.assert(p===f,()=>"Error in matMul: inner shapes (".concat(p,") and (")+"".concat(f,") of Tensors with shapes ").concat(e.shape," and ")+"".concat(n.shape," and transposeA=").concat(r)+" and transposeB=".concat(o," must match."));const O=r?[v,p,m]:[v,m,p],I=o?[x,b,f]:[x,f,b],S=lp({inputs:{x:e},backend:s,attrs:{shape:O}}),N=lp({inputs:{x:n},backend:s,attrs:{shape:I}}),T=[S,N],j=Math.max(v,x),C=r?S.shape[1]:S.shape[2],E=null!=i,A=null!=c,_="leakyrelu"===l,R=null!=l?np(l,!0):null;let D;if((1===m||1===b)&&C>1e3&&!1===(E||A||_||null!=R)){let t=S,e=N;r&&(t=xp({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),T.push(t)),o&&(e=xp({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),T.push(e));const n=1===b;let a=t;1!==b&&(a=lp({inputs:{x:t},backend:s,attrs:{shape:[j,C,1]}}),T.push(a));const i=1===b?2:1;let c=e;n&&(c=lp({inputs:{x:e},backend:s,attrs:{shape:[j,1,C]}}),T.push(c));const u=cp({inputs:{a:a,b:c},backend:s});D=yp({inputs:{x:u},backend:s,attrs:{axis:i,keepDims:!0}}),T.push(u)}else{const t=Object(a.upcastType)(e.dtype,n.dtype),l=new rp(O,I,[j,m,b],r,o,E,R,A,_),d=[S,N];if(null!=i&&d.push(i),A&&d.push(c),_){const t=s.makeTensorInfo([],"float32",a.util.createScalarValue(u,"float32"));d.push(t),T.push(t)}D=s.runWebGLProgram(l,d,t)}const F=lp({inputs:{x:D},backend:s,attrs:{shape:k}});T.push(D);for(const a of T)s.disposeIntermediateTensorInfo(a);return F}const Op={kernelName:a._FusedMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:o,bias:s,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=r;return kp({a:a,b:o,transposeA:c,transposeB:u,backend:n,bias:s,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}};const Ip={kernelName:a.Abs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const t=n.texData.get(r.dataId),e=hh(t.values);return n.makeTensorInfo(r.shape,r.dtype,e)}let o;return o=Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new zh(r.shape,"return abs(x);"):new jh(r.shape,"return abs(x);"),n.runWebGLProgram(o,[r],r.dtype)}},Sp=tp({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Np={kernelName:a.Acos,backendName:"webgl",kernelFunc:Sp},Tp=tp({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),jp={kernelName:a.Acosh,backendName:"webgl",kernelFunc:Tp},Cp="return a + b;",Ep=ep({opSnippet:Cp,packedOpSnippet:Cp,supportsComplex:!0,cpuKernelImpl:Hd}),Ap={kernelName:a.Add,backendName:"webgl",kernelFunc:Ep};class _p{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((t,e)=>"T".concat(e));const n=[];this.variableNames.forEach(t=>{n.push("float v".concat(t," = get").concat(t,"AtOutCoords();"))});const r=this.variableNames.map(t=>"v".concat(t)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(r,";\n        setOutput(result);\n      }\n    ")}}class Rp{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((t,e)=>"T".concat(e));const n=[];this.variableNames.forEach(t=>{n.push("vec4 v".concat(t," = get").concat(t,"AtOutCoords();"))});const r=this.variableNames.map(t=>"v".concat(t)).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(r,";\n        setOutput(result);\n      }\n    ")}}const Dp={kernelName:a.AddN,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,o=n;if(1===o.length)return Gh({inputs:{x:o[0]},backend:r});if(o.length>Object(a.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(o.length/2),n=t({inputs:o.slice(0,e),backend:r}),a=t({inputs:o.slice(e),backend:r});return t({inputs:[n,a],backend:r})}const s=o.map(t=>t.dtype).reduce((t,e)=>Object(a.upcastType)(t,e)),i=o.map(t=>t.shape),c=Object(a.env)().getBool("WEBGL_PACK")?new Rp(o[0].shape,i):new _p(o[0].shape,i);return r.runWebGLProgram(c,o,s)}};const Fp={kernelName:a.All,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=a.util.parseAxisParam(s,o.shape);let l=u;const d=a.backend_util.getAxesPermutation(l,c);let h=o;null!=d&&(h=xp({inputs:{x:o},backend:n,attrs:{perm:d}}),l=a.backend_util.getInnerMostAxes(l.length,c)),a.backend_util.assertAxesAreInnerMostDims("all",l,c);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,l),m=lp({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),b=fp(m,m.dtype,"all",n);let g;if(i){g=lp({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,u)}})}else g=lp({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}};const Mp={kernelName:a.Any,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=a.util.parseAxisParam(s,o.shape);let l=u;const d=a.backend_util.getAxesPermutation(l,c);let h=o;null!=d&&(h=xp({inputs:{x:o},backend:n,attrs:{perm:d}}),l=a.backend_util.getInnerMostAxes(l.length,c)),a.backend_util.assertAxesAreInnerMostDims("any",l,c);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,l),m=lp({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),b=fp(m,m.dtype,"any",n);let g;if(i){g=lp({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,u)}})}else g=lp({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}};class zp{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,o];const s="max"===e?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(r,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(r,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(s," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Lp{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,a.util.assert(t.length>2,()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2."));const o=t[t.length-1],s=Math.ceil(o/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,u=Wd(c),l=wh("coords",c);let d,h;if(1===s){h=c+1;const t=Wd(h);d="\n        ".concat(t," sourceLocR = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[c-1],";\n        ").concat(t," sourceLocG = ").concat(t,"(").concat(l.join(),", 0);\n        ++").concat(l[c-2],";\n        ").concat(t," sourceLocA = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[c-1],";\n        ").concat(t," sourceLocB = ").concat(t,"(").concat(l.join(),", 0);\n        --").concat(l[c-2],";")}else h=c,d="\n        ".concat(u," sourceLocR = coords;\n        ++").concat(l[c-1],";\n        ").concat(u," sourceLocG = coords;\n        ++").concat(l[c-2],";\n        ").concat(u," sourceLocA = coords;\n        --").concat(l[c-1],";\n        ").concat(u," sourceLocB = coords;\n        --").concat(l[c-2],";");const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(t=>"int "+t),b=wh("sourceLocR",h-1).concat("inIdx.r"),g=wh("sourceLocG",h-1).concat("inIdx.g"),y=wh("sourceLocB",h-1).concat("inIdx.b"),v=wh("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(b.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(v.join(),")));"),k="vec4(\n            getAChannel(".concat(b.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(v.join(),") : 0.)"),O=r?"":"\n      float getBestIndicesAChannel(".concat(m.join(),") {\n        return getChannel(getBestIndicesA(").concat(p.join(),"),\n                                          vec2(").concat(p.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(m.join(),") {\n        return getChannel(getA(").concat(p.join(),"),\n                               vec2(").concat(p.slice(-2).join(),"));\n      }\n      ").concat(O,"\n      void main() {\n        ").concat(u," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[c-1]," < ").concat(i[c-1]-1,";\n        bool hasNextRow = ").concat(l[c-2]," < ").concat(i[c-2]-1,";\n        ").concat(d,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(f,", sourceLocG").concat(f,",\n          sourceLocB").concat(f,", sourceLocA").concat(f,") * ").concat(e,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(k,";\n\n        for (int i = 0; i < ").concat(e,"; i++) {\n          inIdx = srcIdx;\n          ").concat(w,"\n          vec4 candidate = ").concat(k,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(x,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Pp(t,e,n,r){const o=[n];if(a.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),o,e.shape.length),!Object(a.env)().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const n=[],[s,i]=a.backend_util.computeOutAndReduceShapes(e.shape,o),c=a.util.sizeFromShape(i),u=lp({inputs:{x:e},backend:t,attrs:{shape:[-1,c]}});n.push(u);const l=function t(e,n,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,s=n.shape[0],i=n.shape[1];null!=o&&(s=o.shape[0],i=o.shape[1]);const c=a.backend_util.computeOptimalWindowSize(i),u={windowSize:c,inSize:i,batchSize:s,outSize:Math.ceil(i/c)},l=new zp(u,r,null==o),d=[n];null!=o&&d.push(o);const h=e.runWebGLProgram(l,d,"int32");if(1===h.shape[1])return h;const p=t(e,n,r,h);return e.disposeIntermediateTensorInfo(h),p}(t,u,r);n.push(l);const d=lp({inputs:{x:l},backend:t,attrs:{shape:s}});return n.forEach(e=>t.disposeIntermediateTensorInfo(e)),d}return function t(e,n,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const s=null!=o?o.shape:n.shape,i=s[s.length-1],c=a.backend_util.computeOptimalWindowSize(i),u=new Lp(s,c,r,null==o),l=null==o?[n]:[n,o],d=e.runWebGLProgram(u,l,"int32");if(d.shape.length===n.shape.length){const a=t(e,n,r,d);return e.disposeIntermediateTensorInfo(d),a}return d}(t,e,r)}const Bp={kernelName:a.ArgMax,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;let i=a.util.parseAxisParam(s,o.shape);const c=a.backend_util.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=xp({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.backend_util.getInnerMostAxes(i.length,u.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const d=Pp(n,u,i[0],"max");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}};const Wp={kernelName:a.ArgMin,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s}=r;let i=a.util.parseAxisParam(s,o.shape);const c=a.backend_util.getAxesPermutation(i,o.shape.length);let u=o;const l=[];null!=c&&(u=xp({inputs:{x:o},backend:n,attrs:{perm:c}}),l.push(u),i=a.backend_util.getInnerMostAxes(i.length,u.shape.length)),a.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const d=Pp(n,u,i[0],"min");return l.forEach(t=>n.disposeIntermediateTensorInfo(t)),d}},Vp=tp({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Up={kernelName:a.Asin,backendName:"webgl",kernelFunc:Vp},Gp=tp({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Hp={kernelName:a.Asinh,backendName:"webgl",kernelFunc:Gp},qp=tp({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Kp={kernelName:a.Atan,backendName:"webgl",kernelFunc:qp},Xp=ep({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Yp={kernelName:a.Atan2,backendName:"webgl",kernelFunc:Xp},Qp=tp({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Zp={kernelName:a.Atanh,backendName:"webgl",kernelFunc:Qp};class Jp{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideHeight,i=t.strideWidth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m="((batch  * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + d"),b="(xR * ".concat(t.inWidth," + xC) * ").concat(t.inChannels," + d");let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(l,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(u,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(e," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(r?a?m:b:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let y="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(y="avgValue / count");const v=4*Math.floor(o/4),x=o%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(s,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(g,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(g,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(l,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              getValue(batch, xR, xC + 3 * ").concat(u,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(u,", d),\n              getValue(batch, xR, xC + 2 * ").concat(u,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(y,");\n      }\n    ")}}class $p{constructor(t,e,n){let r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideDepth,i=t.strideHeight,c=t.strideWidth,u=t.dilationDepth,l=t.dilationHeight,d=t.dilationWidth,h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,b=t.padInfo.top,g=t.padInfo.left;this.outputShape=t.outShape;const y="avg"===e;let v="0.0";if(y||(v="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(b,", ").concat(g,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(u,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(l,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(e," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(r?a?"(((batch * ".concat(t.inDepth," + xD) * ").concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"((xD * ".concat(t.inHeight," + xR) * ").concat(t.inWidth," + xC) * ").concat(t.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(e,"(").concat(e,"(").concat(e,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===e&&(x="avgValue / count");const w=4*Math.floor(o/4),k=o%4,O="\n      if (".concat(y,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(s,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(b,", ").concat(g,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(t.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(u,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(l,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(O,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(O,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(O,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(O,"\n            }\n          }\n          setOutput(").concat(x,");\n        }\n      }\n    ")}}const tf={kernelName:a.AvgPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;sd(o,"avgPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.backend_util.computePool2DInfo(o.shape,s,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))return Gh({inputs:{x:o},backend:n});const d=new Jp(l,"avg",!1);return n.runWebGLProgram(d,[o],"float32")}};const ef={kernelName:a.AvgPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dimRoundingMode:u,dataFormat:l}=r,d=a.backend_util.computePool3DInfo(o.shape,s,i,[1,1,1],c,u,l),h=new $p(d,"avg",!1);return n.runWebGLProgram(h,[o],"float32")}};class nf{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,o=t.dilationHeight,s=t.dilationWidth,i=t.effectiveFilterHeight,c=t.effectiveFilterWidth,u=i-1-t.padInfo.top,l=c-1-t.padInfo.left,d=1/(e*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(u,", ").concat(l,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(o,") {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(s,") {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class rf{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=l-1-t.padInfo.front,f=d-1-t.padInfo.top,m=h-1-t.padInfo.left,b=1/(e*n*r);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(b,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(l,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(a,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(u,") {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const af={kernelName:a.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,h=a.backend_util.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),p=new rf(h);return n.runWebGLProgram(p,[o],i.dtype)}};const of={kernelName:a.AvgPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s;sd([o,s],"avgPoolGrad");const{filterSize:c,strides:u,pad:l}=r,d=a.backend_util.computePool2DInfo(i.shape,c,u,1,l),h=new nf(d);return n.runWebGLProgram(h,[o],i.dtype)}};const sf={kernelName:a.BatchMatMul,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{a:a,b:o}=e,{transposeA:s,transposeB:i}=r;return kp({a:a,b:o,transposeA:s,transposeB:i,backend:n})}};class cf{constructor(t,e,n,r,o,s){this.outputShape=[],this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(t,e),a.backend_util.assertAndGetBroadcastShape(t,n);let i="0.0";null!=r&&(a.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";null!=o&&(a.backend_util.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(i,";\n        float scale = ").concat(c,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class uf{constructor(t,e,n,r,o,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],a.backend_util.assertAndGetBroadcastShape(t,e),a.backend_util.assertAndGetBroadcastShape(t,n);let i="vec4(0.0)";null!=r&&(a.backend_util.assertAndGetBroadcastShape(t,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";null!=o&&(a.backend_util.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=t,this.userCode="\n      void main() {\n        vec4 offset = ".concat(i,";\n        vec4 scale = ").concat(c,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const lf={kernelName:a.FusedBatchNorm,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o,mean:s,variance:i,offset:c,scale:u}=e;a.util.assert(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),a.util.assert(null==c||s.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),a.util.assert(null==u||s.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=[o,s,i];let h=null;null!=c&&(h=c.shape,d.push(c));let p=null;null!=u&&(p=u.shape,d.push(u));const f=Object(a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new uf(o.shape,s.shape,i.shape,h,p,l):new cf(o.shape,s.shape,i.shape,h,p,l);return n.runWebGLProgram(f,d,d[0].dtype)}};class df{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Wd(this.rank),n="uniform int start[".concat(this.rank,"];"),r=function(t){if(1===t)return"sourceLoc";if(t<=6)return hf.slice(0,t).map(t=>"sourceLoc."+t).join(",");throw Error("Slicing for rank ".concat(t," is not yet supported"))}(this.rank);let a;const o=t.map((t,e)=>"sourceLoc.".concat(hf[e]," = start[").concat(e,"] + coords.").concat(hf[e],";"));a="\n        ".concat(e," sourceLoc;\n        ").concat(e," coords = getOutputCoords();\n        ").concat(o.join("\n"),"\n      "),this.userCode="\n      ".concat(n,"\n      void main() {\n        ").concat(a,"\n        setOutput(getSource(").concat(r,"));\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const hf=["x","y","z","w","u","v"];class pf{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Wd(this.rank),n=wh("coords",this.rank),r=wh("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2(".concat(r.slice(-2).join(),")"),o="getChannel(getSource(".concat(r.join(),"), ").concat(a,")"),s="\n      result.x = ".concat(o,";\n      if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n        ++").concat(r[this.rank-1],";\n        result.y = ").concat(o,";\n        --").concat(r[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(t[this.rank-2],") {\n        ++").concat(r[this.rank-2],";\n        result.z = ").concat(o,";\n        if (++").concat(n[this.rank-1]," < ").concat(t[this.rank-1],") {\n          ++").concat(r[this.rank-1],";\n          result.w = ").concat(o,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(e,"(").concat(t.map((t,e)=>"start[".concat(e,"]")).join(),");"):t.map((t,e)=>"".concat(r[e]," = ").concat(n[e]," + start[").concat(e,"];")).join("\n");this.userCode="\n      uniform int start[".concat(this.rank,"];\n      void main() {\n        ").concat(e," coords = getOutputCoords();\n        ").concat(e," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(s,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error("The rank (".concat(this.rank,") of the program must match the ")+"length of start (".concat(t.length,")"));return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}function ff(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,size:i}=r,[c,u]=a.slice_util.parseSliceParams(o,s,i);if(a.slice_util.assertParamsValid(o,c,u),0===a.util.sizeFromShape(u))return n.makeTensorInfo(u,o.dtype,[]);if(n.shouldExecuteOnCPU([o])||"string"===o.dtype){const t=n.texData.get(o.dataId),e=ph(t.values,c,u,o.shape,o.dtype);return n.makeTensorInfo(u,o.dtype,e)}const{isPacked:l}=n.texData.get(o.dataId),d=a.slice_util.isSliceContinous(o.shape,c,u);if(l||!d){const t=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new pf(u):new df(u),e=t.getCustomSetupFunc(c);return n.runWebGLProgram(t,[o],o.dtype,e)}return n.uploadToGPU(o.dataId),function(t,e,n,r){const o=r.texData.get(t.dataId),s=r.makeTensorInfo(n,t.dtype),i=r.texData.get(s.dataId);Object.assign(i,o),i.complexParentRefCount=0,i.refCount=1,i.shape=n,i.dtype=t.dtype;let c=a.slice_util.computeFlatOffset(e,a.util.computeStrides(t.shape));o.slice&&(c+=o.slice.flatOffset),i.slice={flatOffset:c,origDataId:o.slice&&o.slice.origDataId||t.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(o,c,u,n)}const mf={kernelName:a.Slice,backendName:"webgl",kernelFunc:ff},bf={kernelName:a.BatchToSpaceND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,crops:i}=r;a.util.assert(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=s.reduce((t,e)=>t*e),u=a.backend_util.getReshaped(o.shape,s,c),l=a.backend_util.getPermuted(u.length,s.length),d=a.backend_util.getReshapedPermuted(o.shape,s,c),h=a.backend_util.getSliceBeginCoords(i,s.length),p=a.backend_util.getSliceSize(d,i,s.length),f=[],m=lp({inputs:{x:o},backend:n,attrs:{shape:u}}),b=xp({inputs:{x:m},backend:n,attrs:{perm:l}}),g=lp({inputs:{x:b},backend:n,attrs:{shape:d}}),y=ff({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(b),f.push(g),f.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}};const gf={kernelName:a.Bincount,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s}=r,i=n.readSync(a.dataId),c=n.readSync(o.dataId),u=qd(i,c,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,u)}},yf=ep({opSnippet:"return float(a != b);",dtype:"bool"}),vf={kernelName:a.NotEqual,backendName:"webgl",kernelFunc:yf};function xf(t){const{inputs:e,backend:n}=t,{input:r}=e;return Gh({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const wf={kernelName:a.Real,backendName:"webgl",kernelFunc:xf};const kf={kernelName:a.Cast,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r,attrs:o}=e,{x:s}=n,{dtype:i}=o;if("complex64"===i){if("complex64"===s.dtype)return Gh({inputs:{x:s},backend:r});const e=a.zeros(s.shape),n=t({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),o=qh({inputs:{real:n,imag:e},backend:r});return e.dispose(),r.disposeIntermediateTensorInfo(n),o}if("complex64"===s.dtype){const e=xf({inputs:{input:s},backend:r}),n=t({inputs:{x:e},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(e),n}if(!a.util.hasEncodingLoss(s.dtype,i)){const t=Gh({inputs:{x:s},backend:r});return{dataId:t.dataId,shape:t.shape,dtype:i}}if("int32"===i)return function(t,e){const n=new jh(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const t=r.makeTensorInfo([],"bool",a.util.getTypedArrayFromDType("bool",1)),e=yf({inputs:{a:s,b:t},backend:r});return r.disposeIntermediateTensorInfo(t),e}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(i))}},Of="return ceil(x);",If=tp({opSnippet:Of,packedOpSnippet:Of,cpuKernelImpl:Xd}),Sf={kernelName:a.Ceil,backendName:"webgl",kernelFunc:If};class Nf{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class Tf{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}const jf={kernelName:a.ClipByValue,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{clipValueMin:s,clipValueMax:i}=r;let c;c=Object(a.env)().getBool("WEBGL_PACK_CLIP")?new Tf(o.shape):new Nf(o.shape);const u=c.getCustomSetupFunc(s,i);return n.runWebGLProgram(c,[o],o.dtype,u)}};class Cf{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Ef(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}const Af={kernelName:a.ComplexAbs,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,a=n.texData.get(r.dataId),o=new Cf(r.shape),s=[Ef(r,a.complexTensorInfos.real),Ef(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(o,s,s[0].dtype)}};class _f{constructor(t){this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(t,1),this.variableNames=t.map((t,e)=>"T".concat(e));const e=new Array(t.length-1);e[0]=t[0][1];for(let a=1;a<e.length;a++)e[a]=e[a-1]+t[a][1];const n=["if (yC < ".concat(e[0],") setOutput(getT0(yR, yC));")];for(let a=1;a<e.length;a++){const t=e[a-1];n.push("else if (yC < ".concat(e[a],") ")+"setOutput(getT".concat(a,"(yR, yC-").concat(t,"));"))}const r=e.length,o=e[e.length-1];n.push("else setOutput(getT".concat(r,"(yR, yC-").concat(o,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class Rf{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=a.backend_util.computeOutShape(t,e);const n=this.outputShape,r=n.length,o=Wd(r),s=wh("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=t.map((t,e)=>"T".concat(e));const c=new Array(t.length-1);c[0]=t[0][e];for(let a=1;a<c.length;a++)c[a]=c[a-1]+t[a][e];const u=i[e],l=i.slice(-2),d=i.join();let h="if (".concat(u," < ").concat(c[0],") {\n        return getChannel(\n            getT0(").concat(d,"), vec2(").concat(l.join(),"));\n        }");for(let a=1;a<c.length;a++){const t=c[a-1];h+="\n        if (".concat(u," < ").concat(c[a],"  && ").concat(u," >= ").concat(c[a-1],") {\n          return getChannel(\n            getT").concat(a,"(").concat(Df(i,u,t),"),\n            vec2(").concat(Df(l,u,t),"));\n        }")}const p=c.length,f=c[c.length-1];h+="\n        return getChannel(\n          getT".concat(p,"(").concat(Df(i,u,f),"),\n          vec2(").concat(Df(l,u,f),"));"),this.userCode="\n      float getValue(".concat(i.map(t=>"int "+t),") {\n        ").concat(h,"\n      }\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[r-1]," = ").concat(s[r-1]," + 1;\n        if (").concat(s[r-1]," < ").concat(n[r-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[r-2]," = ").concat(s[r-2]," + 1;\n        if (").concat(s[r-2]," < ").concat(n[r-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[r-1]," = ").concat(s[r-1]," - 1;\n        if (").concat(s[r-2]," < ").concat(n[r-2]," &&\n            ").concat(s[r-1]," < ").concat(n[r-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function Df(t,e,n){const r=t.indexOf(e);return t.map((t,e)=>e===r?"".concat(t," - ").concat(n):t).join()}function Ff(t){const{inputs:e,backend:n}=t,{input:r}=e;return Gh({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Mf={kernelName:a.Imag,backendName:"webgl",kernelFunc:Ff};function zf(t,e,n){const r=a.backend_util.computeOutShape(t.map(t=>t.shape),e);return{tensors2D:t.map(t=>lp({inputs:{x:t},attrs:{shape:[-1,a.util.sizeFromShape(t.shape.slice(e))]},backend:n})),outShape:r}}function Lf(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r,s=a.util.parseAxisParam(o,e[0].shape)[0],i=a.backend_util.computeOutShape(e.map(t=>t.shape),s);if(0===a.util.sizeFromShape(i))return n.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(t=>a.util.sizeFromShape(t.shape)>0);if(1===c.length)return Gh({inputs:{x:c[0]},backend:n});const u=c.map(t=>t.shape);return a.backend_util.assertParamsConsistent(u,s),function t(e,n,r){const o=e[0].dtype;if("complex64"===o){const a=e.map(t=>xf({inputs:{input:t},backend:r})),o=e.map(t=>Ff({inputs:{input:t},backend:r})),s=t(a,n,r),i=t(o,n,r),c=qh({inputs:{real:s,imag:i},backend:r});return a.forEach(t=>r.disposeIntermediateTensorInfo(t)),o.forEach(t=>r.disposeIntermediateTensorInfo(t)),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),c}if("string"===o){const{tensors2D:t,outShape:s}=zf(e,n,r),i=t.map(t=>({vals:r.readSync(t.dataId),shape:t.shape})),c=1===t[0].shape[0],u=Yd(i,s,o,c),l=a.backend_util.computeOutShape(e.map(t=>t.shape),n),d=r.makeTensorInfo(l,o,u);return t.forEach(t=>r.disposeIntermediateTensorInfo(t)),d}if(e.length>Object(a.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),o=t(e.slice(0,a),n,r),s=t(e.slice(a),n,r),i=t([o,s],n,r);return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}if(Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const t=new Rf(e.map(t=>t.shape),n);return r.runWebGLProgram(t,e,o)}const{tensors2D:s,outShape:i}=zf(e,n,r),c=new _f(s.map(t=>t.shape)),u=r.runWebGLProgram(c,s,o);s.forEach(t=>r.disposeIntermediateTensorInfo(t));const l=lp({inputs:{x:u},attrs:{shape:i},backend:r});return r.disposeIntermediateTensorInfo(u),l}(c,s,n)}const Pf={kernelName:a.Concat,backendName:"webgl",kernelFunc:Lf};class Bf{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.padInfo.top,s=t.padInfo.left,i=t.strideHeight,c=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,m="channelsLast"===t.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let v="",x="";n&&(v=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(y,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(b,"], coords[").concat(g,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(u,";\n\n          if (xR < 0 || xR >= ").concat(t.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            if (xC < 0 || xC >= ").concat(t.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class Wf{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,c=t.dilationHeight,u=t.dilationWidth,l=t.filterDepth,d=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(a,", ").concat(o,", ").concat(s,");\n      const ivec3 pads = ivec3(").concat(e,", ").concat(n,", ").concat(r,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(l,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(t.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(u,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Vf{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:a,strideWidth:o,strideHeight:s,padInfo:i,outWidth:c,dilationWidth:u,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=i,f=a*r,m=cd(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let v="";for(let x=0;x<=1;x++)for(let n=0;n<=1;n++)v+="\n          blockIndex = rc.y + ".concat(n,";\n          pos = rc.x + ").concat(x,";\n\n          if(blockIndex < ").concat(t[1]," && pos < ").concat(t[0],") {\n            offsetY = int(blockIndex / (").concat(c,")) * ").concat(s," - ").concat(p,";\n            d0 = offsetY + ").concat(l," * (pos / ").concat(f,");\n\n            if(d0 < ").concat(e[g]," && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ").concat(c,".) * ").concat(o,". - ").concat(h,".);\n              d1 = offsetX + ").concat(u," * (int(mod(float(pos), ").concat(f,".) / ").concat(a,".));\n\n              if(d1 < ").concat(e[y]," && d1 >= 0) {\n\n                ch = int(mod(float(pos), ").concat(a,".));\n\n                if (").concat(b,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*x+n,"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*x+n,"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(v,"\n\n        ").concat(m.output," = result;\n      }\n    ")}}function Uf(t){let{x:e,filter:n,convInfo:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=t;const l=e.shape,d=o.texData.get(e.dataId),h=r.inChannels,p=l[0]*l[1]*l[2],f=r.outChannels,m="channelsLast"===r.dataFormat;let b;const g=[],y=(1===p||1===f)&&h>1e3,v=l[2]%2!==0&&!!d.isPacked;if(!y&&Object(a.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&v){const t=m?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,t,r.inChannels],dtype:e.dtype},p=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,a.util.assert($l(d.shape,h.shape),()=>"packed reshape ".concat(d.shape," to ").concat(h.shape," isn't free"));const f=lp({inputs:{x:n},backend:o,attrs:{shape:[1,r.inChannels,r.outChannels]}});g.push(f);const y=kp({a:h,b:f,backend:o,transposeA:!1,transposeB:!1,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:c}),v=o.texData.get(y.dataId);a.util.assert(v.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=p,v.shape=r.outShape,b=Gh({inputs:{x:y},backend:o}),b.shape=r.outShape,g.push(y)}else{const t=lp({inputs:{x:e},backend:o,attrs:{shape:[1,m?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],r.inChannels]}}),a=lp({inputs:{x:n},backend:o,attrs:{shape:[1,r.inChannels,r.outChannels]}}),d=kp({a:t,b:a,transposeA:!1,transposeB:!1,backend:o,bias:s,activation:u,preluActivationWeights:i,leakyreluAlpha:c});b=lp({inputs:{x:d},backend:o,attrs:{shape:r.outShape}}),g.push(t),g.push(a),g.push(d)}for(const a of g)o.disposeIntermediateTensorInfo(a);return b}function Gf(t){let{x:e,filter:n,convInfo:r,backend:o,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:u=null}=t;const{filterWidth:l,filterHeight:d,inChannels:h,outWidth:p,outHeight:f,dataFormat:m}=r,b="channelsLast"===m,g=l*d*h,y=f*p,v=[g,y],x=[],w=lp({inputs:{x:e},backend:o,attrs:{shape:e.shape.slice(1)}}),k=lp({inputs:{x:n},backend:o,attrs:{shape:[1,g,a.util.sizeFromShape(n.shape)/g]}});x.push(w),x.push(k);const O=new Vf(v,w.shape,r),I=o.runWebGLProgram(O,[w],"float32"),S=lp({inputs:{x:I},backend:o,attrs:{shape:[1,v[0],v[1]]}});x.push(I),x.push(S);const N=null!=s,T=null!=i,j="leakyrelu"===u,C=u?np(u,!0):null,E=new rp(S.shape,k.shape,[1,y,r.outChannels],!0,!1,N,C,T,j),A=[S,k];if(s&&A.push(s),T&&A.push(i),j){const t=o.makeTensorInfo([],"float32",a.util.createScalarValue(c,"float32"));A.push(t),x.push(t)}const _=o.runWebGLProgram(E,A,"float32"),R=lp({inputs:{x:_},backend:o,attrs:{shape:b?[1,f,p,r.outChannels]:[1,r.outChannels,f,p]}});x.push(_);for(const a of x)o.disposeIntermediateTensorInfo(a);return R}const Hf={kernelName:a.Conv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dataFormat:u,dilations:l,dimRoundingMode:d}=r,h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(o.shape,s.shape,i,l,c,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Object(a.env)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])f=Gf({x:o,filter:s,convInfo:p,backend:n});else{const t=new Bf(p);f=n.runWebGLProgram(t,[o,s],"float32")}else f=Uf({x:o,filter:s,convInfo:p,backend:n});const m=lp({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class qf{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,o="channelsLast"===t.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(r,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              if (").concat(o,") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Kf{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,o="channelsLast"===t.dataFormat,s=e-1-t.padInfo.top,i=n-1-t.padInfo.left,c=o?1:2,u=o?2:3,l=o?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(l,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(u,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n\n              if (").concat(o,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Xf{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.padInfo.front,o=t.padInfo.top,s=t.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(t.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(t.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(e," - ").concat(a,";\n\n            if (xF < 0 || xF >= ").concat(t.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(o,";\n\n              if (xR < 0 || xR >= ").concat(t.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(r," - ").concat(s,";\n\n                if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Yf{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,a=t.strideDepth,o=t.strideHeight,s=t.strideWidth,i=e-1-t.padInfo.front,c=n-1-t.padInfo.top,u=r-1-t.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(u,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(e,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(a,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(t.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(e," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(o,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(r,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(s,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(r," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(t.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Qf={kernelName:a.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,dataFormat:u,dimRoundingMode:l,filterShape:d}=r,h=a.backend_util.convertConv2DDataFormat(u),p=a.backend_util.computeConv2DInfo(o.shape,d,i,1,c,l,!1,h),f=new qf(p);return n.runWebGLProgram(f,[o,s],"float32")}};const Zf={kernelName:a.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{inputShape:i,strides:c,pad:u,dataFormat:l,dimRoundingMode:d}=r,h=a.backend_util.convertConv2DDataFormat(l),p=a.backend_util.computeConv2DInfo(i,s.shape,c,1,u,d,!1,h),f=new Kf(p);return n.runWebGLProgram(f,[o,s],"float32")}};const Jf={kernelName:a.Conv3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r,l=a.backend_util.computeConv3DInfo(o.shape,s.shape,i,u,c),d=new Wf(l);return n.runWebGLProgram(d,[o,s],"float32")}};const $f={kernelName:a.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,pad:c,filterShape:u}=r,l=a.backend_util.computeConv3DInfo(o.shape,u,i,1,c),d=new Xf(l);return n.runWebGLProgram(d,[o,s],"float32")}};const tm={kernelName:a.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{pad:i,strides:c,inputShape:u}=r,l=a.backend_util.computeConv3DInfo(u,s.shape,c,1,i),d=new Yf(l);return n.runWebGLProgram(d,[o,s],"float32")}},em=tp({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),nm={kernelName:a.Cos,backendName:"webgl",kernelFunc:em},rm=tp({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),am={kernelName:a.Cosh,backendName:"webgl",kernelFunc:rm};class om{constructor(t,e,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,i,c]=t,[u]=e,[l,d]=n;this.outputShape=[u,l,d,c];const h="bilinear"===r?1:0,[p,f]=["".concat(s-1,".0"),"".concat(i-1,".0")],[m,b,g]=l>1?["".concat((s-1)/(l-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[y,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(y,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(o,") {\n          return;\n        }\n\n        float height_scale = ").concat(b,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(g,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(a,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const sm={kernelName:a.CropAndResize,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{image:a,boxes:o,boxInd:s}=e,{cropSize:i,method:c,extrapolationValue:u}=r,l=new om(a.shape,o.shape,i,c,u);return n.runWebGLProgram(l,[a,o,s],"float32")}};class im{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,a=e?"0.0":"getX(".concat(cm(r,"coords"),")"),o=t[t.length-1];let s="",i="";e?(s=n?"end != ".concat(o-1):"end != 0",i=n?"end + 1":"end - 1"):(s=n?"end + pow2 < ".concat(o):"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode="\n      uniform float index;\n      void main() {\n        ".concat(Wd(r)," coords = getOutputCoords();\n        int end = ").concat(um(r,"coords"),";\n        float val = ").concat(a,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(s,") {\n          int idx = ").concat(i,";\n          ").concat(um(r,"coords")," = idx;\n          val += getX(").concat(cm(r,"coords"),");\n        }\n        setOutput(val);\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function cm(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".x, ").concat(e,".y");if(3===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z");if(4===t)return"".concat(e,".x, ").concat(e,".y, ").concat(e,".z, ").concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}function um(t,e){if(1===t)return"".concat(e);if(2===t)return"".concat(e,".y");if(3===t)return"".concat(e,".z");if(4===t)return"".concat(e,".w");throw Error("Cumulative sum for rank ".concat(t," is not yet supported"))}const lm={kernelName:a.Cumsum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,exclusive:i,reverse:c}=r,u=o.shape.length,l=a.backend_util.getAxesPermutation([s],u);let d=o;null!=l&&(d=xp({inputs:{x:o},backend:n,attrs:{perm:l}}));const h=a.backend_util.getInnerMostAxes(1,u)[0];if(h!==u-1)throw new Error("WebGL cumsum shader expects an inner-most axis=".concat(o.shape.length-1," ")+"but got axis=".concat(s));const p=d.shape[h];let f=Gh({inputs:{x:d},backend:n});for(let a=0;a<=Math.ceil(Math.log2(p))-1;a++){const t=new im(d.shape,!1,c),e=t.getCustomSetupFunc(a),r=f;f=n.runWebGLProgram(t,[f],f.dtype,e),n.disposeIntermediateTensorInfo(r)}if(i){const t=new im(d.shape,i,c),e=f;f=n.runWebGLProgram(t,[f],f.dtype),n.disposeIntermediateTensorInfo(e)}if(null!=l){const t=xp({inputs:{x:f},backend:n,attrs:{perm:a.backend_util.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),t}return f}};const dm={kernelName:a.DenseBincount,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a,weights:o}=e,{size:s,binaryOutput:i}=r;if(1===a.shape.length){const t=n.readSync(a.dataId),e=n.readSync(o.dataId),r=qd(t,e,o.dtype,o.shape,s);return n.makeTensorInfo([s],o.dtype,r)}if(2===a.shape.length){const t=n.bufferSync(a),e=n.bufferSync(o),r=Kd(t,e,s,i);return n.makeTensorInfo(r.shape,o.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(a.shape.length,"."))}};class hm{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(e,";\n      int offset_h = imod(h, ").concat(e,");\n      int in_w = w / ").concat(e,";\n      int offset_w = imod(w, ").concat(e,");\n      int offset_d = (offset_h * ").concat(e," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const pm={kernelName:a.DepthToSpace,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockSize:s,dataFormat:i}=r;a.util.assert(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(s));const c=o.shape[0],u="NHWC"===i?o.shape[1]:o.shape[2],l="NHWC"===i?o.shape[2]:o.shape[3],d="NHWC"===i?o.shape[3]:o.shape[1],h=u*s,p=l*s,f=d/(s*s),m=new hm("NHWC"===i?[c,h,p,f]:[c,f,h,p],s,i);return n.runWebGLProgram(m,[o],o.dtype)}};class fm{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=t.outShape;const o=t.inHeight,s=t.inWidth,i=t.padInfo.top,c=t.padInfo.left,u=t.strideHeight,l=t.strideWidth,d=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,f=t.filterWidth,m=t.outChannels/t.inChannels;let b="",g="";n&&(b=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):a?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(b,"\n\n      const ivec2 strides = ivec2(").concat(u,", ").concat(l,");\n      const ivec2 pads = ivec2(").concat(i,", ").concat(c,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(m,";\n        int q = d2 - d1 * ").concat(m,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(p,"; wR++) {\n          int xR = xRCorner + wR * ").concat(d,";\n\n          if (xR < 0 || xR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(f,"; wC++) {\n            int xC = xCCorner + wC * ").concat(h,";\n\n            if (xC < 0 || xC >= ").concat(s,") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(y,"\n        ").concat(g,"\n        setOutput(result);\n      }\n    ")}}class mm{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]&&arguments[3],o=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const s=t.inHeight,i=t.inWidth,c=t.padInfo.top,u=t.padInfo.left,l=t.strideHeight,d=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,f=t.filterHeight,m=t.filterWidth,b=m;let g="int xR; int xC; int xCOffset;";for(let a=0;a<f;a++)for(let t=0;t<m;t++)g+="\n          vec4 xTexelR".concat(a,"C").concat(2*t," = vec4(0.);\n          vec4 wR").concat(a,"C").concat(t," = vec4(0.);\n          vec4 xR").concat(a,"C").concat(t," = vec4(0.);");for(let w=0;w<f;w++)for(let t=0;t<b;t++){const e=2*t;if(g+="\n          xR = xRCorner + ".concat(w*h,";\n          xC = xCCorner + ").concat(e*p,";\n        "),1===d){if(e<m&&(g+=u%2===1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ".concat(s," && xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i,") {\n                    xTexelR").concat(w,"C").concat(e,".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ").concat(s," && xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ").concat(i,") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR").concat(w,"C").concat(e," = vec4(previous.zw, xTexelR").concat(w,"C").concat(e,".xy);\n                } else {\n                  xR").concat(w,"C").concat(e," = vec4(0, 0, xTexelR").concat(w,"C").concat(e,".xy);\n                }\n              "):"\n                if(xR >= 0 && xR < ".concat(s," && xC >= 0 && xC < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                xR").concat(w,"C").concat(e," = xTexelR").concat(w,"C").concat(e,";\n              "),e+1<m)){const t=u%2===0?a.util.nearestLargerEven(p):p;p%2===0&&u%2===1||p%2!==0&&u%2!==1?(g+="\n                  xCOffset = xC + ".concat(u%2," + ").concat(t,";\n\n                  if(xR >= 0 && xR < ").concat(s," &&\n                    xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                  }\n                "),p>1&&(g+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ".concat(s," &&\n                      xCOffset >= 0 && xCOffset < ").concat(i,") {\n                      xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                    }\n                  ")),g+="\n                  xR".concat(w,"C").concat(e+1," = vec4(\n                    xTexelR").concat(w,"C").concat(e,".zw, xTexelR").concat(w,"C").concat(e+2,".xy);\n                ")):g+="\n                  xCOffset = xC + ".concat(t,";\n\n                  if(xR >= 0 && xR < ").concat(s," &&\n                    xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR").concat(w,"C").concat(e+1," = xTexelR").concat(w,"C").concat(e+2,";\n                ")}}else e<m&&(g+="\n              if(xR >= 0 && xR < ".concat(s,") {\n            "),u%2===1?(g+="\n                xCOffset = xC + 1 - ".concat(d,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e+2," = vec4(0.);\n                }\n\n                xR").concat(w,"C").concat(e," = vec4(\n                  xTexelR").concat(w,"C").concat(e,".zw, xTexelR").concat(w,"C").concat(e+2,".zw);\n              "),e+1<m&&(g+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ".concat(d,";\n                  if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR").concat(w,"C").concat(e+1," = vec4(xTexelR").concat(w,"C").concat(e+2,".xy, final.xy);\n                "))):(g+="\n                if(xC >= 0 && xC < ".concat(i,") {\n                  xTexelR").concat(w,"C").concat(e," = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e," = vec4(0.);\n                }\n\n                xCOffset = xC + ").concat(d,";\n                if(xCOffset >= 0 && xCOffset < ").concat(i,") {\n                  xTexelR").concat(w,"C").concat(e+2," = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR").concat(w,"C").concat(e+2," = vec4(0.);\n                }\n\n                xR").concat(w,"C").concat(e," = vec4(\n                  xTexelR").concat(w,"C").concat(e,".xy, xTexelR").concat(w,"C").concat(e+2,".xy);\n              "),e+1<m&&(g+="\n                  xR".concat(w,"C").concat(e+1," = vec4(\n                    xTexelR").concat(w,"C").concat(e,".zw, xTexelR").concat(w,"C").concat(e+2,".zw);\n                "))),g+="}");e<m&&(g+="\n            vec4 wTexelR".concat(w,"C").concat(e," = getW(").concat(w,", ").concat(e,", d1, q);\n            wR").concat(w,"C").concat(e," = vec4(wTexelR").concat(w,"C").concat(e,".xz, wTexelR").concat(w,"C").concat(e,".xz);\n          "),e+1<m&&(g+="\n              vec4 wTexelR".concat(w,"C").concat(e+1," = getW(").concat(w,", ").concat(e+1,", d1, q);\n              wR").concat(w,"C").concat(e+1," =\n                vec4(wTexelR").concat(w,"C").concat(e+1,".xz, wTexelR").concat(w,"C").concat(e+1,".xz);")))}for(let a=0;a<f;a++)for(let t=0;t<m;t++)g+="dotProd += xR".concat(a,"C").concat(t," * wR").concat(a,"C").concat(t,";");let y="",v="";n&&(y=r?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):o?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),v="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(y,"\n\n      const ivec2 strides = ivec2(").concat(l,", ").concat(d,");\n      const ivec2 pads = ivec2(").concat(c,", ").concat(u,");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ").concat(g,"\n\n        vec4 result = dotProd;\n        ").concat(x,"\n        ").concat(v,"\n        setOutput(result);\n      }\n    ")}}const bm={kernelName:a.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u,dimRoundingMode:l}=r;let d=u;null==d&&(d=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,d),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(i," and dilations '").concat(d,"'"));const h=a.backend_util.computeConv2DInfo(o.shape,s.shape,i,d,c,l,!0);let p;return p=Object(a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new mm(h):new fm(h),n.runWebGLProgram(p,[o,s],"float32")}};class gm{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,a=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(o," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(t.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(t.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(e," - ").concat(r,";\n\n            if (xR < 0 || xR >= ").concat(t.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(t.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(a,";\n\n              if (xC < 0 || xC >= ").concat(t.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class ym{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,a=t.strideWidth,o=e-1-t.padInfo.top,s=n-1-t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(s,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(e,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(r,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(e," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const vm={kernelName:a.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,dy:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,filterShape:d}=r,h=a.backend_util.computeConv2DInfo(o.shape,d,i,c,u,l,!0),p=new gm(h);return n.runWebGLProgram(p,[o,s],"float32")}};const xm={kernelName:a.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,filter:s}=e,{strides:i,dilations:c,pad:u,dimRoundingMode:l,inputShape:d}=r,h=a.backend_util.computeConv2DInfo(d,s.shape,i,c,u,l,!0),p=new ym(h);return n.runWebGLProgram(p,[o,s],"float32")}};class wm{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const km={kernelName:a.Diag,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e,o=[...r.shape,...r.shape],s=a.util.sizeFromShape(r.shape),i=lp({inputs:{x:r},backend:n,attrs:{shape:[s]}}),c=new wm(s),u=n.runWebGLProgram(c,[i],i.dtype),l=lp({inputs:{x:u},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class Om{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:n,padInfo:r,strideHeight:a,strideWidth:o,filterHeight:s,filterWidth:i,dilationHeight:c,dilationWidth:u}=t,{top:l,left:d}=r;this.userCode="\n      const ivec2 strides = ivec2(".concat(a,", ").concat(o,");\n      const ivec2 pads = ivec2(").concat(l,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(s,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(e,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(u,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const Im={kernelName:a.Dilation2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s}=e,{strides:i,pad:c,dilations:u}=r,l=a.backend_util.computeDilation2DInfo(o.shape,s.shape,i,c,"NHWC",u);let d;const h=new Om(l);d=n.runWebGLProgram(h,[o,s],"float32");const p=lp({inputs:{x:d},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(d),p}},Sm=tp({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Nm={kernelName:a.Elu,backendName:"webgl",kernelFunc:Sm},Tm={kernelName:a.EluGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n}=t,{dy:r,y:o}=e,s=Object(a.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Uh("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,o.shape):new Vh("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,o.shape);return n.runWebGLProgram(s,[r,o],r.dtype)}},jm=ep({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Cm={kernelName:a.Equal,backendName:"webgl",kernelFunc:jm},Em=tp({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(a.backend_util.ERF_P,";\n  float a1 = ").concat(a.backend_util.ERF_A1,";\n  float a2 = ").concat(a.backend_util.ERF_A2,";\n  float a3 = ").concat(a.backend_util.ERF_A3,";\n  float a4 = ").concat(a.backend_util.ERF_A4,";\n  float a5 = ").concat(a.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),Am={kernelName:a.Erf,backendName:"webgl",kernelFunc:Em},_m="return exp(x);",Rm=tp({opSnippet:_m,packedOpSnippet:_m,cpuKernelImpl:Qd}),Dm={kernelName:a.Exp,backendName:"webgl",kernelFunc:Rm};function Fm(t){const{inputs:e,attrs:n,backend:r}=t,{dim:o}=n,{input:s}=e,i=s.shape.length,c=s.shape.slice();let u=o;return o<0&&(a.util.assert(-(i+1)<=o,()=>"Axis must be in the interval [".concat(-(i+1),", ").concat(i,"]")),u=i+o+1),c.splice(u,0,1),lp({inputs:{x:s},backend:r,attrs:{shape:c}})}const Mm={kernelName:a.ExpandDims,backendName:"webgl",kernelFunc:Fm},zm="return exp(x) - 1.0;",Lm=tp({opSnippet:zm,packedOpSnippet:zm,cpuKernelImpl:Zd}),Pm={kernelName:a.Expm1,backendName:"webgl",kernelFunc:Lm};class Bm{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const a=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),o=n?"".concat(r,".0"):"1.0";let s;if("real"===t)s="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error('FFT component must be either "real" or "imag", got '.concat(t,"."));s="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(a,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(s,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(r,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(r,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(o,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function Wm(t,e,n){const r=n.texData.get(t.dataId),o=a.util.sizeFromShape(t.shape),s=t.shape[t.shape.length-1],i=lp({inputs:{x:t},backend:n,attrs:{shape:[o/s,s]}}),c=i.shape,u=new Bm("real",c,e),l=new Bm("imag",c,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:c},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:c}],h=n.runWebGLProgram(u,d,"float32"),p=n.runWebGLProgram(l,d,"float32"),f=qh({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const m=lp({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}const Vm={kernelName:a.FFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Wm(r,!1,n)}};class Um{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}function Gm(t){const{backend:e,attrs:n}=t,{shape:r,value:o}=n;let{dtype:s}=n;if(s=s||a.util.inferDtype(o),"string"===s){const t=a.util.getArrayFromDType(s,a.util.sizeFromShape(r));return t.fill(o),e.makeTensorInfo(r,s,t)}{const t=new Um(r,o),n=t.getCustomSetupFunc(o);return e.runWebGLProgram(t,[],s,n)}}const Hm={kernelName:a.Fill,backendName:"webgl",kernelFunc:Gm};class qm{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(e," - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(e,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const Km={kernelName:a.FlipLeftRight,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n}=t;const{image:r}=e,a=n,o=new qm(r.shape);return a.runWebGLProgram(o,[r],r.dtype)}},Xm="return floor(x);",Ym=tp({opSnippet:Xm,packedOpSnippet:Xm,cpuKernelImpl:Jd}),Qm={kernelName:a.Floor,backendName:"webgl",kernelFunc:Ym},Zm=ep({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Jm={kernelName:a.FloorDiv,backendName:"webgl",kernelFunc:Zm};class $m{constructor(t){this.variableNames=["A"];const e=cd(),[n,r]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(r,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(e.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class tb{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=cd(),[n,r]=t;this.outputShape=t,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(r,".0, ").concat(n,".0);\n            vec4 values = ").concat(e.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(e.output," = result;\n      }\n    ")}}const eb={kernelName:a.FromPixels,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:o}=e;const{numChannels:s}=r,i="undefined"!==typeof HTMLVideoElement&&o instanceof HTMLVideoElement,c="undefined"!==typeof HTMLImageElement&&o instanceof HTMLImageElement,u="undefined"!==typeof ImageBitmap&&o instanceof ImageBitmap,[l,d]=i?[o.videoWidth,o.videoHeight]:[o.width,o.height],h=[d,l],p=[d,l,s];(c||i||u)&&(null==nb&&(nb=document.createElement("canvas").getContext("2d")),nb.canvas.width=l,nb.canvas.height=d,nb.drawImage(o,0,0,l,d),o=nb.canvas);const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=El.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),o);const m=Object(a.env)().getBool("WEBGL_PACK")?new tb(p):new $m(p),b=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),b}};let nb;const rb={kernelName:a.FusedConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s,bias:i,preluActivationWeights:c}=e,{strides:u,pad:l,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:m}=r,b=a.backend_util.convertConv2DDataFormat(d),g=a.backend_util.computeConv2DInfo(o.shape,s.shape,u,h,l,p,!1,b);let y;const v=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Object(a.env)().getBool("WEBGL_CONV_IM2COL")&&1===o.shape[0])y=Gf({x:o,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});else{const t=null!=i,e=null!=c,r="leakyrelu"===f,u=f?np(f,!1):null,l=new Bf(g,t,u,e,r),d=[o,s];if(i&&d.push(i),c&&d.push(c),r){const t=n.makeTensorInfo([],"float32",a.util.createScalarValue(m,"float32"));d.push(t),v.push(t)}y=n.runWebGLProgram(l,d,"float32")}else y=Uf({x:o,filter:s,convInfo:g,backend:n,bias:i,activation:f,preluActivationWeights:c,leakyreluAlpha:m});const x=lp({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return v.push(y),v.forEach(t=>n.disposeIntermediateTensorInfo(t)),x}};const ab={kernelName:a.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,filter:s,bias:i,preluActivationWeights:c}=e,{strides:u,pad:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let b=d;null==b&&(b=[1,1]),a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(u,b),()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(u," and dilations '").concat(b,"'"));const g=a.backend_util.computeConv2DInfo(o.shape,s.shape,u,b,l,h,!0),y=Object(a.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,v=p?np(p,y):null,x=[o,s],w=null!=i,k=null!=c,O="leakyrelu"===p;if(w&&x.push(i),k&&x.push(c),O){const t=n.makeTensorInfo([],"float32",a.util.createScalarValue(f,"float32"));x.push(t),m.push(t)}let I;I=y?new mm(g,w,v,k,O):new fm(g,w,v,k,O);const S=n.runWebGLProgram(I,x,"float32");return m.forEach(t=>n.disposeIntermediateTensorInfo(t)),S}};class ob{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Wd(e.length),a=Wd(n.length),o=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        ".concat(r," strides = ").concat(r,"(").concat(this.strides,");\n         void main() {\n          ").concat(a," coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ").concat(this.sliceDim,"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ").concat(o,";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ")}}const sb={kernelName:a.GatherNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{params:r,indices:o}=e,s=o.shape,i=s[s.length-1],[c,u,l,d]=a.backend_util.prepareAndValidate(r,o),h=lp({inputs:{x:o},backend:n,attrs:{shape:[u,i]}}),p=lp({inputs:{x:r},backend:n,attrs:{shape:[a.util.sizeFromShape(r.shape)/l,l]}}),f=new ob(i,d,[u,l]),m=n.runWebGLProgram(f,[p,h],p.dtype),b=lp({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class ib{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const n=Wd(this.rank),r=function(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<t.length;a++)2===a?r.push("int(getIndices(resRC.x, resRC.z))"):r.push("".concat(n[a]));return r.join()}(t);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}const cb={kernelName:a.GatherV2,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,indices:s}=e,{axis:i,batchDims:c}=r,u=a.util.parseAxisParam(i,o.shape)[0],l=a.backend_util.segment_util.collectGatherOpShapeInfo(o,s,u,c),d=a.util.sizeFromShape(s.shape),h=[],p=lp({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),f=lp({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,d/l.batchSize]}});h.push(p),h.push(f);const m=[l.batchSize,l.outerSize,d/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([o,s])||"string"===o.dtype){const t=n.bufferSync(f),e=n.bufferSync(p),r=$d(e,t,m);return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const b=new ib(p.shape,m),g=n.runWebGLProgram(b,[p,f],p.dtype);h.push(g);const y=lp({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(t=>n.disposeIntermediateTensorInfo(t)),y}},ub=ep({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:th,dtype:"bool"}),lb={kernelName:a.Greater,backendName:"webgl",kernelFunc:ub},db=ep({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),hb={kernelName:a.GreaterEqual,backendName:"webgl",kernelFunc:db};const pb={kernelName:a.IFFT,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Wm(r,!0,n)}},fb=tp({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),mb={kernelName:a.IsFinite,backendName:"webgl",kernelFunc:fb},bb=tp({opSnippet:"return float(isinf(x));",dtype:"bool"}),gb={kernelName:a.IsInf,backendName:"webgl",kernelFunc:bb},yb=tp({opSnippet:"return float(isnan(x));",dtype:"bool"}),vb={kernelName:a.IsNan,backendName:"webgl",kernelFunc:yb},xb=ep({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:eh,dtype:"bool"}),wb={kernelName:a.Less,backendName:"webgl",kernelFunc:xb},kb=ep({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Ob={kernelName:a.LessEqual,backendName:"webgl",kernelFunc:kb};const Ib={kernelName:a.LinSpace,backendName:"webgl",kernelFunc:function(t){const{backend:e,attrs:n}=t,{start:r,stop:a,num:o}=n,s=nh(r,a,o);return e.makeTensorInfo([s.length],"float32",s)}},Sb=tp({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:rh}),Nb={kernelName:a.Log,backendName:"webgl",kernelFunc:Sb},Tb=tp({opSnippet:"return log(1.0 + x);"}),jb={kernelName:a.Log1p,backendName:"webgl",kernelFunc:Tb},Cb=ep({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Eb={kernelName:a.LogicalAnd,backendName:"webgl",kernelFunc:Cb},Ab=tp({opSnippet:"return float(!(x >= 1.0));"}),_b={kernelName:a.LogicalNot,backendName:"webgl",kernelFunc:Ab},Rb=ep({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Db={kernelName:a.LogicalOr,backendName:"webgl",kernelFunc:Rb};class Fb{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[];const o=e,s=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(r,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(o,"; j <= ").concat(o,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(s,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class Mb{constructor(t,e,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,s=t[3]-1;let i;this.outputShape=t;const c="float(".concat(n,") + float(").concat(r,") * sum");i=.5===a?"inversesqrt(".concat(c,")"):1===a?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(a,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(o,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(o,"; j <= ").concat(o,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(s,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const zb={kernelName:a.LRN,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{depthRadius:s,bias:i,alpha:c,beta:u}=r,l=Object(a.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Mb(o.shape,s,i,c,u):new Fb(o.shape,s,i,c,u);return n.runWebGLProgram(l,[o],o.dtype)}};class Lb{constructor(t,e,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(e,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(e," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(r,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(r,")\n                * float(").concat(a,")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(a,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const Pb={kernelName:a.LRNGrad,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:a,y:o,dy:s}=e,{depthRadius:i,bias:c,alpha:u,beta:l}=r,d=new Lb(a.shape,i,c,u,l);return n.runWebGLProgram(d,[a,o,s],a.dtype)}};function Bb(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{reductionIndices:s,keepDims:i}=r,c=o.shape.length,u=a.util.parseAxisParam(s,o.shape);let l=u;const d=a.backend_util.getAxesPermutation(l,c),h=null!=d,p=n.shouldExecuteOnCPU([o]);let f=o;if(h){if(p){const t=n.texData.get(f.dataId).values,e=new Array(c);for(let n=0;n<e.length;n++)e[n]=o.shape[d[n]];const r=yh(t,o.shape,o.dtype,d,e);f=n.makeTensorInfo(e,o.dtype);n.texData.get(f.dataId).values=r}else f=gp(o,d,n);l=a.backend_util.getInnerMostAxes(l.length,c)}a.backend_util.assertAxesAreInnerMostDims("max",l,c);const[m,b]=a.backend_util.computeOutAndReduceShapes(f.shape,l);let g,y=m;if(i&&(y=a.backend_util.expandShapeToKeepDim(m,u)),p){const t=n.texData.get(f.dataId).values,e=ah(t,a.util.sizeFromShape(b),y,o.dtype);g=n.makeTensorInfo(y,o.dtype);n.texData.get(g.dataId).values=e}else g=function(t,e,n,r){const o=a.util.sizeFromShape(e),s=lp({inputs:{x:t},attrs:{shape:[a.util.sizeFromShape(t.shape)/o,o]},backend:r}),i=fp(s,t.dtype,"max",r),c=lp({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),c}(f,b,y,n);return h&&n.disposeIntermediateTensorInfo(f),g}const Wb={kernelName:a.Max,backendName:"webgl",kernelFunc:Bb},Vb=ep({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:oh}),Ub={kernelName:a.Maximum,backendName:"webgl",kernelFunc:Vb};const Gb={kernelName:a.MaxPool,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e;sd(o,"maxPool");const{filterSize:s,strides:i,pad:c,dimRoundingMode:u}=r;a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,1),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(1,"'"));const l=a.backend_util.computePool2DInfo(o.shape,s,i,1,c,u);if(1===l.filterWidth&&1===l.filterHeight&&a.util.arraysEqual(l.inShape,l.outShape))return Gh({inputs:{x:o},backend:n});const d=new Jp(l,"max",!1);return n.runWebGLProgram(d,[o],o.dtype)}};const Hb={kernelName:a.MaxPool3D,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{filterSize:s,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=r,d=a.backend_util.computePool3DInfo(o.shape,s,i,[1,1,1],c,l,u),h=new $p(d,"max",!1);return n.runWebGLProgram(h,[o],o.dtype)}};class qb{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,a=t.effectiveFilterHeight,o=t.effectiveFilterWidth,s=a-1-t.padInfo.top,i=o-1-t.padInfo.left,c=a*o-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(a,";\n          wR += ").concat(r,") {\n          float dyR = float(dyRCorner + wR) / ").concat(e,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(o," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Kb{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,s=t.dilationWidth,i=t.effectiveFilterDepth,c=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=i-1-t.padInfo.front,d=c-1-t.padInfo.top,h=u-1-t.padInfo.left,p=i*c*u-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(l,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(a,") {\n          float dyD = float(dyDCorner + wD) / ").concat(e,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(t.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(o,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(t.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(u,";\n                wC += ").concat(s,") {\n              float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(t.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(u," +\n                  wR * ").concat(u," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Xb={kernelName:a.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s}=e,i=s,{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=r,h=a.backend_util.computePool3DInfo(i.shape,c,u,[1,1,1],l,d),p=new $p(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new Kb(h),b=n.runWebGLProgram(m,[o,f],i.dtype);return n.disposeIntermediateTensorInfo(f),b}};const Yb={kernelName:a.MaxPoolGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{dy:o,input:s,output:i}=e,c=s;sd([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:h}=r,p=a.backend_util.computePool2DInfo(c.shape,u,l,1,d,h),f=new Jp(p,"max",!0),m=n.runWebGLProgram(f,[c],c.dtype),b=new qb(p),g=n.runWebGLProgram(b,[o,m],c.dtype);return n.disposeIntermediateTensorInfo(m),g}};const Qb={kernelName:a.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{x:o}=e,{filterSize:s,strides:i,pad:c,includeBatchInIndex:u}=n,l=r;a.util.assert(4===o.shape.length,()=>"Error in maxPool: input must be rank 4 but got rank ".concat(o.shape.length,"."));const d=[1,1];a.util.assert(a.backend_util.eitherStridesOrDilationsAreOne(i,d),()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(i," and dilations '").concat(d,"'"));const h=a.backend_util.computePool2DInfo(o.shape,s,i,d,c),[p,f]=function(t,e,n,r){let a=new Jp(n,"max",!1);const o=r.runWebGLProgram(a,[t],"float32");return a=new Jp(n,"max",!0,!0,e),[o,r.runWebGLProgram(a,[t],"float32")]}(o,u,h,l);return[p,f]}};const Zb={kernelName:a.Mean,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{x:o}=e,{keepDims:s,axis:i}=n,c=r,u=o.shape.length,l=a.util.parseAxisParam(i,o.shape);let d=l;const h=a.backend_util.getAxesPermutation(d,u),p=null!=h,f=c.shouldExecuteOnCPU([o]),m=[];let b=o;if(p){if(f){const t=c.texData.get(b.dataId).values,e=new Array(u);for(let r=0;r<e.length;r++)e[r]=o.shape[h[r]];const n=yh(t,o.shape,o.dtype,h,e);b=c.makeTensorInfo(e,o.dtype);c.texData.get(b.dataId).values=n}else b=gp(o,h,c);m.push(b),d=a.backend_util.getInnerMostAxes(d.length,u)}a.backend_util.assertAxesAreInnerMostDims("sum",d,u);const[g,y]=a.backend_util.computeOutAndReduceShapes(b.shape,d);let v=g;s&&(v=a.backend_util.expandShapeToKeepDim(g,l));const x=function(t,e,n,r){const o=a.util.sizeFromShape(e),s=lp({inputs:{x:t},attrs:{shape:[a.util.sizeFromShape(t.shape)/o,o]},backend:r}),i=fp(s,"float32","mean",r),c=lp({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),c}(b,y,v,c);for(const a of m)c.disposeIntermediateTensorInfo(a);return x}};const Jb={kernelName:a.Min,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=a.util.parseAxisParam(s,o.shape);let l=u;const d=a.backend_util.getAxesPermutation(l,c);let h=o;null!=d&&(h=xp({inputs:{x:o},backend:n,attrs:{perm:d}}),l=a.backend_util.getInnerMostAxes(l.length,o.shape.length)),a.backend_util.assertAxesAreInnerMostDims("min",l,c);const[p,f]=a.backend_util.computeOutAndReduceShapes(h.shape,l),m=lp({inputs:{x:h},backend:n,attrs:{shape:[-1,a.util.sizeFromShape(f)]}}),b=fp(m,m.dtype,"min",n);let g;if(i){g=lp({inputs:{x:b},backend:n,attrs:{shape:a.backend_util.expandShapeToKeepDim(p,u)}})}else g=lp({inputs:{x:b},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),null!=d&&n.disposeIntermediateTensorInfo(h),g}},$b=ep({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:sh}),tg={kernelName:a.Minimum,backendName:"webgl",kernelFunc:$b};class eg{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Wd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c="reflect"===n?0:1;this.userCode=1!==r?"\n      ".concat(a," start = ").concat(a,"(").concat(o,");\n      ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(r,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(a," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class ng{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Wd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=wh("rc",r),c=wh("source",r),u="".concat(i[r-1]," < ").concat(this.outputShape[r-1]),l=1===r?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===r){const t="\n        ".concat(a," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(a," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[r-1]," += 1;\n        if(").concat(u,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ")}else{const t="\n        ".concat(a," source = rc;\n        ").concat(a," lt = ").concat(a,"(lessThan(source, start));\n        ").concat(a," gte = ").concat(a,"(greaterThanEqual(source, end));\n        ").concat(a," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(a," rc = outputLoc;\n        ").concat(t,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        ").concat(i[r-1]," += 1;\n        if(").concat(u,") {\n          ").concat(t,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n        rc = outputLoc;\n        ").concat(i[r-2]," += 1;\n        if(").concat(i[r-2]," < ").concat(this.outputShape[r-2],") {\n          ").concat(t,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          ").concat(i[r-1]," += 1;\n          if(").concat(u,") {\n            ").concat(t,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(o,");\n      const ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const rg={kernelName:a.MirrorPad,backendName:"webgl",kernelFunc:t=>{let{inputs:e,backend:n,attrs:r}=t;const{x:o}=e,{paddings:s,mode:i}=r,c=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ng(o.shape,s,i):new eg(o.shape,s,i);return n.runWebGLProgram(c,[o],o.dtype)}},ag=ep({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),og={kernelName:a.Mod,backendName:"webgl",kernelFunc:ag};class sg{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(e-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(e-1,"));\n      }\n    ")}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}const ig=ep({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),cg={kernelName:a.RealDiv,backendName:"webgl",kernelFunc:ig},ug="return a - b;",lg=ep({opSnippet:ug,packedOpSnippet:ug,supportsComplex:!0,cpuKernelImpl:mh}),dg={kernelName:a.Sub,backendName:"webgl",kernelFunc:lg};function hg(t){const{inputs:e,backend:n,attrs:r}=t,{logits:o}=e,{dim:s}=r,i=a.util.parseAxisParam([s],o.shape),c=Bb({inputs:{x:o},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=a.backend_util.expandShapeToKeepDim(c.shape,i),l=lp({inputs:{x:c},backend:n,attrs:{shape:u}}),d=lg({inputs:{a:o,b:l},backend:n}),h=Rm({inputs:{x:d},backend:n}),p=yp({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=lp({inputs:{x:p},backend:n,attrs:{shape:u}}),m=ig({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}const pg={kernelName:a.Softmax,backendName:"webgl",kernelFunc:hg};const fg={kernelName:a.Multinomial,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{logits:a}=e,{numSamples:o,seed:s,normalized:i}=r,c=i?a:hg({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new sg(u,l,o),h=d.getCustomSetupFunc(s),p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}},mg="return -x;";const bg={kernelName:a.Neg,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const t=n.texData.get(r.dataId),[e,a]=ch(t.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,e)}let o;return o=Object(a.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new zh(r.shape,mg):new jh(r.shape,mg),n.runWebGLProgram(o,[r],r.dtype)}},gg=a.kernel_impls.nonMaxSuppressionV3Impl;const yg={kernelName:a.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(t){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u}=r,l=n.readSync(o.dataId),d=n.readSync(s.dataId),{selectedIndices:h}=gg(l,d,i,c,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},vg=a.kernel_impls.nonMaxSuppressionV4Impl;const xg={kernelName:a.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(t){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,padToMaxOutputSize:l}=r,d=n.readSync(o.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:f}=vg(d,h,i,c,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},wg=a.kernel_impls.nonMaxSuppressionV5Impl;const kg={kernelName:a.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(t){a.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:o,scores:s}=e,{maxOutputSize:i,iouThreshold:c,scoreThreshold:u,softNmsSigma:l}=r,d=n.readSync(o.dataId),h=n.readSync(s.dataId),p=i,f=c,m=u,b=l,{selectedIndices:g,selectedScores:y}=wg(d,h,p,f,m,b);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Og{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(r,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const Ig={kernelName:a.OneHot,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:o}=e,{depth:s,onValue:i,offValue:c}=r,u=a.util.sizeFromShape(o.shape),l=new Og(u,s,i,c),d=lp({inputs:{x:o},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[d],o.dtype);n.disposeIntermediateTensorInfo(d);const p=lp({inputs:{x:h},backend:n,attrs:{shape:[...o.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function Sg(t){const{inputs:e,backend:n}=t,{x:r}=e;if("complex64"===r.dtype){const t=xf({inputs:{input:r},backend:n}),e=Sg({inputs:{x:t},backend:n}),a=Ff({inputs:{input:r},backend:n}),o=Sg({inputs:{x:a},backend:n}),s=qh({inputs:{real:e,imag:o},backend:n});return n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(o),s}return Gm({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Ng={kernelName:a.ZerosLike,backendName:"webgl",kernelFunc:Sg};const Tg={kernelName:a.OnesLike,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:r}=e,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const e=xf({inputs:{input:a},backend:r}),n=t({inputs:{x:e},backend:r}),o=Ff({inputs:{input:a},backend:r}),s=Sg({inputs:{x:o},backend:r}),i=qh({inputs:{real:n,imag:s},backend:r});return r.disposeIntermediateTensorInfo(e),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(s),i}return Gm({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const jg={kernelName:a.Pack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{axis:o}=r;if(1===e.length)return Fm({inputs:{input:e[0]},backend:n,attrs:{dim:o}});const s=e[0].shape,i=e[0].dtype;e.forEach(t=>{a.util.assertShapesMatch(s,t.shape,"All tensors passed to stack must have matching shapes"),a.util.assert(i===t.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],u=Lf({inputs:e.map(t=>{const e=Fm({inputs:{input:t},backend:n,attrs:{dim:o}});return c.push(e),e}),backend:n,attrs:{axis:o}});return c.forEach(t=>n.disposeIntermediateTensorInfo(t)),u}};class Cg{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Wd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      ".concat(a," start = ").concat(a,"(").concat(o,");\n      ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(").concat(n,"));\n        } else {\n          ").concat(a," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(o,";\n        int end = ").concat(s,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(").concat(n,"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class Eg{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((e,n)=>e[0]+t[n]+e[1]);const r=t.length,a=Wd(r),o=e.map(t=>t[0]).join(","),s=e.map((e,n)=>e[0]+t[n]).join(","),i=wh("rc",r),c=wh("source",r),u="".concat(i[r-1]," < ").concat(this.outputShape[r-1]),l=1===r?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(a," rc = outputLoc;"),"".concat(i[r-1]," += 1;\n       if(").concat(u,") {\n      "),1===r?"":"}\n       rc = outputLoc;\n       ".concat(i[r-2]," += 1;\n       if(").concat(i[r-2]," < ").concat(this.outputShape[r-2],") {"),1===r?"":"  ".concat(i[r-1]," += 1;\n         if(").concat(u,") {")],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===r?2:4;f<m;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(").concat(n,");\n        } else {\n          ").concat(a," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(l,");\n        }\n      ");p+=1===r?"} ":"}}",this.userCode="\n      const ".concat(a," start = ").concat(a,"(").concat(o,");\n      const ").concat(a," end = ").concat(a,"(").concat(s,");\n\n      void main() {\n        ").concat(a," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const Ag=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{paddings:s,constantValue:i}=r,c=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Eg(o.shape,s,i):new Cg(o.shape,s,i);return n.runWebGLProgram(c,[o],o.dtype)},_g={kernelName:a.PadV2,backendName:"webgl",kernelFunc:Ag},Rg=ep({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Dg={kernelName:a.Pow,backendName:"webgl",kernelFunc:Rg};const Fg={kernelName:a.Prod,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{axis:s,keepDims:i}=r,c=o.shape.length,u=[],l=a.util.parseAxisParam(s,o.shape);let d=l;const h=a.backend_util.getAxesPermutation(d,c);let p,f=o;if(null!=h&&(f=xp({inputs:{x:o},backend:n,attrs:{perm:h}}),d=a.backend_util.getInnerMostAxes(d.length,c),u.push(f)),a.backend_util.assertAxesAreInnerMostDims("prod",d,c),n.shouldExecuteOnCPU([f])){const t=n.texData.get(f.dataId).values,{outVals:e,outShape:r,outDtype:a}=uh(f.shape,f.dtype,t,d);p=n.makeTensorInfo(r,a,e)}else{const[t,e]=a.backend_util.computeOutAndReduceShapes(f.shape,d),r=a.util.sizeFromShape(e),s=lp({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=fp(s,Object(a.sumOutType)(o.dtype),"prod",n);p=lp({inputs:{x:i},backend:n,attrs:{shape:t}}),u.push(s),u.push(i)}if(i){u.push(p);const t=a.backend_util.expandShapeToKeepDim(p.shape,l);p=lp({inputs:{x:p},backend:n,attrs:{shape:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),p}},Mg=t=>{const{backend:e,attrs:n}=t,{start:r,stop:a,step:o,dtype:s}=n,i=lh(r,a,o,s);return e.makeTensorInfo([i.length],s,i)},zg={kernelName:a.Range,backendName:"webgl",kernelFunc:Mg},Lg=tp({opSnippet:"return 1.0 / x;"}),Pg={kernelName:a.Reciprocal,backendName:"webgl",kernelFunc:Lg},Bg=tp({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Wg={kernelName:a.Relu,backendName:"webgl",kernelFunc:Bg},Vg=tp({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Ug={kernelName:a.Relu6,backendName:"webgl",kernelFunc:Vg};class Gg{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=t;this.outputShape=[o,e,n,c];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class Hg{constructor(t,e,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,s,i,c]=t;this.outputShape=[o,e,n,c];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],",\n          ").concat(u[1]/l[1],");\n      const vec3 inputShapeRC = vec3(").concat(s,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const qg={kernelName:a.ResizeBilinear,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:o}=e,{alignCorners:s,halfPixelCenters:i,size:c}=r,[u,l]=c,d=Object(a.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Hg(o.shape,u,l,s,i):new Gg(o.shape,u,l,s,i);return n.runWebGLProgram(d,[o],"float32")}};class Kg{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,s]=t,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],u=i[0]/c[0],l=i[1]/c[1],d=1/u,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(r-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(a-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const Xg={kernelName:a.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:o}=e,{alignCorners:s}=r,i=new Kg(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class Yg{constructor(t,e,n,r,a){this.variableNames=["A"],this.outputShape=[];const[o,s,i,c]=t;this.outputShape=[o,e,n,c];const u=[r&&e>1?s-1:s,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(u[0]/l[0],",\n          ").concat(u[1]/l[1],");\n      const vec2 inputShapeRC = vec2(").concat(s,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}const Qg={kernelName:a.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a}=e,{alignCorners:o,halfPixelCenters:s,size:i}=r,[c,u]=i,l=new Yg(a.shape,c,u,o,s);return n.runWebGLProgram(l,[a],a.dtype)}};class Zg{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,r,a]=e,[,o,s]=t,i=[n&&o>1?r-1:r,n&&s>1?a-1:a],c=[n&&o>1?o-1:o,n&&s>1?s-1:s],u=i[0]/c[0],l=i[1]/c[1],d=1/u,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(u,");\n        const float widthScale = float(").concat(l,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(o,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(s,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const Jg={kernelName:a.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{images:a,dy:o}=e,{alignCorners:s}=r,i=new Zg(o.shape,a.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}};class $g{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=t,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(t[0]," - coord - 1));\n        }\n      "));const r=t.map((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(r)).join(","),a=Wd(n);this.userCode="\n      void main() {\n        ".concat(a," coords = getOutputCoords();\n        setOutput(getX(").concat(r,"));\n      }\n    ")}}class ty{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=t;const r=wh("rc",n),a="".concat(r[n-1]," + 1 < ").concat(this.outputShape[n-1]),o="".concat(r[n-2]," + 1 < ").concat(this.outputShape[n-2]),s=Wd(n);function i(n){const r=t.map((r,a)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?"".concat(t[n]," - ").concat(r[n]," - 1"):"".concat(r[n])}(a,n)),a=r.join(","),o=r.slice(-2).join(",");return"getChannel(getX(".concat(a,"), vec2(").concat(o,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(t[0]," - rc - 1),\n            ").concat(t[0]," - rc - 1);\n          if(").concat(a,"){\n              result.g = getChannel(getX(").concat(t[0]," - (rc  + 1) - 1),\n                ").concat(t[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(s," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(t){return i(t)}(r.slice()),";\n          if(").concat(a,"){\n            result.g = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",i(t)}(r.slice()),";\n          }\n          if(").concat(o,") {\n            result.b = ").concat(function(t){return t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice()),";\n            if(").concat(a,") {\n              result.a = ").concat(function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",i(t)}(r.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const ey={kernelName:a.Reverse,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{dims:s}=r,i=o.shape.length,c=a.util.parseAxisParam(s,o.shape);if(0===i)return Gh({inputs:{x:o},backend:n});const u=Object(a.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ty(o.shape,c):new $g(o.shape,c);return n.runWebGLProgram(u,[o],o.dtype)}};class ny{constructor(t,e,n,r){this.variableNames=["Image"],this.outputShape=[];const o=t[1],s=t[2],i=Math.sin(e).toFixed(3),c=Math.cos(e).toFixed(3);this.outputShape=t;const[u,l]=a.backend_util.getImageCenter(r,o,s),d=u.toFixed(3),h=l.toFixed(3);let p="";p="number"===typeof n?"float outputValue = ".concat(n.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(n.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ".concat(d,") * ").concat(c," - (float(y) - ").concat(h,") * ").concat(i,";\n          float coordYFloat = (float(x) - ").concat(d,") * ").concat(i," + (float(y) - ").concat(h,") * ").concat(c,";\n          int coordX = int(round(coordXFloat + ").concat(d,"));\n          int coordY = int(round(coordYFloat + ").concat(h,"));\n          ").concat(p,"\n          if(coordX >= 0 && coordX < ").concat(s," && coordY >= 0 && coordY < ").concat(o,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const ry={kernelName:a.RotateWithOffset,backendName:"webgl",kernelFunc:t=>{let{inputs:e,attrs:n,backend:r}=t;const{image:a}=e,{radians:o,fillValue:s,center:i}=n,c=r,u=new ny(a.shape,o,s,i);return c.runWebGLProgram(u,[a],a.dtype)}},ay=tp({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),oy={kernelName:a.Round,backendName:"webgl",kernelFunc:ay},sy=tp({opSnippet:"return inversesqrt(x);",cpuKernelImpl:dh}),iy={kernelName:a.Rsqrt,backendName:"webgl",kernelFunc:sy};class cy{constructor(t,e,n,r,a,o){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const s=Wd(a.length),i=Wd(o.length);let c="";1===n?c="i":2===n&&(c="i, j");const u="getIndices(".concat(c,")");let l="";1===r?l="i":2===r&&(l="i, coords[1]");const d="getUpdates(".concat(l,")"),h=e>1?"strides[j]":"strides";this.userCode="\n        ".concat(s," strides = ").concat(s,"(").concat(a,");\n\n        void main() {\n          ").concat(i," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(t,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(e,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(h,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(d,";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ")}}const uy={kernelName:a.ScatterNd,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{indices:o,updates:s}=e,{shape:i}=r,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=a.backend_util.calculateShapes(s,o,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,o.dtype);const f=lp({inputs:{x:o},backend:n,attrs:{shape:[u,c]}}),m=lp({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),b=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new cy(u,c,f.shape.length,m.shape.length,d,p),y=n.runWebGLProgram(g,[m,f,b],m.dtype),v=lp({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),v}};class ly{constructor(t,e,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let r=0;r<e.length;r++)s.push("".concat(n[r])),r<t&&o.push("".concat(n[r]));r=o.join(),a=s.join()}const o=Wd(n);this.userCode="\n      void main() {\n        ".concat(o," resRC = getOutputCoords();\n        float cVal = getC(").concat(r,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(a,"));\n        } else {\n          setOutput(getB(").concat(a,"));\n        }\n      }\n    ")}}const dy={kernelName:a.Select,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{condition:r,t:o,e:s}=e,i=new ly(r.shape.length,o.shape,o.shape.length);return n.runWebGLProgram(i,[r,o,s],Object(a.upcastType)(o.dtype,s.dtype))}},hy=tp({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(a.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(a.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),py={kernelName:a.Selu,backendName:"webgl",kernelFunc:hy},fy=tp({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),my={kernelName:a.Sigmoid,backendName:"webgl",kernelFunc:fy},by=tp({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),gy={kernelName:a.Sign,backendName:"webgl",kernelFunc:by},yy=tp({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),vy={kernelName:a.Sin,backendName:"webgl",kernelFunc:yy},xy=tp({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),wy={kernelName:a.Sinh,backendName:"webgl",kernelFunc:xy},ky=tp({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Oy={kernelName:a.Softplus,backendName:"webgl",kernelFunc:ky},Iy={kernelName:a.SpaceToBatchND,backendName:"webgl",kernelFunc:t=>{const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{blockShape:s,paddings:i}=r;a.util.assert(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=s.reduce((t,e)=>t*e),u=[[0,0]];u.push(...i);for(let a=1+s.length;a<o.shape.length;++a)u.push([0,0]);const l=[],d=Ag({inputs:{x:o},backend:n,attrs:{paddings:u,constantValue:0}}),h=a.backend_util.getReshaped(d.shape,s,c,!1),p=a.backend_util.getPermuted(h.length,s.length,!1),f=a.backend_util.getReshapedPermuted(d.shape,s,c,!1),m=lp({inputs:{x:d},backend:n,attrs:{shape:h}}),b=xp({inputs:{x:m},backend:n,attrs:{perm:p}}),g=lp({inputs:{x:b},backend:n,attrs:{shape:f}});return l.push(d),l.push(m),l.push(b),l.forEach(t=>n.disposeIntermediateTensorInfo(t)),g}};const Sy={kernelName:a.SparseToDense,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:o,sparseValues:s,defaultValue:i}=e,{outputShape:c}=r,{sliceRank:u,numUpdates:l,strides:d,outputSize:h}=a.backend_util.calculateShapes(s,o,c),p=new cy(l,u,o.shape.length,s.shape.length,d,[h,1],!1),f=n.runWebGLProgram(p,[s,o,i],s.dtype),m=lp({inputs:{x:f},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(f),m}};const Ny={kernelName:a.SplitV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{numOrSizeSplits:s,axis:i}=r,c=a.util.parseAxisParam(i,o.shape)[0],u=a.backend_util.prepareSplitSize(o,s,c),l=o.shape.length,d=new Array(l).fill(0),h=o.shape.slice();return u.map(t=>{const e=[...h];e[c]=t;const r=ff({inputs:{x:o},backend:n,attrs:{begin:d,size:e}});return d[c]+=t,r})}},Ty=tp({opSnippet:"return sqrt(x);"}),jy={kernelName:a.Sqrt,backendName:"webgl",kernelFunc:Ty},Cy=tp({opSnippet:"return x * x;"}),Ey={kernelName:a.Square,backendName:"webgl",kernelFunc:Cy},Ay=ep({opSnippet:"return (a - b) * (a - b);",packedOpSnippet:"return (a - b) * (a - b);"}),_y={kernelName:a.SquaredDifference,backendName:"webgl",kernelFunc:Ay};const Ry={kernelName:a.Step,backendName:"webgl",kernelFunc:function(t){let{inputs:e,attrs:n,backend:r}=t;const{x:a}=e,o=Ch+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),s=new jh(a.shape,o);return r.runWebGLProgram(s,[a],a.dtype)}};class Dy{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Wd(n.length),o=Wd(n.length);let s="";if(1===r)s="coords * strides + begin";else{let t=0;s=n.map((e,r)=>(t++,1===n.length?"coords * strides[".concat(r,"] + begin[").concat(r,"]"):"coords[".concat(t-1,"] * strides[").concat(r,"] + begin[").concat(r,"]"))).join(",")}this.userCode="\n      ".concat(a," begin = ").concat(a,"(").concat(t,");\n      ").concat(a," strides = ").concat(a,"(").concat(e,");\n\n      void main() {\n        ").concat(o," coords = getOutputCoords();\n        setOutput(getX(").concat(s,"));\n      }\n    ")}}const Fy={kernelName:a.StridedSlice,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{begin:s,end:i,strides:c,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:f,$begin:m,$strides:b,size:g,newShape:y,outShape:v}=a.slice_util.sliceInfo(o.shape,s,i,c,u,l,d,h,p),x=lp({inputs:{x:o},backend:n,attrs:{shape:y}});let w;if(f){const t=ff({inputs:{x:x},backend:n,attrs:{begin:m,size:g}});w=lp({inputs:{x:t},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(t)}else if(v.some(t=>0===t))w=n.makeTensorInfo(v,o.dtype,[]);else{if(n.shouldExecuteOnCPU([x])){const t=n.texData.get(x.dataId).values,e=Object(a.buffer)(x.shape,x.dtype,t),r=fh(v,e,b,m);w=n.makeTensorInfo(v,x.dtype,r.values)}else{const t=new Dy(m,b,v);w=n.runWebGLProgram(t,[x],x.dtype)}}const k=lp({inputs:{x:w},backend:n,attrs:{shape:v}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),k}},My=tp({opSnippet:"return tan(x);"}),zy={kernelName:a.Tan,backendName:"webgl",kernelFunc:My},Ly=tp({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Py={kernelName:a.Tanh,backendName:"webgl",kernelFunc:Ly};class By{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let o=0;o<n.length;o++)n[o]=t[o]*e[o];this.outputShape=n,this.rank=n.length;const r=Wd(this.rank),a=function(t){const e=t.length;if(e>5)throw Error("Tile for rank ".concat(e," is not yet supported"));if(1===e)return"imod(resRC, ".concat(t[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<t.length;a++)r.push("imod(".concat(n[a],", ").concat(t[a],")"));return r.join()}(t);this.userCode="\n      void main() {\n        ".concat(r," resRC = getOutputCoords();\n        setOutput(getA(").concat(a,"));\n      }\n    ")}}function Wy(t){const{inputs:e,backend:n,attrs:r}=t,{x:o}=e,{reps:s}=r;if("string"===o.dtype){const t=n.readSync(o.dataId).map(t=>a.util.decodeString(t)),e=Object(a.buffer)(o.shape,o.dtype,t),r=bh(e,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new By(o.shape,s);return n.runWebGLProgram(i,[o],o.dtype)}const Vy={kernelName:a.Tile,backendName:"webgl",kernelFunc:Wy};const Uy={kernelName:a.TopK,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:a}=e,{k:o,sorted:s}=r,i=n.readSync(a.dataId),[c,u]=gh(i,a.shape,a.dtype,o,s);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};const Gy={kernelName:a.Unique,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:a}=n,{x:o}=e;sd(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(o.dataId),{outputValues:i,outputShape:c,indices:u}=vh(s,a,o.shape,o.dtype);return[r.makeTensorInfo(c,o.dtype,i),r.makeTensorInfo([u.length],"int32",u)]}};const Hy={kernelName:a.Unpack,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{value:a}=e;let{axis:o}=r;o<0&&(o+=a.shape.length);const s=a,i=s.shape.length,c=a.shape[o],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(u[l++]=s.shape[m]);const d=[],h=new Array(i).fill(0),p=s.shape.slice();p[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[o]=m;const t=ff({inputs:{x:s},backend:n,attrs:{begin:h,size:p}}),e=lp({inputs:{x:t},backend:n,attrs:{shape:u}});f[m]=e,d.push(t)}return d.forEach(t=>n.disposeIntermediateTensorInfo(t)),f}};class qy{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,a=t.inSize,o=t.numSegments,s=o*Math.ceil(a/n);this.outputShape=[r,s];const i=4*Math.floor(n/4),c=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return initializationValue;\n        }\n      "));let d="";a%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(a,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(o,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(o,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(u,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(u,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(u,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(u,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const Ky=[zb,Pb,Op,Ip,Np,jp,Ap,Dp,Fp,Mp,Bp,Wp,Up,Hp,Yp,Kp,Zp,ef,tf,af,of,sf,lf,bf,gf,kf,Sf,jf,Af,Kh,Pf,Qf,Zf,Hf,$f,tm,Jf,nm,am,sm,lm,dm,pm,vm,xm,bm,km,Im,Nm,Tm,Cm,Am,Dm,Mm,Pm,Vm,Hm,Km,Qm,Jm,eb,rb,ab,sb,cb,lb,hb,Hh,pb,Mf,mb,gb,vb,Qh,wb,Ob,Ib,jb,Nb,Eb,_b,Db,Wb,Hb,Gb,Xb,Yb,Qb,Ub,Zb,Jb,tg,rg,og,fg,up,bg,yg,xg,kg,vf,Ig,Tg,jg,_g,Dg,$h,Fg,zg,wf,cg,Pg,Ug,Wg,dp,qg,Xg,Qg,Jg,ey,ry,oy,iy,uy,dy,py,my,gy,vy,wy,mf,pg,Oy,Iy,Sy,Ny,jy,Ey,_y,Ry,Fy,dg,vp,zy,Py,Vy,Uy,wp,Gy,Hy,{kernelName:a.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:r}=t,{x:o,segmentIds:s}=e,{numSegments:i}=r,c=o.shape.length,u=[];let l=0;const d=a.backend_util.getAxesPermutation([l],c);let h=o;null!=d&&(h=xp({inputs:{x:o},backend:n,attrs:{perm:d}}),u.push(h),l=a.backend_util.getInnerMostAxes(1,c)[0]);const p=a.backend_util.segment_util.computeOutShape(h.shape,l,i),f=a.util.sizeFromShape([h.shape[l]]),m=lp({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});u.push(m);const b=Object(a.sumOutType)(o.dtype),g=(t,e,r,o,s)=>{const i=t.shape[0],c=t.shape[1],l=a.backend_util.segment_util.segOpComputeOptimalWindowSize(c,s),d=new qy({windowSize:l,inSize:c,batchSize:i,numSegments:s},e),h=n.compileAndRun(d,[t,r],o);if(u.push(h),h.shape[1]===s)return h;const p=Mg({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=Wy({inputs:{x:p},backend:n,attrs:{reps:[c/l]}});u.push(p),u.push(f);return g(h,e,f,o,s)},y=lp({inputs:{x:g(m,"unsortedSegmentSum",s,b,i)},backend:n,attrs:{shape:p}});let v=y;if(null!=d){u.push(y);const t=a.backend_util.getUndoAxesPermutation(d);v=xp({inputs:{x:v},backend:n,attrs:{perm:t}})}return u.forEach(t=>n.disposeIntermediateTensorInfo(t)),v}},Ng];for(const Xy of Ky)Object(a.registerKernel)(Xy);a.version_core,za.b},,function(t,e,n){"use strict";var r=n(171),a="function"===typeof Symbol&&Symbol.for,o=a?Symbol.for("react.element"):60103,s=a?Symbol.for("react.portal"):60106,i=a?Symbol.for("react.fragment"):60107,c=a?Symbol.for("react.strict_mode"):60108,u=a?Symbol.for("react.profiler"):60114,l=a?Symbol.for("react.provider"):60109,d=a?Symbol.for("react.context"):60110,h=a?Symbol.for("react.forward_ref"):60112,p=a?Symbol.for("react.suspense"):60113,f=a?Symbol.for("react.memo"):60115,m=a?Symbol.for("react.lazy"):60116,b="function"===typeof Symbol&&Symbol.iterator;function g(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function x(t,e,n){this.props=t,this.context=e,this.refs=v,this.updater=n||y}function w(){}function k(t,e,n){this.props=t,this.context=e,this.refs=v,this.updater=n||y}x.prototype.isReactComponent={},x.prototype.setState=function(t,e){if("object"!==typeof t&&"function"!==typeof t&&null!=t)throw Error(g(85));this.updater.enqueueSetState(this,t,e,"setState")},x.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},w.prototype=x.prototype;var O=k.prototype=new w;O.constructor=k,r(O,x.prototype),O.isPureReactComponent=!0;var I={current:null},S=Object.prototype.hasOwnProperty,N={key:!0,ref:!0,__self:!0,__source:!0};function T(t,e,n){var r,a={},s=null,i=null;if(null!=e)for(r in void 0!==e.ref&&(i=e.ref),void 0!==e.key&&(s=""+e.key),e)S.call(e,r)&&!N.hasOwnProperty(r)&&(a[r]=e[r]);var c=arguments.length-2;if(1===c)a.children=n;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];a.children=u}if(t&&t.defaultProps)for(r in c=t.defaultProps)void 0===a[r]&&(a[r]=c[r]);return{$$typeof:o,type:t,key:s,ref:i,props:a,_owner:I.current}}function j(t){return"object"===typeof t&&null!==t&&t.$$typeof===o}var C=/\/+/g,E=[];function A(t,e,n,r){if(E.length){var a=E.pop();return a.result=t,a.keyPrefix=e,a.func=n,a.context=r,a.count=0,a}return{result:t,keyPrefix:e,func:n,context:r,count:0}}function _(t){t.result=null,t.keyPrefix=null,t.func=null,t.context=null,t.count=0,10>E.length&&E.push(t)}function R(t,e,n){return null==t?0:function t(e,n,r,a){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case o:case s:c=!0}}if(c)return r(a,e,""===n?"."+D(e,0):n),1;if(c=0,n=""===n?".":n+":",Array.isArray(e))for(var u=0;u<e.length;u++){var l=n+D(i=e[u],u);c+=t(i,l,r,a)}else if(null===e||"object"!==typeof e?l=null:l="function"===typeof(l=b&&e[b]||e["@@iterator"])?l:null,"function"===typeof l)for(e=l.call(e),u=0;!(i=e.next()).done;)c+=t(i=i.value,l=n+D(i,u++),r,a);else if("object"===i)throw r=""+e,Error(g(31,"[object Object]"===r?"object with keys {"+Object.keys(e).join(", ")+"}":r,""));return c}(t,"",e,n)}function D(t,e){return"object"===typeof t&&null!==t&&null!=t.key?function(t){var e={"=":"=0",":":"=2"};return"$"+(""+t).replace(/[=:]/g,(function(t){return e[t]}))}(t.key):e.toString(36)}function F(t,e){t.func.call(t.context,e,t.count++)}function M(t,e,n){var r=t.result,a=t.keyPrefix;t=t.func.call(t.context,e,t.count++),Array.isArray(t)?z(t,r,n,(function(t){return t})):null!=t&&(j(t)&&(t=function(t,e){return{$$typeof:o,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}(t,a+(!t.key||e&&e.key===t.key?"":(""+t.key).replace(C,"$&/")+"/")+n)),r.push(t))}function z(t,e,n,r,a){var o="";null!=n&&(o=(""+n).replace(C,"$&/")+"/"),R(t,M,e=A(e,o,r,a)),_(e)}var L={current:null};function P(){var t=L.current;if(null===t)throw Error(g(321));return t}var B={ReactCurrentDispatcher:L,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:I,IsSomeRendererActing:{current:!1},assign:r};e.Children={map:function(t,e,n){if(null==t)return t;var r=[];return z(t,r,null,e,n),r},forEach:function(t,e,n){if(null==t)return t;R(t,F,e=A(null,null,e,n)),_(e)},count:function(t){return R(t,(function(){return null}),null)},toArray:function(t){var e=[];return z(t,e,null,(function(t){return t})),e},only:function(t){if(!j(t))throw Error(g(143));return t}},e.Component=x,e.Fragment=i,e.Profiler=u,e.PureComponent=k,e.StrictMode=c,e.Suspense=p,e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=B,e.cloneElement=function(t,e,n){if(null===t||void 0===t)throw Error(g(267,t));var a=r({},t.props),s=t.key,i=t.ref,c=t._owner;if(null!=e){if(void 0!==e.ref&&(i=e.ref,c=I.current),void 0!==e.key&&(s=""+e.key),t.type&&t.type.defaultProps)var u=t.type.defaultProps;for(l in e)S.call(e,l)&&!N.hasOwnProperty(l)&&(a[l]=void 0===e[l]&&void 0!==u?u[l]:e[l])}var l=arguments.length-2;if(1===l)a.children=n;else if(1<l){u=Array(l);for(var d=0;d<l;d++)u[d]=arguments[d+2];a.children=u}return{$$typeof:o,type:t.type,key:s,ref:i,props:a,_owner:c}},e.createContext=function(t,e){return void 0===e&&(e=null),(t={$$typeof:d,_calculateChangedBits:e,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:t},t.Consumer=t},e.createElement=T,e.createFactory=function(t){var e=T.bind(null,t);return e.type=t,e},e.createRef=function(){return{current:null}},e.forwardRef=function(t){return{$$typeof:h,render:t}},e.isValidElement=j,e.lazy=function(t){return{$$typeof:m,_ctor:t,_status:-1,_result:null}},e.memo=function(t,e){return{$$typeof:f,type:t,compare:void 0===e?null:e}},e.useCallback=function(t,e){return P().useCallback(t,e)},e.useContext=function(t,e){return P().useContext(t,e)},e.useDebugValue=function(){},e.useEffect=function(t,e){return P().useEffect(t,e)},e.useImperativeHandle=function(t,e,n){return P().useImperativeHandle(t,e,n)},e.useLayoutEffect=function(t,e){return P().useLayoutEffect(t,e)},e.useMemo=function(t,e){return P().useMemo(t,e)},e.useReducer=function(t,e,n){return P().useReducer(t,e,n)},e.useRef=function(t){return P().useRef(t)},e.useState=function(t){return P().useState(t)},e.version="16.14.0"},function(t,e,n){"use strict";var r=n(54),a=n(171),o=n(236);function s(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(s(227));function i(t,e,n,r,a,o,s,i,c){var u=Array.prototype.slice.call(arguments,3);try{e.apply(n,u)}catch(l){this.onError(l)}}var c=!1,u=null,l=!1,d=null,h={onError:function(t){c=!0,u=t}};function p(t,e,n,r,a,o,s,l,d){c=!1,u=null,i.apply(h,arguments)}var f=null,m=null,b=null;function g(t,e,n){var r=t.type||"unknown-event";t.currentTarget=b(n),function(t,e,n,r,a,o,i,h,f){if(p.apply(this,arguments),c){if(!c)throw Error(s(198));var m=u;c=!1,u=null,l||(l=!0,d=m)}}(r,e,void 0,t),t.currentTarget=null}var y=null,v={};function x(){if(y)for(var t in v){var e=v[t],n=y.indexOf(t);if(!(-1<n))throw Error(s(96,t));if(!k[n]){if(!e.extractEvents)throw Error(s(97,t));for(var r in k[n]=e,n=e.eventTypes){var a=void 0,o=n[r],i=e,c=r;if(O.hasOwnProperty(c))throw Error(s(99,c));O[c]=o;var u=o.phasedRegistrationNames;if(u){for(a in u)u.hasOwnProperty(a)&&w(u[a],i,c);a=!0}else o.registrationName?(w(o.registrationName,i,c),a=!0):a=!1;if(!a)throw Error(s(98,r,t))}}}}function w(t,e,n){if(I[t])throw Error(s(100,t));I[t]=e,S[t]=e.eventTypes[n].dependencies}var k=[],O={},I={},S={};function N(t){var e,n=!1;for(e in t)if(t.hasOwnProperty(e)){var r=t[e];if(!v.hasOwnProperty(e)||v[e]!==r){if(v[e])throw Error(s(102,e));v[e]=r,n=!0}}n&&x()}var T=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),j=null,C=null,E=null;function A(t){if(t=m(t)){if("function"!==typeof j)throw Error(s(280));var e=t.stateNode;e&&(e=f(e),j(t.stateNode,t.type,e))}}function _(t){C?E?E.push(t):E=[t]:C=t}function R(){if(C){var t=C,e=E;if(E=C=null,A(t),e)for(t=0;t<e.length;t++)A(e[t])}}function D(t,e){return t(e)}function F(t,e,n,r,a){return t(e,n,r,a)}function M(){}var z=D,L=!1,P=!1;function B(){null===C&&null===E||(M(),R())}function W(t,e,n){if(P)return t(e,n);P=!0;try{return z(t,e,n)}finally{P=!1,B()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,U=Object.prototype.hasOwnProperty,G={},H={};function q(t,e,n,r,a,o){this.acceptsBooleans=2===e||3===e||4===e,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o}var K={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(t){K[t]=new q(t,0,!1,t,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(t){var e=t[0];K[e]=new q(e,1,!1,t[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(t){K[t]=new q(t,2,!1,t.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(t){K[t]=new q(t,2,!1,t,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(t){K[t]=new q(t,3,!1,t.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(t){K[t]=new q(t,3,!0,t,null,!1)})),["capture","download"].forEach((function(t){K[t]=new q(t,4,!1,t,null,!1)})),["cols","rows","size","span"].forEach((function(t){K[t]=new q(t,6,!1,t,null,!1)})),["rowSpan","start"].forEach((function(t){K[t]=new q(t,5,!1,t.toLowerCase(),null,!1)}));var X=/[\-:]([a-z])/g;function Y(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(t){var e=t.replace(X,Y);K[e]=new q(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(t){K[t]=new q(t,1,!1,t.toLowerCase(),null,!1)})),K.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(t){K[t]=new q(t,1,!1,t.toLowerCase(),null,!0)}));var Q=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Z(t,e,n,r){var a=K.hasOwnProperty(e)?K[e]:null;(null!==a?0===a.type:!r&&(2<e.length&&("o"===e[0]||"O"===e[0])&&("n"===e[1]||"N"===e[1])))||(function(t,e,n,r){if(null===e||"undefined"===typeof e||function(t,e,n,r){if(null!==n&&0===n.type)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(t=t.toLowerCase().slice(0,5))&&"aria-"!==t);default:return!1}}(t,e,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!e;case 4:return!1===e;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}(e,n,a,r)&&(n=null),r||null===a?function(t){return!!U.call(H,t)||!U.call(G,t)&&(V.test(t)?H[t]=!0:(G[t]=!0,!1))}(e)&&(null===n?t.removeAttribute(e):t.setAttribute(e,""+n)):a.mustUseProperty?t[a.propertyName]=null===n?3!==a.type&&"":n:(e=a.attributeName,r=a.attributeNamespace,null===n?t.removeAttribute(e):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}Q.hasOwnProperty("ReactCurrentDispatcher")||(Q.ReactCurrentDispatcher={current:null}),Q.hasOwnProperty("ReactCurrentBatchConfig")||(Q.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,$="function"===typeof Symbol&&Symbol.for,tt=$?Symbol.for("react.element"):60103,et=$?Symbol.for("react.portal"):60106,nt=$?Symbol.for("react.fragment"):60107,rt=$?Symbol.for("react.strict_mode"):60108,at=$?Symbol.for("react.profiler"):60114,ot=$?Symbol.for("react.provider"):60109,st=$?Symbol.for("react.context"):60110,it=$?Symbol.for("react.concurrent_mode"):60111,ct=$?Symbol.for("react.forward_ref"):60112,ut=$?Symbol.for("react.suspense"):60113,lt=$?Symbol.for("react.suspense_list"):60120,dt=$?Symbol.for("react.memo"):60115,ht=$?Symbol.for("react.lazy"):60116,pt=$?Symbol.for("react.block"):60121,ft="function"===typeof Symbol&&Symbol.iterator;function mt(t){return null===t||"object"!==typeof t?null:"function"===typeof(t=ft&&t[ft]||t["@@iterator"])?t:null}function bt(t){if(null==t)return null;if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t;switch(t){case nt:return"Fragment";case et:return"Portal";case at:return"Profiler";case rt:return"StrictMode";case ut:return"Suspense";case lt:return"SuspenseList"}if("object"===typeof t)switch(t.$$typeof){case st:return"Context.Consumer";case ot:return"Context.Provider";case ct:var e=t.render;return e=e.displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case dt:return bt(t.type);case pt:return bt(t.render);case ht:if(t=1===t._status?t._result:null)return bt(t)}return null}function gt(t){var e="";do{t:switch(t.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break t;default:var r=t._debugOwner,a=t._debugSource,o=bt(t.type);n=null,r&&(n=bt(r.type)),r=o,o="",a?o=" (at "+a.fileName.replace(J,"")+":"+a.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}e+=n,t=t.return}while(t);return e}function yt(t){switch(typeof t){case"boolean":case"number":case"object":case"string":case"undefined":return t;default:return""}}function vt(t){var e=t.type;return(t=t.nodeName)&&"input"===t.toLowerCase()&&("checkbox"===e||"radio"===e)}function xt(t){t._valueTracker||(t._valueTracker=function(t){var e=vt(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return a.call(this)},set:function(t){r=""+t,o.call(this,t)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(t){r=""+t},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}(t))}function wt(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=vt(t)?t.checked?"true":"false":t.value),(t=r)!==n&&(e.setValue(t),!0)}function kt(t,e){var n=e.checked;return a({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:t._wrapperState.initialChecked})}function Ot(t,e){var n=null==e.defaultValue?"":e.defaultValue,r=null!=e.checked?e.checked:e.defaultChecked;n=yt(null!=e.value?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===e.type||"radio"===e.type?null!=e.checked:null!=e.value}}function It(t,e){null!=(e=e.checked)&&Z(t,"checked",e,!1)}function St(t,e){It(t,e);var n=yt(e.value),r=e.type;if(null!=n)"number"===r?(0===n&&""===t.value||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if("submit"===r||"reset"===r)return void t.removeAttribute("value");e.hasOwnProperty("value")?Tt(t,e.type,n):e.hasOwnProperty("defaultValue")&&Tt(t,e.type,yt(e.defaultValue)),null==e.checked&&null!=e.defaultChecked&&(t.defaultChecked=!!e.defaultChecked)}function Nt(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!("submit"!==r&&"reset"!==r||void 0!==e.value&&null!==e.value))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}""!==(n=t.name)&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,""!==n&&(t.name=n)}function Tt(t,e,n){"number"===e&&t.ownerDocument.activeElement===t||(null==n?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}function jt(t,e){return t=a({children:void 0},e),(e=function(t){var e="";return r.Children.forEach(t,(function(t){null!=t&&(e+=t)})),e}(e.children))&&(t.children=e),t}function Ct(t,e,n,r){if(t=t.options,e){e={};for(var a=0;a<n.length;a++)e["$"+n[a]]=!0;for(n=0;n<t.length;n++)a=e.hasOwnProperty("$"+t[n].value),t[n].selected!==a&&(t[n].selected=a),a&&r&&(t[n].defaultSelected=!0)}else{for(n=""+yt(n),e=null,a=0;a<t.length;a++){if(t[a].value===n)return t[a].selected=!0,void(r&&(t[a].defaultSelected=!0));null!==e||t[a].disabled||(e=t[a])}null!==e&&(e.selected=!0)}}function Et(t,e){if(null!=e.dangerouslySetInnerHTML)throw Error(s(91));return a({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function At(t,e){var n=e.value;if(null==n){if(n=e.children,e=e.defaultValue,null!=n){if(null!=e)throw Error(s(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(s(93));n=n[0]}e=n}null==e&&(e=""),n=e}t._wrapperState={initialValue:yt(n)}}function _t(t,e){var n=yt(e.value),r=yt(e.defaultValue);null!=n&&((n=""+n)!==t.value&&(t.value=n),null==e.defaultValue&&t.defaultValue!==n&&(t.defaultValue=n)),null!=r&&(t.defaultValue=""+r)}function Rt(t){var e=t.textContent;e===t._wrapperState.initialValue&&""!==e&&null!==e&&(t.value=e)}var Dt="http://www.w3.org/1999/xhtml",Ft="http://www.w3.org/2000/svg";function Mt(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function zt(t,e){return null==t||"http://www.w3.org/1999/xhtml"===t?Mt(e):"http://www.w3.org/2000/svg"===t&&"foreignObject"===e?"http://www.w3.org/1999/xhtml":t}var Lt,Pt=function(t){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,r,a){MSApp.execUnsafeLocalFunction((function(){return t(e,n)}))}:t}((function(t,e){if(t.namespaceURI!==Ft||"innerHTML"in t)t.innerHTML=e;else{for((Lt=Lt||document.createElement("div")).innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Lt.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}}));function Bt(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&3===n.nodeType)return void(n.nodeValue=e)}t.textContent=e}function Wt(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var Vt={animationend:Wt("Animation","AnimationEnd"),animationiteration:Wt("Animation","AnimationIteration"),animationstart:Wt("Animation","AnimationStart"),transitionend:Wt("Transition","TransitionEnd")},Ut={},Gt={};function Ht(t){if(Ut[t])return Ut[t];if(!Vt[t])return t;var e,n=Vt[t];for(e in n)if(n.hasOwnProperty(e)&&e in Gt)return Ut[t]=n[e];return t}T&&(Gt=document.createElement("div").style,"AnimationEvent"in window||(delete Vt.animationend.animation,delete Vt.animationiteration.animation,delete Vt.animationstart.animation),"TransitionEvent"in window||delete Vt.transitionend.transition);var qt=Ht("animationend"),Kt=Ht("animationiteration"),Xt=Ht("animationstart"),Yt=Ht("transitionend"),Qt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Zt=new("function"===typeof WeakMap?WeakMap:Map);function Jt(t){var e=Zt.get(t);return void 0===e&&(e=new Map,Zt.set(t,e)),e}function $t(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do{0!==(1026&(e=t).effectTag)&&(n=e.return),t=e.return}while(t)}return 3===e.tag?n:null}function te(t){if(13===t.tag){var e=t.memoizedState;if(null===e&&(null!==(t=t.alternate)&&(e=t.memoizedState)),null!==e)return e.dehydrated}return null}function ee(t){if($t(t)!==t)throw Error(s(188))}function ne(t){if(!(t=function(t){var e=t.alternate;if(!e){if(null===(e=$t(t)))throw Error(s(188));return e!==t?null:t}for(var n=t,r=e;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return ee(a),t;if(o===r)return ee(a),e;o=o.sibling}throw Error(s(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,c=a.child;c;){if(c===n){i=!0,n=a,r=o;break}if(c===r){i=!0,r=a,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,r=a;break}if(c===r){i=!0,r=o,n=a;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==r)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?t:e}(t)))return null;for(var e=t;;){if(5===e.tag||6===e.tag)return e;if(e.child)e.child.return=e,e=e.child;else{if(e===t)break;for(;!e.sibling;){if(!e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}}return null}function re(t,e){if(null==e)throw Error(s(30));return null==t?e:Array.isArray(t)?Array.isArray(e)?(t.push.apply(t,e),t):(t.push(e),t):Array.isArray(e)?[t].concat(e):[t,e]}function ae(t,e,n){Array.isArray(t)?t.forEach(e,n):t&&e.call(n,t)}var oe=null;function se(t){if(t){var e=t._dispatchListeners,n=t._dispatchInstances;if(Array.isArray(e))for(var r=0;r<e.length&&!t.isPropagationStopped();r++)g(t,e[r],n[r]);else e&&g(t,e,n);t._dispatchListeners=null,t._dispatchInstances=null,t.isPersistent()||t.constructor.release(t)}}function ie(t){if(null!==t&&(oe=re(oe,t)),t=oe,oe=null,t){if(ae(t,se),oe)throw Error(s(95));if(l)throw t=d,l=!1,d=null,t}}function ce(t){return(t=t.target||t.srcElement||window).correspondingUseElement&&(t=t.correspondingUseElement),3===t.nodeType?t.parentNode:t}function ue(t){if(!T)return!1;var e=(t="on"+t)in document;return e||((e=document.createElement("div")).setAttribute(t,"return;"),e="function"===typeof e[t]),e}var le=[];function de(t){t.topLevelType=null,t.nativeEvent=null,t.targetInst=null,t.ancestors.length=0,10>le.length&&le.push(t)}function he(t,e,n,r){if(le.length){var a=le.pop();return a.topLevelType=t,a.eventSystemFlags=r,a.nativeEvent=e,a.targetInst=n,a}return{topLevelType:t,eventSystemFlags:r,nativeEvent:e,targetInst:n,ancestors:[]}}function pe(t){var e=t.targetInst,n=e;do{if(!n){t.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(e=n.tag)&&6!==e||t.ancestors.push(n),n=Tn(r)}while(n);for(n=0;n<t.ancestors.length;n++){e=t.ancestors[n];var a=ce(t.nativeEvent);r=t.topLevelType;var o=t.nativeEvent,s=t.eventSystemFlags;0===n&&(s|=64);for(var i=null,c=0;c<k.length;c++){var u=k[c];u&&(u=u.extractEvents(r,e,o,a,s))&&(i=re(i,u))}ie(i)}}function fe(t,e,n){if(!n.has(t)){switch(t){case"scroll":Xe(e,"scroll",!0);break;case"focus":case"blur":Xe(e,"focus",!0),Xe(e,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":ue(t)&&Xe(e,t,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Qt.indexOf(t)&&Ke(t,e)}n.set(t,null)}}var me,be,ge,ye=!1,ve=[],xe=null,we=null,ke=null,Oe=new Map,Ie=new Map,Se=[],Ne="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Te="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function je(t,e,n,r,a){return{blockedOn:t,topLevelType:e,eventSystemFlags:32|n,nativeEvent:a,container:r}}function Ce(t,e){switch(t){case"focus":case"blur":xe=null;break;case"dragenter":case"dragleave":we=null;break;case"mouseover":case"mouseout":ke=null;break;case"pointerover":case"pointerout":Oe.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ie.delete(e.pointerId)}}function Ee(t,e,n,r,a,o){return null===t||t.nativeEvent!==o?(t=je(e,n,r,a,o),null!==e&&(null!==(e=jn(e))&&be(e)),t):(t.eventSystemFlags|=r,t)}function Ae(t){var e=Tn(t.target);if(null!==e){var n=$t(e);if(null!==n)if(13===(e=n.tag)){if(null!==(e=te(n)))return t.blockedOn=e,void o.unstable_runWithPriority(t.priority,(function(){ge(n)}))}else if(3===e&&n.stateNode.hydrate)return void(t.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}t.blockedOn=null}function _e(t){if(null!==t.blockedOn)return!1;var e=Je(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);if(null!==e){var n=jn(e);return null!==n&&be(n),t.blockedOn=e,!1}return!0}function Re(t,e,n){_e(t)&&n.delete(e)}function De(){for(ye=!1;0<ve.length;){var t=ve[0];if(null!==t.blockedOn){null!==(t=jn(t.blockedOn))&&me(t);break}var e=Je(t.topLevelType,t.eventSystemFlags,t.container,t.nativeEvent);null!==e?t.blockedOn=e:ve.shift()}null!==xe&&_e(xe)&&(xe=null),null!==we&&_e(we)&&(we=null),null!==ke&&_e(ke)&&(ke=null),Oe.forEach(Re),Ie.forEach(Re)}function Fe(t,e){t.blockedOn===e&&(t.blockedOn=null,ye||(ye=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,De)))}function Me(t){function e(e){return Fe(e,t)}if(0<ve.length){Fe(ve[0],t);for(var n=1;n<ve.length;n++){var r=ve[n];r.blockedOn===t&&(r.blockedOn=null)}}for(null!==xe&&Fe(xe,t),null!==we&&Fe(we,t),null!==ke&&Fe(ke,t),Oe.forEach(e),Ie.forEach(e),n=0;n<Se.length;n++)(r=Se[n]).blockedOn===t&&(r.blockedOn=null);for(;0<Se.length&&null===(n=Se[0]).blockedOn;)Ae(n),null===n.blockedOn&&Se.shift()}var ze={},Le=new Map,Pe=new Map,Be=["abort","abort",qt,"animationEnd",Kt,"animationIteration",Xt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Yt,"transitionEnd","waiting","waiting"];function We(t,e){for(var n=0;n<t.length;n+=2){var r=t[n],a=t[n+1],o="on"+(a[0].toUpperCase()+a.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:e},Pe.set(r,e),Le.set(r,o),ze[a]=o}}We("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),We("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),We(Be,2);for(var Ve="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Ue=0;Ue<Ve.length;Ue++)Pe.set(Ve[Ue],0);var Ge=o.unstable_UserBlockingPriority,He=o.unstable_runWithPriority,qe=!0;function Ke(t,e){Xe(e,t,!1)}function Xe(t,e,n){var r=Pe.get(e);switch(void 0===r?2:r){case 0:r=Ye.bind(null,e,1,t);break;case 1:r=Qe.bind(null,e,1,t);break;default:r=Ze.bind(null,e,1,t)}n?t.addEventListener(e,r,!0):t.addEventListener(e,r,!1)}function Ye(t,e,n,r){L||M();var a=Ze,o=L;L=!0;try{F(a,t,e,n,r)}finally{(L=o)||B()}}function Qe(t,e,n,r){He(Ge,Ze.bind(null,t,e,n,r))}function Ze(t,e,n,r){if(qe)if(0<ve.length&&-1<Ne.indexOf(t))t=je(null,t,e,n,r),ve.push(t);else{var a=Je(t,e,n,r);if(null===a)Ce(t,r);else if(-1<Ne.indexOf(t))t=je(a,t,e,n,r),ve.push(t);else if(!function(t,e,n,r,a){switch(e){case"focus":return xe=Ee(xe,t,e,n,r,a),!0;case"dragenter":return we=Ee(we,t,e,n,r,a),!0;case"mouseover":return ke=Ee(ke,t,e,n,r,a),!0;case"pointerover":var o=a.pointerId;return Oe.set(o,Ee(Oe.get(o)||null,t,e,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Ie.set(o,Ee(Ie.get(o)||null,t,e,n,r,a)),!0}return!1}(a,t,e,n,r)){Ce(t,r),t=he(t,r,null,e);try{W(pe,t)}finally{de(t)}}}}function Je(t,e,n,r){if(null!==(n=Tn(n=ce(r)))){var a=$t(n);if(null===a)n=null;else{var o=a.tag;if(13===o){if(null!==(n=te(a)))return n;n=null}else if(3===o){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;n=null}else a!==n&&(n=null)}}t=he(t,r,n,e);try{W(pe,t)}finally{de(t)}return null}var $e={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},tn=["Webkit","ms","Moz","O"];function en(t,e,n){return null==e||"boolean"===typeof e||""===e?"":n||"number"!==typeof e||0===e||$e.hasOwnProperty(t)&&$e[t]?(""+e).trim():e+"px"}function nn(t,e){for(var n in t=t.style,e)if(e.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=en(n,e[n],r);"float"===n&&(n="cssFloat"),r?t.setProperty(n,a):t[n]=a}}Object.keys($e).forEach((function(t){tn.forEach((function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),$e[e]=$e[t]}))}));var rn=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function an(t,e){if(e){if(rn[t]&&(null!=e.children||null!=e.dangerouslySetInnerHTML))throw Error(s(137,t,""));if(null!=e.dangerouslySetInnerHTML){if(null!=e.children)throw Error(s(60));if("object"!==typeof e.dangerouslySetInnerHTML||!("__html"in e.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=e.style&&"object"!==typeof e.style)throw Error(s(62,""))}}function on(t,e){if(-1===t.indexOf("-"))return"string"===typeof e.is;switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var sn=Dt;function cn(t,e){var n=Jt(t=9===t.nodeType||11===t.nodeType?t:t.ownerDocument);e=S[e];for(var r=0;r<e.length;r++)fe(e[r],t,n)}function un(){}function ln(t){if("undefined"===typeof(t=t||("undefined"!==typeof document?document:void 0)))return null;try{return t.activeElement||t.body}catch(e){return t.body}}function dn(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function hn(t,e){var n,r=dn(t);for(t=0;r;){if(3===r.nodeType){if(n=t+r.textContent.length,t<=e&&n>=e)return{node:r,offset:e-t};t=n}t:{for(;r;){if(r.nextSibling){r=r.nextSibling;break t}r=r.parentNode}r=void 0}r=dn(r)}}function pn(){for(var t=window,e=ln();e instanceof t.HTMLIFrameElement;){try{var n="string"===typeof e.contentWindow.location.href}catch(r){n=!1}if(!n)break;e=ln((t=e.contentWindow).document)}return e}function fn(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&("input"===e&&("text"===t.type||"search"===t.type||"tel"===t.type||"url"===t.type||"password"===t.type)||"textarea"===e||"true"===t.contentEditable)}var mn=null,bn=null;function gn(t,e){switch(t){case"button":case"input":case"select":case"textarea":return!!e.autoFocus}return!1}function yn(t,e){return"textarea"===t||"option"===t||"noscript"===t||"string"===typeof e.children||"number"===typeof e.children||"object"===typeof e.dangerouslySetInnerHTML&&null!==e.dangerouslySetInnerHTML&&null!=e.dangerouslySetInnerHTML.__html}var vn="function"===typeof setTimeout?setTimeout:void 0,xn="function"===typeof clearTimeout?clearTimeout:void 0;function wn(t){for(;null!=t;t=t.nextSibling){var e=t.nodeType;if(1===e||3===e)break}return t}function kn(t){t=t.previousSibling;for(var e=0;t;){if(8===t.nodeType){var n=t.data;if("$"===n||"$!"===n||"$?"===n){if(0===e)return t;e--}else"/$"===n&&e++}t=t.previousSibling}return null}var On=Math.random().toString(36).slice(2),In="__reactInternalInstance$"+On,Sn="__reactEventHandlers$"+On,Nn="__reactContainere$"+On;function Tn(t){var e=t[In];if(e)return e;for(var n=t.parentNode;n;){if(e=n[Nn]||n[In]){if(n=e.alternate,null!==e.child||null!==n&&null!==n.child)for(t=kn(t);null!==t;){if(n=t[In])return n;t=kn(t)}return e}n=(t=n).parentNode}return null}function jn(t){return!(t=t[In]||t[Nn])||5!==t.tag&&6!==t.tag&&13!==t.tag&&3!==t.tag?null:t}function Cn(t){if(5===t.tag||6===t.tag)return t.stateNode;throw Error(s(33))}function En(t){return t[Sn]||null}function An(t){do{t=t.return}while(t&&5!==t.tag);return t||null}function _n(t,e){var n=t.stateNode;if(!n)return null;var r=f(n);if(!r)return null;n=r[e];t:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(t=t.type)||"input"===t||"select"===t||"textarea"===t)),t=!r;break t;default:t=!1}if(t)return null;if(n&&"function"!==typeof n)throw Error(s(231,e,typeof n));return n}function Rn(t,e,n){(e=_n(t,n.dispatchConfig.phasedRegistrationNames[e]))&&(n._dispatchListeners=re(n._dispatchListeners,e),n._dispatchInstances=re(n._dispatchInstances,t))}function Dn(t){if(t&&t.dispatchConfig.phasedRegistrationNames){for(var e=t._targetInst,n=[];e;)n.push(e),e=An(e);for(e=n.length;0<e--;)Rn(n[e],"captured",t);for(e=0;e<n.length;e++)Rn(n[e],"bubbled",t)}}function Fn(t,e,n){t&&n&&n.dispatchConfig.registrationName&&(e=_n(t,n.dispatchConfig.registrationName))&&(n._dispatchListeners=re(n._dispatchListeners,e),n._dispatchInstances=re(n._dispatchInstances,t))}function Mn(t){t&&t.dispatchConfig.registrationName&&Fn(t._targetInst,null,t)}function zn(t){ae(t,Dn)}var Ln=null,Pn=null,Bn=null;function Wn(){if(Bn)return Bn;var t,e,n=Pn,r=n.length,a="value"in Ln?Ln.value:Ln.textContent,o=a.length;for(t=0;t<r&&n[t]===a[t];t++);var s=r-t;for(e=1;e<=s&&n[r-e]===a[o-e];e++);return Bn=a.slice(t,1<e?1-e:void 0)}function Vn(){return!0}function Un(){return!1}function Gn(t,e,n,r){for(var a in this.dispatchConfig=t,this._targetInst=e,this.nativeEvent=n,t=this.constructor.Interface)t.hasOwnProperty(a)&&((e=t[a])?this[a]=e(n):"target"===a?this.target=r:this[a]=n[a]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:Un,this.isPropagationStopped=Un,this}function Hn(t,e,n,r){if(this.eventPool.length){var a=this.eventPool.pop();return this.call(a,t,e,n,r),a}return new this(t,e,n,r)}function qn(t){if(!(t instanceof this))throw Error(s(279));t.destructor(),10>this.eventPool.length&&this.eventPool.push(t)}function Kn(t){t.eventPool=[],t.getPooled=Hn,t.release=qn}a(Gn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var t=this.nativeEvent;t&&(t.preventDefault?t.preventDefault():"unknown"!==typeof t.returnValue&&(t.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var t=this.nativeEvent;t&&(t.stopPropagation?t.stopPropagation():"unknown"!==typeof t.cancelBubble&&(t.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:Un,destructor:function(){var t,e=this.constructor.Interface;for(t in e)this[t]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Un,this._dispatchInstances=this._dispatchListeners=null}}),Gn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Gn.extend=function(t){function e(){}function n(){return r.apply(this,arguments)}var r=this;e.prototype=r.prototype;var o=new e;return a(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=a({},r.Interface,t),n.extend=r.extend,Kn(n),n},Kn(Gn);var Xn=Gn.extend({data:null}),Yn=Gn.extend({data:null}),Qn=[9,13,27,32],Zn=T&&"CompositionEvent"in window,Jn=null;T&&"documentMode"in document&&(Jn=document.documentMode);var $n=T&&"TextEvent"in window&&!Jn,tr=T&&(!Zn||Jn&&8<Jn&&11>=Jn),er=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ar(t,e){switch(t){case"keyup":return-1!==Qn.indexOf(e.keyCode);case"keydown":return 229!==e.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function or(t){return"object"===typeof(t=t.detail)&&"data"in t?t.data:null}var sr=!1;var ir={eventTypes:nr,extractEvents:function(t,e,n,r){var a;if(Zn)t:{switch(t){case"compositionstart":var o=nr.compositionStart;break t;case"compositionend":o=nr.compositionEnd;break t;case"compositionupdate":o=nr.compositionUpdate;break t}o=void 0}else sr?ar(t,n)&&(o=nr.compositionEnd):"keydown"===t&&229===n.keyCode&&(o=nr.compositionStart);return o?(tr&&"ko"!==n.locale&&(sr||o!==nr.compositionStart?o===nr.compositionEnd&&sr&&(a=Wn()):(Pn="value"in(Ln=r)?Ln.value:Ln.textContent,sr=!0)),o=Xn.getPooled(o,e,n,r),a?o.data=a:null!==(a=or(n))&&(o.data=a),zn(o),a=o):a=null,(t=$n?function(t,e){switch(t){case"compositionend":return or(e);case"keypress":return 32!==e.which?null:(rr=!0,er);case"textInput":return(t=e.data)===er&&rr?null:t;default:return null}}(t,n):function(t,e){if(sr)return"compositionend"===t||!Zn&&ar(t,e)?(t=Wn(),Bn=Pn=Ln=null,sr=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return tr&&"ko"!==e.locale?null:e.data;default:return null}}(t,n))?((e=Yn.getPooled(nr.beforeInput,e,n,r)).data=t,zn(e)):e=null,null===a?e:null===e?a:[a,e]}},cr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ur(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return"input"===e?!!cr[t.type]:"textarea"===e}var lr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function dr(t,e,n){return(t=Gn.getPooled(lr.change,t,e,n)).type="change",_(n),zn(t),t}var hr=null,pr=null;function fr(t){ie(t)}function mr(t){if(wt(Cn(t)))return t}function br(t,e){if("change"===t)return e}var gr=!1;function yr(){hr&&(hr.detachEvent("onpropertychange",vr),pr=hr=null)}function vr(t){if("value"===t.propertyName&&mr(pr))if(t=dr(pr,t,ce(t)),L)ie(t);else{L=!0;try{D(fr,t)}finally{L=!1,B()}}}function xr(t,e,n){"focus"===t?(yr(),pr=n,(hr=e).attachEvent("onpropertychange",vr)):"blur"===t&&yr()}function wr(t){if("selectionchange"===t||"keyup"===t||"keydown"===t)return mr(pr)}function kr(t,e){if("click"===t)return mr(e)}function Or(t,e){if("input"===t||"change"===t)return mr(e)}T&&(gr=ue("input")&&(!document.documentMode||9<document.documentMode));var Ir={eventTypes:lr,_isInputEventSupported:gr,extractEvents:function(t,e,n,r){var a=e?Cn(e):window,o=a.nodeName&&a.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===a.type)var s=br;else if(ur(a))if(gr)s=Or;else{s=wr;var i=xr}else(o=a.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===a.type||"radio"===a.type)&&(s=kr);if(s&&(s=s(t,e)))return dr(s,n,r);i&&i(t,a,e),"blur"===t&&(t=a._wrapperState)&&t.controlled&&"number"===a.type&&Tt(a,"number",a.value)}},Sr=Gn.extend({view:null,detail:null}),Nr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tr(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):!!(t=Nr[t])&&!!e[t]}function jr(){return Tr}var Cr=0,Er=0,Ar=!1,_r=!1,Rr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:jr,button:null,buttons:null,relatedTarget:function(t){return t.relatedTarget||(t.fromElement===t.srcElement?t.toElement:t.fromElement)},movementX:function(t){if("movementX"in t)return t.movementX;var e=Cr;return Cr=t.screenX,Ar?"mousemove"===t.type?t.screenX-e:0:(Ar=!0,0)},movementY:function(t){if("movementY"in t)return t.movementY;var e=Er;return Er=t.screenY,_r?"mousemove"===t.type?t.screenY-e:0:(_r=!0,0)}}),Dr=Rr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Fr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Mr={eventTypes:Fr,extractEvents:function(t,e,n,r,a){var o="mouseover"===t||"pointerover"===t,s="mouseout"===t||"pointerout"===t;if(o&&0===(32&a)&&(n.relatedTarget||n.fromElement)||!s&&!o)return null;(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,s)?(s=e,null!==(e=(e=n.relatedTarget||n.toElement)?Tn(e):null)&&(e!==$t(e)||5!==e.tag&&6!==e.tag)&&(e=null)):s=null;if(s===e)return null;if("mouseout"===t||"mouseover"===t)var i=Rr,c=Fr.mouseLeave,u=Fr.mouseEnter,l="mouse";else"pointerout"!==t&&"pointerover"!==t||(i=Dr,c=Fr.pointerLeave,u=Fr.pointerEnter,l="pointer");if(t=null==s?o:Cn(s),o=null==e?o:Cn(e),(c=i.getPooled(c,s,n,r)).type=l+"leave",c.target=t,c.relatedTarget=o,(n=i.getPooled(u,e,n,r)).type=l+"enter",n.target=o,n.relatedTarget=t,l=e,(r=s)&&l)t:{for(u=l,s=0,t=i=r;t;t=An(t))s++;for(t=0,e=u;e;e=An(e))t++;for(;0<s-t;)i=An(i),s--;for(;0<t-s;)u=An(u),t--;for(;s--;){if(i===u||i===u.alternate)break t;i=An(i),u=An(u)}i=null}else i=null;for(u=i,i=[];r&&r!==u&&(null===(s=r.alternate)||s!==u);)i.push(r),r=An(r);for(r=[];l&&l!==u&&(null===(s=l.alternate)||s!==u);)r.push(l),l=An(l);for(l=0;l<i.length;l++)Fn(i[l],"bubbled",c);for(l=r.length;0<l--;)Fn(r[l],"captured",n);return 0===(64&a)?[c]:[c,n]}};var zr="function"===typeof Object.is?Object.is:function(t,e){return t===e&&(0!==t||1/t===1/e)||t!==t&&e!==e},Lr=Object.prototype.hasOwnProperty;function Pr(t,e){if(zr(t,e))return!0;if("object"!==typeof t||null===t||"object"!==typeof e||null===e)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Lr.call(e,n[r])||!zr(t[n[r]],e[n[r]]))return!1;return!0}var Br=T&&"documentMode"in document&&11>=document.documentMode,Wr={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vr=null,Ur=null,Gr=null,Hr=!1;function qr(t,e){var n=e.window===e?e.document:9===e.nodeType?e:e.ownerDocument;return Hr||null==Vr||Vr!==ln(n)?null:("selectionStart"in(n=Vr)&&fn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Gr&&Pr(Gr,n)?null:(Gr=n,(t=Gn.getPooled(Wr.select,Ur,t,e)).type="select",t.target=Vr,zn(t),t))}var Kr={eventTypes:Wr,extractEvents:function(t,e,n,r,a,o){if(!(o=!(a=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){t:{a=Jt(a),o=S.onSelect;for(var s=0;s<o.length;s++)if(!a.has(o[s])){a=!1;break t}a=!0}o=!a}if(o)return null;switch(a=e?Cn(e):window,t){case"focus":(ur(a)||"true"===a.contentEditable)&&(Vr=a,Ur=e,Gr=null);break;case"blur":Gr=Ur=Vr=null;break;case"mousedown":Hr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Hr=!1,qr(n,r);case"selectionchange":if(Br)break;case"keydown":case"keyup":return qr(n,r)}return null}},Xr=Gn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Yr=Gn.extend({clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),Qr=Sr.extend({relatedTarget:null});function Zr(t){var e=t.keyCode;return"charCode"in t?0===(t=t.charCode)&&13===e&&(t=13):t=e,10===t&&(t=13),32<=t||13===t?t:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},$r={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ta=Sr.extend({key:function(t){if(t.key){var e=Jr[t.key]||t.key;if("Unidentified"!==e)return e}return"keypress"===t.type?13===(t=Zr(t))?"Enter":String.fromCharCode(t):"keydown"===t.type||"keyup"===t.type?$r[t.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:jr,charCode:function(t){return"keypress"===t.type?Zr(t):0},keyCode:function(t){return"keydown"===t.type||"keyup"===t.type?t.keyCode:0},which:function(t){return"keypress"===t.type?Zr(t):"keydown"===t.type||"keyup"===t.type?t.keyCode:0}}),ea=Rr.extend({dataTransfer:null}),na=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:jr}),ra=Gn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),aa=Rr.extend({deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:null,deltaMode:null}),oa={eventTypes:ze,extractEvents:function(t,e,n,r){var a=Le.get(t);if(!a)return null;switch(t){case"keypress":if(0===Zr(n))return null;case"keydown":case"keyup":t=ta;break;case"blur":case"focus":t=Qr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":t=Rr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":t=ea;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":t=na;break;case qt:case Kt:case Xt:t=Xr;break;case Yt:t=ra;break;case"scroll":t=Sr;break;case"wheel":t=aa;break;case"copy":case"cut":case"paste":t=Yr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":t=Dr;break;default:t=Gn}return zn(e=t.getPooled(a,e,n,r)),e}};if(y)throw Error(s(101));y=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),f=En,m=jn,b=Cn,N({SimpleEventPlugin:oa,EnterLeaveEventPlugin:Mr,ChangeEventPlugin:Ir,SelectEventPlugin:Kr,BeforeInputEventPlugin:ir});var sa=[],ia=-1;function ca(t){0>ia||(t.current=sa[ia],sa[ia]=null,ia--)}function ua(t,e){ia++,sa[ia]=t.current,t.current=e}var la={},da={current:la},ha={current:!1},pa=la;function fa(t,e){var n=t.type.contextTypes;if(!n)return la;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=e[a];return r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=o),o}function ma(t){return null!==(t=t.childContextTypes)&&void 0!==t}function ba(){ca(ha),ca(da)}function ga(t,e,n){if(da.current!==la)throw Error(s(168));ua(da,e),ua(ha,n)}function ya(t,e,n){var r=t.stateNode;if(t=e.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in t))throw Error(s(108,bt(e)||"Unknown",o));return a({},n,{},r)}function va(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||la,pa=da.current,ua(da,t),ua(ha,ha.current),!0}function xa(t,e,n){var r=t.stateNode;if(!r)throw Error(s(169));n?(t=ya(t,e,pa),r.__reactInternalMemoizedMergedChildContext=t,ca(ha),ca(da),ua(da,t)):ca(ha),ua(ha,n)}var wa=o.unstable_runWithPriority,ka=o.unstable_scheduleCallback,Oa=o.unstable_cancelCallback,Ia=o.unstable_requestPaint,Sa=o.unstable_now,Na=o.unstable_getCurrentPriorityLevel,Ta=o.unstable_ImmediatePriority,ja=o.unstable_UserBlockingPriority,Ca=o.unstable_NormalPriority,Ea=o.unstable_LowPriority,Aa=o.unstable_IdlePriority,_a={},Ra=o.unstable_shouldYield,Da=void 0!==Ia?Ia:function(){},Fa=null,Ma=null,za=!1,La=Sa(),Pa=1e4>La?Sa:function(){return Sa()-La};function Ba(){switch(Na()){case Ta:return 99;case ja:return 98;case Ca:return 97;case Ea:return 96;case Aa:return 95;default:throw Error(s(332))}}function Wa(t){switch(t){case 99:return Ta;case 98:return ja;case 97:return Ca;case 96:return Ea;case 95:return Aa;default:throw Error(s(332))}}function Va(t,e){return t=Wa(t),wa(t,e)}function Ua(t,e,n){return t=Wa(t),ka(t,e,n)}function Ga(t){return null===Fa?(Fa=[t],Ma=ka(Ta,qa)):Fa.push(t),_a}function Ha(){if(null!==Ma){var t=Ma;Ma=null,Oa(t)}qa()}function qa(){if(!za&&null!==Fa){za=!0;var t=0;try{var e=Fa;Va(99,(function(){for(;t<e.length;t++){var n=e[t];do{n=n(!0)}while(null!==n)}})),Fa=null}catch(n){throw null!==Fa&&(Fa=Fa.slice(t+1)),ka(Ta,Ha),n}finally{za=!1}}}function Ka(t,e,n){return 1073741821-(1+((1073741821-t+e/10)/(n/=10)|0))*n}function Xa(t,e){if(t&&t.defaultProps)for(var n in e=a({},e),t=t.defaultProps)void 0===e[n]&&(e[n]=t[n]);return e}var Ya={current:null},Qa=null,Za=null,Ja=null;function $a(){Ja=Za=Qa=null}function to(t){var e=Ya.current;ca(Ya),t.type._context._currentValue=e}function eo(t,e){for(;null!==t;){var n=t.alternate;if(t.childExpirationTime<e)t.childExpirationTime=e,null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e);else{if(!(null!==n&&n.childExpirationTime<e))break;n.childExpirationTime=e}t=t.return}}function no(t,e){Qa=t,Ja=Za=null,null!==(t=t.dependencies)&&null!==t.firstContext&&(t.expirationTime>=e&&(Es=!0),t.firstContext=null)}function ro(t,e){if(Ja!==t&&!1!==e&&0!==e)if("number"===typeof e&&1073741823!==e||(Ja=t,e=1073741823),e={context:t,observedBits:e,next:null},null===Za){if(null===Qa)throw Error(s(308));Za=e,Qa.dependencies={expirationTime:0,firstContext:e,responders:null}}else Za=Za.next=e;return t._currentValue}var ao=!1;function oo(t){t.updateQueue={baseState:t.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function so(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,baseQueue:t.baseQueue,shared:t.shared,effects:t.effects})}function io(t,e){return(t={expirationTime:t,suspenseConfig:e,tag:0,payload:null,callback:null,next:null}).next=t}function co(t,e){if(null!==(t=t.updateQueue)){var n=(t=t.shared).pending;null===n?e.next=e:(e.next=n.next,n.next=e),t.pending=e}}function uo(t,e){var n=t.alternate;null!==n&&so(n,t),null===(n=(t=t.updateQueue).baseQueue)?(t.baseQueue=e.next=e,e.next=e):(e.next=n.next,n.next=e)}function lo(t,e,n,r){var o=t.updateQueue;ao=!1;var s=o.baseQueue,i=o.shared.pending;if(null!==i){if(null!==s){var c=s.next;s.next=i.next,i.next=c}s=i,o.shared.pending=null,null!==(c=t.alternate)&&(null!==(c=c.updateQueue)&&(c.baseQueue=i))}if(null!==s){c=s.next;var u=o.baseState,l=0,d=null,h=null,p=null;if(null!==c)for(var f=c;;){if((i=f.expirationTime)<r){var m={expirationTime:f.expirationTime,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null};null===p?(h=p=m,d=u):p=p.next=m,i>l&&(l=i)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:f.suspenseConfig,tag:f.tag,payload:f.payload,callback:f.callback,next:null}),oc(i,f.suspenseConfig);t:{var b=t,g=f;switch(i=e,m=n,g.tag){case 1:if("function"===typeof(b=g.payload)){u=b.call(m,u,i);break t}u=b;break t;case 3:b.effectTag=-4097&b.effectTag|64;case 0:if(null===(i="function"===typeof(b=g.payload)?b.call(m,u,i):b)||void 0===i)break t;u=a({},u,i);break t;case 2:ao=!0}}null!==f.callback&&(t.effectTag|=32,null===(i=o.effects)?o.effects=[f]:i.push(f))}if(null===(f=f.next)||f===c){if(null===(i=o.shared.pending))break;f=s.next=i.next,i.next=c,o.baseQueue=s=i,o.shared.pending=null}}null===p?d=u:p.next=h,o.baseState=d,o.baseQueue=p,sc(l),t.expirationTime=l,t.memoizedState=u}}function ho(t,e,n){if(t=e.effects,e.effects=null,null!==t)for(e=0;e<t.length;e++){var r=t[e],a=r.callback;if(null!==a){if(r.callback=null,r=a,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var po=Q.ReactCurrentBatchConfig,fo=(new r.Component).refs;function mo(t,e,n,r){n=null===(n=n(r,e=t.memoizedState))||void 0===n?e:a({},e,n),t.memoizedState=n,0===t.expirationTime&&(t.updateQueue.baseState=n)}var bo={isMounted:function(t){return!!(t=t._reactInternalFiber)&&$t(t)===t},enqueueSetState:function(t,e,n){t=t._reactInternalFiber;var r=qi(),a=po.suspense;(a=io(r=Ki(r,t,a),a)).payload=e,void 0!==n&&null!==n&&(a.callback=n),co(t,a),Xi(t,r)},enqueueReplaceState:function(t,e,n){t=t._reactInternalFiber;var r=qi(),a=po.suspense;(a=io(r=Ki(r,t,a),a)).tag=1,a.payload=e,void 0!==n&&null!==n&&(a.callback=n),co(t,a),Xi(t,r)},enqueueForceUpdate:function(t,e){t=t._reactInternalFiber;var n=qi(),r=po.suspense;(r=io(n=Ki(n,t,r),r)).tag=2,void 0!==e&&null!==e&&(r.callback=e),co(t,r),Xi(t,n)}};function go(t,e,n,r,a,o,s){return"function"===typeof(t=t.stateNode).shouldComponentUpdate?t.shouldComponentUpdate(r,o,s):!e.prototype||!e.prototype.isPureReactComponent||(!Pr(n,r)||!Pr(a,o))}function yo(t,e,n){var r=!1,a=la,o=e.contextType;return"object"===typeof o&&null!==o?o=ro(o):(a=ma(e)?pa:da.current,o=(r=null!==(r=e.contextTypes)&&void 0!==r)?fa(t,a):la),e=new e(n,o),t.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,e.updater=bo,t.stateNode=e,e._reactInternalFiber=t,r&&((t=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,t.__reactInternalMemoizedMaskedChildContext=o),e}function vo(t,e,n,r){t=e.state,"function"===typeof e.componentWillReceiveProps&&e.componentWillReceiveProps(n,r),"function"===typeof e.UNSAFE_componentWillReceiveProps&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&bo.enqueueReplaceState(e,e.state,null)}function xo(t,e,n,r){var a=t.stateNode;a.props=n,a.state=t.memoizedState,a.refs=fo,oo(t);var o=e.contextType;"object"===typeof o&&null!==o?a.context=ro(o):(o=ma(e)?pa:da.current,a.context=fa(t,o)),lo(t,n,a,r),a.state=t.memoizedState,"function"===typeof(o=e.getDerivedStateFromProps)&&(mo(t,e,o,n),a.state=t.memoizedState),"function"===typeof e.getDerivedStateFromProps||"function"===typeof a.getSnapshotBeforeUpdate||"function"!==typeof a.UNSAFE_componentWillMount&&"function"!==typeof a.componentWillMount||(e=a.state,"function"===typeof a.componentWillMount&&a.componentWillMount(),"function"===typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),e!==a.state&&bo.enqueueReplaceState(a,a.state,null),lo(t,n,a,r),a.state=t.memoizedState),"function"===typeof a.componentDidMount&&(t.effectTag|=4)}var wo=Array.isArray;function ko(t,e,n){if(null!==(t=n.ref)&&"function"!==typeof t&&"object"!==typeof t){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var r=n.stateNode}if(!r)throw Error(s(147,t));var a=""+t;return null!==e&&null!==e.ref&&"function"===typeof e.ref&&e.ref._stringRef===a?e.ref:((e=function(t){var e=r.refs;e===fo&&(e=r.refs={}),null===t?delete e[a]:e[a]=t})._stringRef=a,e)}if("string"!==typeof t)throw Error(s(284));if(!n._owner)throw Error(s(290,t))}return t}function Oo(t,e){if("textarea"!==t.type)throw Error(s(31,"[object Object]"===Object.prototype.toString.call(e)?"object with keys {"+Object.keys(e).join(", ")+"}":e,""))}function Io(t){function e(e,n){if(t){var r=e.lastEffect;null!==r?(r.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!t)return null;for(;null!==r;)e(n,r),r=r.sibling;return null}function r(t,e){for(t=new Map;null!==e;)null!==e.key?t.set(e.key,e):t.set(e.index,e),e=e.sibling;return t}function a(t,e){return(t=Nc(t,e)).index=0,t.sibling=null,t}function o(e,n,r){return e.index=r,t?null!==(r=e.alternate)?(r=r.index)<n?(e.effectTag=2,n):r:(e.effectTag=2,n):n}function i(e){return t&&null===e.alternate&&(e.effectTag=2),e}function c(t,e,n,r){return null===e||6!==e.tag?((e=Cc(n,t.mode,r)).return=t,e):((e=a(e,n)).return=t,e)}function u(t,e,n,r){return null!==e&&e.elementType===n.type?((r=a(e,n.props)).ref=ko(t,e,n),r.return=t,r):((r=Tc(n.type,n.key,n.props,null,t.mode,r)).ref=ko(t,e,n),r.return=t,r)}function l(t,e,n,r){return null===e||4!==e.tag||e.stateNode.containerInfo!==n.containerInfo||e.stateNode.implementation!==n.implementation?((e=Ec(n,t.mode,r)).return=t,e):((e=a(e,n.children||[])).return=t,e)}function d(t,e,n,r,o){return null===e||7!==e.tag?((e=jc(n,t.mode,r,o)).return=t,e):((e=a(e,n)).return=t,e)}function h(t,e,n){if("string"===typeof e||"number"===typeof e)return(e=Cc(""+e,t.mode,n)).return=t,e;if("object"===typeof e&&null!==e){switch(e.$$typeof){case tt:return(n=Tc(e.type,e.key,e.props,null,t.mode,n)).ref=ko(t,null,e),n.return=t,n;case et:return(e=Ec(e,t.mode,n)).return=t,e}if(wo(e)||mt(e))return(e=jc(e,t.mode,n,null)).return=t,e;Oo(t,e)}return null}function p(t,e,n,r){var a=null!==e?e.key:null;if("string"===typeof n||"number"===typeof n)return null!==a?null:c(t,e,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case tt:return n.key===a?n.type===nt?d(t,e,n.props.children,r,a):u(t,e,n,r):null;case et:return n.key===a?l(t,e,n,r):null}if(wo(n)||mt(n))return null!==a?null:d(t,e,n,r,null);Oo(t,n)}return null}function f(t,e,n,r,a){if("string"===typeof r||"number"===typeof r)return c(e,t=t.get(n)||null,""+r,a);if("object"===typeof r&&null!==r){switch(r.$$typeof){case tt:return t=t.get(null===r.key?n:r.key)||null,r.type===nt?d(e,t,r.props.children,a,r.key):u(e,t,r,a);case et:return l(e,t=t.get(null===r.key?n:r.key)||null,r,a)}if(wo(r)||mt(r))return d(e,t=t.get(n)||null,r,a,null);Oo(e,r)}return null}function m(a,s,i,c){for(var u=null,l=null,d=s,m=s=0,b=null;null!==d&&m<i.length;m++){d.index>m?(b=d,d=null):b=d.sibling;var g=p(a,d,i[m],c);if(null===g){null===d&&(d=b);break}t&&d&&null===g.alternate&&e(a,d),s=o(g,s,m),null===l?u=g:l.sibling=g,l=g,d=b}if(m===i.length)return n(a,d),u;if(null===d){for(;m<i.length;m++)null!==(d=h(a,i[m],c))&&(s=o(d,s,m),null===l?u=d:l.sibling=d,l=d);return u}for(d=r(a,d);m<i.length;m++)null!==(b=f(d,a,m,i[m],c))&&(t&&null!==b.alternate&&d.delete(null===b.key?m:b.key),s=o(b,s,m),null===l?u=b:l.sibling=b,l=b);return t&&d.forEach((function(t){return e(a,t)})),u}function b(a,i,c,u){var l=mt(c);if("function"!==typeof l)throw Error(s(150));if(null==(c=l.call(c)))throw Error(s(151));for(var d=l=null,m=i,b=i=0,g=null,y=c.next();null!==m&&!y.done;b++,y=c.next()){m.index>b?(g=m,m=null):g=m.sibling;var v=p(a,m,y.value,u);if(null===v){null===m&&(m=g);break}t&&m&&null===v.alternate&&e(a,m),i=o(v,i,b),null===d?l=v:d.sibling=v,d=v,m=g}if(y.done)return n(a,m),l;if(null===m){for(;!y.done;b++,y=c.next())null!==(y=h(a,y.value,u))&&(i=o(y,i,b),null===d?l=y:d.sibling=y,d=y);return l}for(m=r(a,m);!y.done;b++,y=c.next())null!==(y=f(m,a,b,y.value,u))&&(t&&null!==y.alternate&&m.delete(null===y.key?b:y.key),i=o(y,i,b),null===d?l=y:d.sibling=y,d=y);return t&&m.forEach((function(t){return e(a,t)})),l}return function(t,r,o,c){var u="object"===typeof o&&null!==o&&o.type===nt&&null===o.key;u&&(o=o.props.children);var l="object"===typeof o&&null!==o;if(l)switch(o.$$typeof){case tt:t:{for(l=o.key,u=r;null!==u;){if(u.key===l){switch(u.tag){case 7:if(o.type===nt){n(t,u.sibling),(r=a(u,o.props.children)).return=t,t=r;break t}break;default:if(u.elementType===o.type){n(t,u.sibling),(r=a(u,o.props)).ref=ko(t,u,o),r.return=t,t=r;break t}}n(t,u);break}e(t,u),u=u.sibling}o.type===nt?((r=jc(o.props.children,t.mode,c,o.key)).return=t,t=r):((c=Tc(o.type,o.key,o.props,null,t.mode,c)).ref=ko(t,r,o),c.return=t,t=c)}return i(t);case et:t:{for(u=o.key;null!==r;){if(r.key===u){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(t,r.sibling),(r=a(r,o.children||[])).return=t,t=r;break t}n(t,r);break}e(t,r),r=r.sibling}(r=Ec(o,t.mode,c)).return=t,t=r}return i(t)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==r&&6===r.tag?(n(t,r.sibling),(r=a(r,o)).return=t,t=r):(n(t,r),(r=Cc(o,t.mode,c)).return=t,t=r),i(t);if(wo(o))return m(t,r,o,c);if(mt(o))return b(t,r,o,c);if(l&&Oo(t,o),"undefined"===typeof o&&!u)switch(t.tag){case 1:case 0:throw t=t.type,Error(s(152,t.displayName||t.name||"Component"))}return n(t,r)}}var So=Io(!0),No=Io(!1),To={},jo={current:To},Co={current:To},Eo={current:To};function Ao(t){if(t===To)throw Error(s(174));return t}function _o(t,e){switch(ua(Eo,e),ua(Co,t),ua(jo,To),t=e.nodeType){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:zt(null,"");break;default:e=zt(e=(t=8===t?e.parentNode:e).namespaceURI||null,t=t.tagName)}ca(jo),ua(jo,e)}function Ro(){ca(jo),ca(Co),ca(Eo)}function Do(t){Ao(Eo.current);var e=Ao(jo.current),n=zt(e,t.type);e!==n&&(ua(Co,t),ua(jo,n))}function Fo(t){Co.current===t&&(ca(jo),ca(Co))}var Mo={current:0};function zo(t){for(var e=t;null!==e;){if(13===e.tag){var n=e.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return e}else if(19===e.tag&&void 0!==e.memoizedProps.revealOrder){if(0!==(64&e.effectTag))return e}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break;for(;null===e.sibling;){if(null===e.return||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function Lo(t,e){return{responder:t,props:e}}var Po=Q.ReactCurrentDispatcher,Bo=Q.ReactCurrentBatchConfig,Wo=0,Vo=null,Uo=null,Go=null,Ho=!1;function qo(){throw Error(s(321))}function Ko(t,e){if(null===e)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!zr(t[n],e[n]))return!1;return!0}function Xo(t,e,n,r,a,o){if(Wo=o,Vo=e,e.memoizedState=null,e.updateQueue=null,e.expirationTime=0,Po.current=null===t||null===t.memoizedState?gs:ys,t=n(r,a),e.expirationTime===Wo){o=0;do{if(e.expirationTime=0,!(25>o))throw Error(s(301));o+=1,Go=Uo=null,e.updateQueue=null,Po.current=vs,t=n(r,a)}while(e.expirationTime===Wo)}if(Po.current=bs,e=null!==Uo&&null!==Uo.next,Wo=0,Go=Uo=Vo=null,Ho=!1,e)throw Error(s(300));return t}function Yo(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Go?Vo.memoizedState=Go=t:Go=Go.next=t,Go}function Qo(){if(null===Uo){var t=Vo.alternate;t=null!==t?t.memoizedState:null}else t=Uo.next;var e=null===Go?Vo.memoizedState:Go.next;if(null!==e)Go=e,Uo=t;else{if(null===t)throw Error(s(310));t={memoizedState:(Uo=t).memoizedState,baseState:Uo.baseState,baseQueue:Uo.baseQueue,queue:Uo.queue,next:null},null===Go?Vo.memoizedState=Go=t:Go=Go.next=t}return Go}function Zo(t,e){return"function"===typeof e?e(t):e}function Jo(t){var e=Qo(),n=e.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=t;var r=Uo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var c=i=o=null,u=a;do{var l=u.expirationTime;if(l<Wo){var d={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===c?(i=c=d,o=r):c=c.next=d,l>Vo.expirationTime&&(Vo.expirationTime=l,sc(l))}else null!==c&&(c=c.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),oc(l,u.suspenseConfig),r=u.eagerReducer===t?u.eagerState:t(r,u.action);u=u.next}while(null!==u&&u!==a);null===c?o=r:c.next=i,zr(r,e.memoizedState)||(Es=!0),e.memoizedState=r,e.baseState=o,e.baseQueue=c,n.lastRenderedState=r}return[e.memoizedState,n.dispatch]}function $o(t){var e=Qo(),n=e.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=t;var r=n.dispatch,a=n.pending,o=e.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=t(o,i.action),i=i.next}while(i!==a);zr(o,e.memoizedState)||(Es=!0),e.memoizedState=o,null===e.baseQueue&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function ts(t){var e=Yo();return"function"===typeof t&&(t=t()),e.memoizedState=e.baseState=t,t=(t=e.queue={pending:null,dispatch:null,lastRenderedReducer:Zo,lastRenderedState:t}).dispatch=ms.bind(null,Vo,t),[e.memoizedState,t]}function es(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},null===(e=Vo.updateQueue)?(e={lastEffect:null},Vo.updateQueue=e,e.lastEffect=t.next=t):null===(n=e.lastEffect)?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t),t}function ns(){return Qo().memoizedState}function rs(t,e,n,r){var a=Yo();Vo.effectTag|=t,a.memoizedState=es(1|e,n,void 0,void 0===r?null:r)}function as(t,e,n,r){var a=Qo();r=void 0===r?null:r;var o=void 0;if(null!==Uo){var s=Uo.memoizedState;if(o=s.destroy,null!==r&&Ko(r,s.deps))return void es(e,n,o,r)}Vo.effectTag|=t,a.memoizedState=es(1|e,n,o,r)}function os(t,e){return rs(516,4,t,e)}function ss(t,e){return as(516,4,t,e)}function is(t,e){return as(4,2,t,e)}function cs(t,e){return"function"===typeof e?(t=t(),e(t),function(){e(null)}):null!==e&&void 0!==e?(t=t(),e.current=t,function(){e.current=null}):void 0}function us(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,as(4,2,cs.bind(null,e,t),n)}function ls(){}function ds(t,e){return Yo().memoizedState=[t,void 0===e?null:e],t}function hs(t,e){var n=Qo();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&Ko(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function ps(t,e){var n=Qo();e=void 0===e?null:e;var r=n.memoizedState;return null!==r&&null!==e&&Ko(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function fs(t,e,n){var r=Ba();Va(98>r?98:r,(function(){t(!0)})),Va(97<r?97:r,(function(){var r=Bo.suspense;Bo.suspense=void 0===e?null:e;try{t(!1),n()}finally{Bo.suspense=r}}))}function ms(t,e,n){var r=qi(),a=po.suspense;a={expirationTime:r=Ki(r,t,a),suspenseConfig:a,action:n,eagerReducer:null,eagerState:null,next:null};var o=e.pending;if(null===o?a.next=a:(a.next=o.next,o.next=a),e.pending=a,o=t.alternate,t===Vo||null!==o&&o===Vo)Ho=!0,a.expirationTime=Wo,Vo.expirationTime=Wo;else{if(0===t.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=e.lastRenderedReducer))try{var s=e.lastRenderedState,i=o(s,n);if(a.eagerReducer=o,a.eagerState=i,zr(i,s))return}catch(c){}Xi(t,r)}}var bs={readContext:ro,useCallback:qo,useContext:qo,useEffect:qo,useImperativeHandle:qo,useLayoutEffect:qo,useMemo:qo,useReducer:qo,useRef:qo,useState:qo,useDebugValue:qo,useResponder:qo,useDeferredValue:qo,useTransition:qo},gs={readContext:ro,useCallback:ds,useContext:ro,useEffect:os,useImperativeHandle:function(t,e,n){return n=null!==n&&void 0!==n?n.concat([t]):null,rs(4,2,cs.bind(null,e,t),n)},useLayoutEffect:function(t,e){return rs(4,2,t,e)},useMemo:function(t,e){var n=Yo();return e=void 0===e?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=Yo();return e=void 0!==n?n(e):e,r.memoizedState=r.baseState=e,t=(t=r.queue={pending:null,dispatch:null,lastRenderedReducer:t,lastRenderedState:e}).dispatch=ms.bind(null,Vo,t),[r.memoizedState,t]},useRef:function(t){return t={current:t},Yo().memoizedState=t},useState:ts,useDebugValue:ls,useResponder:Lo,useDeferredValue:function(t,e){var n=ts(t),r=n[0],a=n[1];return os((function(){var n=Bo.suspense;Bo.suspense=void 0===e?null:e;try{a(t)}finally{Bo.suspense=n}}),[t,e]),r},useTransition:function(t){var e=ts(!1),n=e[0];return e=e[1],[ds(fs.bind(null,e,t),[e,t]),n]}},ys={readContext:ro,useCallback:hs,useContext:ro,useEffect:ss,useImperativeHandle:us,useLayoutEffect:is,useMemo:ps,useReducer:Jo,useRef:ns,useState:function(){return Jo(Zo)},useDebugValue:ls,useResponder:Lo,useDeferredValue:function(t,e){var n=Jo(Zo),r=n[0],a=n[1];return ss((function(){var n=Bo.suspense;Bo.suspense=void 0===e?null:e;try{a(t)}finally{Bo.suspense=n}}),[t,e]),r},useTransition:function(t){var e=Jo(Zo),n=e[0];return e=e[1],[hs(fs.bind(null,e,t),[e,t]),n]}},vs={readContext:ro,useCallback:hs,useContext:ro,useEffect:ss,useImperativeHandle:us,useLayoutEffect:is,useMemo:ps,useReducer:$o,useRef:ns,useState:function(){return $o(Zo)},useDebugValue:ls,useResponder:Lo,useDeferredValue:function(t,e){var n=$o(Zo),r=n[0],a=n[1];return ss((function(){var n=Bo.suspense;Bo.suspense=void 0===e?null:e;try{a(t)}finally{Bo.suspense=n}}),[t,e]),r},useTransition:function(t){var e=$o(Zo),n=e[0];return e=e[1],[hs(fs.bind(null,e,t),[e,t]),n]}},xs=null,ws=null,ks=!1;function Os(t,e){var n=Ic(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=e,n.return=t,n.effectTag=8,null!==t.lastEffect?(t.lastEffect.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n}function Is(t,e){switch(t.tag){case 5:var n=t.type;return null!==(e=1!==e.nodeType||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e)&&(t.stateNode=e,!0);case 6:return null!==(e=""===t.pendingProps||3!==e.nodeType?null:e)&&(t.stateNode=e,!0);case 13:default:return!1}}function Ss(t){if(ks){var e=ws;if(e){var n=e;if(!Is(t,e)){if(!(e=wn(n.nextSibling))||!Is(t,e))return t.effectTag=-1025&t.effectTag|2,ks=!1,void(xs=t);Os(xs,n)}xs=t,ws=wn(e.firstChild)}else t.effectTag=-1025&t.effectTag|2,ks=!1,xs=t}}function Ns(t){for(t=t.return;null!==t&&5!==t.tag&&3!==t.tag&&13!==t.tag;)t=t.return;xs=t}function Ts(t){if(t!==xs)return!1;if(!ks)return Ns(t),ks=!0,!1;var e=t.type;if(5!==t.tag||"head"!==e&&"body"!==e&&!yn(e,t.memoizedProps))for(e=ws;e;)Os(t,e),e=wn(e.nextSibling);if(Ns(t),13===t.tag){if(!(t=null!==(t=t.memoizedState)?t.dehydrated:null))throw Error(s(317));t:{for(t=t.nextSibling,e=0;t;){if(8===t.nodeType){var n=t.data;if("/$"===n){if(0===e){ws=wn(t.nextSibling);break t}e--}else"$"!==n&&"$!"!==n&&"$?"!==n||e++}t=t.nextSibling}ws=null}}else ws=xs?wn(t.stateNode.nextSibling):null;return!0}function js(){ws=xs=null,ks=!1}var Cs=Q.ReactCurrentOwner,Es=!1;function As(t,e,n,r){e.child=null===t?No(e,null,n,r):So(e,t.child,n,r)}function _s(t,e,n,r,a){n=n.render;var o=e.ref;return no(e,a),r=Xo(t,e,n,r,o,a),null===t||Es?(e.effectTag|=1,As(t,e,r,a),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=a&&(t.expirationTime=0),Xs(t,e,a))}function Rs(t,e,n,r,a,o){if(null===t){var s=n.type;return"function"!==typeof s||Sc(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((t=Tc(n.type,null,r,null,e.mode,o)).ref=e.ref,t.return=e,e.child=t):(e.tag=15,e.type=s,Ds(t,e,s,r,a,o))}return s=t.child,a<o&&(a=s.memoizedProps,(n=null!==(n=n.compare)?n:Pr)(a,r)&&t.ref===e.ref)?Xs(t,e,o):(e.effectTag|=1,(t=Nc(s,r)).ref=e.ref,t.return=e,e.child=t)}function Ds(t,e,n,r,a,o){return null!==t&&Pr(t.memoizedProps,r)&&t.ref===e.ref&&(Es=!1,a<o)?(e.expirationTime=t.expirationTime,Xs(t,e,o)):Ms(t,e,n,r,o)}function Fs(t,e){var n=e.ref;(null===t&&null!==n||null!==t&&t.ref!==n)&&(e.effectTag|=128)}function Ms(t,e,n,r,a){var o=ma(n)?pa:da.current;return o=fa(e,o),no(e,a),n=Xo(t,e,n,r,o,a),null===t||Es?(e.effectTag|=1,As(t,e,n,a),e.child):(e.updateQueue=t.updateQueue,e.effectTag&=-517,t.expirationTime<=a&&(t.expirationTime=0),Xs(t,e,a))}function zs(t,e,n,r,a){if(ma(n)){var o=!0;va(e)}else o=!1;if(no(e,a),null===e.stateNode)null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),yo(e,n,r),xo(e,n,r,a),r=!0;else if(null===t){var s=e.stateNode,i=e.memoizedProps;s.props=i;var c=s.context,u=n.contextType;"object"===typeof u&&null!==u?u=ro(u):u=fa(e,u=ma(n)?pa:da.current);var l=n.getDerivedStateFromProps,d="function"===typeof l||"function"===typeof s.getSnapshotBeforeUpdate;d||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==r||c!==u)&&vo(e,s,r,u),ao=!1;var h=e.memoizedState;s.state=h,lo(e,r,s,a),c=e.memoizedState,i!==r||h!==c||ha.current||ao?("function"===typeof l&&(mo(e,n,l,r),c=e.memoizedState),(i=ao||go(e,n,i,r,h,c,u))?(d||"function"!==typeof s.UNSAFE_componentWillMount&&"function"!==typeof s.componentWillMount||("function"===typeof s.componentWillMount&&s.componentWillMount(),"function"===typeof s.UNSAFE_componentWillMount&&s.UNSAFE_componentWillMount()),"function"===typeof s.componentDidMount&&(e.effectTag|=4)):("function"===typeof s.componentDidMount&&(e.effectTag|=4),e.memoizedProps=r,e.memoizedState=c),s.props=r,s.state=c,s.context=u,r=i):("function"===typeof s.componentDidMount&&(e.effectTag|=4),r=!1)}else s=e.stateNode,so(t,e),i=e.memoizedProps,s.props=e.type===e.elementType?i:Xa(e.type,i),c=s.context,"object"===typeof(u=n.contextType)&&null!==u?u=ro(u):u=fa(e,u=ma(n)?pa:da.current),(d="function"===typeof(l=n.getDerivedStateFromProps)||"function"===typeof s.getSnapshotBeforeUpdate)||"function"!==typeof s.UNSAFE_componentWillReceiveProps&&"function"!==typeof s.componentWillReceiveProps||(i!==r||c!==u)&&vo(e,s,r,u),ao=!1,c=e.memoizedState,s.state=c,lo(e,r,s,a),h=e.memoizedState,i!==r||c!==h||ha.current||ao?("function"===typeof l&&(mo(e,n,l,r),h=e.memoizedState),(l=ao||go(e,n,i,r,c,h,u))?(d||"function"!==typeof s.UNSAFE_componentWillUpdate&&"function"!==typeof s.componentWillUpdate||("function"===typeof s.componentWillUpdate&&s.componentWillUpdate(r,h,u),"function"===typeof s.UNSAFE_componentWillUpdate&&s.UNSAFE_componentWillUpdate(r,h,u)),"function"===typeof s.componentDidUpdate&&(e.effectTag|=4),"function"===typeof s.getSnapshotBeforeUpdate&&(e.effectTag|=256)):("function"!==typeof s.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),e.memoizedProps=r,e.memoizedState=h),s.props=r,s.state=h,s.context=u,r=l):("function"!==typeof s.componentDidUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=4),"function"!==typeof s.getSnapshotBeforeUpdate||i===t.memoizedProps&&c===t.memoizedState||(e.effectTag|=256),r=!1);return Ls(t,e,n,r,o,a)}function Ls(t,e,n,r,a,o){Fs(t,e);var s=0!==(64&e.effectTag);if(!r&&!s)return a&&xa(e,n,!1),Xs(t,e,o);r=e.stateNode,Cs.current=e;var i=s&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return e.effectTag|=1,null!==t&&s?(e.child=So(e,t.child,null,o),e.child=So(e,null,i,o)):As(t,e,i,o),e.memoizedState=r.state,a&&xa(e,n,!0),e.child}function Ps(t){var e=t.stateNode;e.pendingContext?ga(0,e.pendingContext,e.pendingContext!==e.context):e.context&&ga(0,e.context,!1),_o(t,e.containerInfo)}var Bs,Ws,Vs,Us={dehydrated:null,retryTime:0};function Gs(t,e,n){var r,a=e.mode,o=e.pendingProps,s=Mo.current,i=!1;if((r=0!==(64&e.effectTag))||(r=0!==(2&s)&&(null===t||null!==t.memoizedState)),r?(i=!0,e.effectTag&=-65):null!==t&&null===t.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(s|=1),ua(Mo,1&s),null===t){if(void 0!==o.fallback&&Ss(e),i){if(i=o.fallback,(o=jc(null,a,0,null)).return=e,0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,o.child=t;null!==t;)t.return=o,t=t.sibling;return(n=jc(i,a,n,null)).return=e,o.sibling=n,e.memoizedState=Us,e.child=o,n}return a=o.children,e.memoizedState=null,e.child=No(e,null,a,n)}if(null!==t.memoizedState){if(a=(t=t.child).sibling,i){if(o=o.fallback,(n=Nc(t,t.pendingProps)).return=e,0===(2&e.mode)&&(i=null!==e.memoizedState?e.child.child:e.child)!==t.child)for(n.child=i;null!==i;)i.return=n,i=i.sibling;return(a=Nc(a,o)).return=e,n.sibling=a,n.childExpirationTime=0,e.memoizedState=Us,e.child=n,a}return n=So(e,t.child,o.children,n),e.memoizedState=null,e.child=n}if(t=t.child,i){if(i=o.fallback,(o=jc(null,a,0,null)).return=e,o.child=t,null!==t&&(t.return=o),0===(2&e.mode))for(t=null!==e.memoizedState?e.child.child:e.child,o.child=t;null!==t;)t.return=o,t=t.sibling;return(n=jc(i,a,n,null)).return=e,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,e.memoizedState=Us,e.child=o,n}return e.memoizedState=null,e.child=So(e,t,o.children,n)}function Hs(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e),eo(t.return,e)}function qs(t,e,n,r,a,o){var s=t.memoizedState;null===s?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:a,lastEffect:o}:(s.isBackwards=e,s.rendering=null,s.renderingStartTime=0,s.last=r,s.tail=n,s.tailExpiration=0,s.tailMode=a,s.lastEffect=o)}function Ks(t,e,n){var r=e.pendingProps,a=r.revealOrder,o=r.tail;if(As(t,e,r.children,n),0!==(2&(r=Mo.current)))r=1&r|2,e.effectTag|=64;else{if(null!==t&&0!==(64&t.effectTag))t:for(t=e.child;null!==t;){if(13===t.tag)null!==t.memoizedState&&Hs(t,n);else if(19===t.tag)Hs(t,n);else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break t;for(;null===t.sibling;){if(null===t.return||t.return===e)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(ua(Mo,r),0===(2&e.mode))e.memoizedState=null;else switch(a){case"forwards":for(n=e.child,a=null;null!==n;)null!==(t=n.alternate)&&null===zo(t)&&(a=n),n=n.sibling;null===(n=a)?(a=e.child,e.child=null):(a=n.sibling,n.sibling=null),qs(e,!1,a,n,o,e.lastEffect);break;case"backwards":for(n=null,a=e.child,e.child=null;null!==a;){if(null!==(t=a.alternate)&&null===zo(t)){e.child=a;break}t=a.sibling,a.sibling=n,n=a,a=t}qs(e,!0,n,null,o,e.lastEffect);break;case"together":qs(e,!1,null,null,void 0,e.lastEffect);break;default:e.memoizedState=null}return e.child}function Xs(t,e,n){null!==t&&(e.dependencies=t.dependencies);var r=e.expirationTime;if(0!==r&&sc(r),e.childExpirationTime<n)return null;if(null!==t&&e.child!==t.child)throw Error(s(153));if(null!==e.child){for(n=Nc(t=e.child,t.pendingProps),e.child=n,n.return=e;null!==t.sibling;)t=t.sibling,(n=n.sibling=Nc(t,t.pendingProps)).return=e;n.sibling=null}return e.child}function Ys(t,e){switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;null!==e;)null!==e.alternate&&(n=e),e=e.sibling;null===n?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?e||null===t.tail?t.tail=null:t.tail.sibling=null:r.sibling=null}}function Qs(t,e,n){var r=e.pendingProps;switch(e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ma(e.type)&&ba(),null;case 3:return Ro(),ca(ha),ca(da),(n=e.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==t&&null!==t.child||!Ts(e)||(e.effectTag|=4),null;case 5:Fo(e),n=Ao(Eo.current);var o=e.type;if(null!==t&&null!=e.stateNode)Ws(t,e,o,r,n),t.ref!==e.ref&&(e.effectTag|=128);else{if(!r){if(null===e.stateNode)throw Error(s(166));return null}if(t=Ao(jo.current),Ts(e)){r=e.stateNode,o=e.type;var i=e.memoizedProps;switch(r[In]=e,r[Sn]=i,o){case"iframe":case"object":case"embed":Ke("load",r);break;case"video":case"audio":for(t=0;t<Qt.length;t++)Ke(Qt[t],r);break;case"source":Ke("error",r);break;case"img":case"image":case"link":Ke("error",r),Ke("load",r);break;case"form":Ke("reset",r),Ke("submit",r);break;case"details":Ke("toggle",r);break;case"input":Ot(r,i),Ke("invalid",r),cn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Ke("invalid",r),cn(n,"onChange");break;case"textarea":At(r,i),Ke("invalid",r),cn(n,"onChange")}for(var c in an(o,i),t=null,i)if(i.hasOwnProperty(c)){var u=i[c];"children"===c?"string"===typeof u?r.textContent!==u&&(t=["children",u]):"number"===typeof u&&r.textContent!==""+u&&(t=["children",""+u]):I.hasOwnProperty(c)&&null!=u&&cn(n,c)}switch(o){case"input":xt(r),Nt(r,i,!0);break;case"textarea":xt(r),Rt(r);break;case"select":case"option":break;default:"function"===typeof i.onClick&&(r.onclick=un)}n=t,e.updateQueue=n,null!==n&&(e.effectTag|=4)}else{switch(c=9===n.nodeType?n:n.ownerDocument,t===sn&&(t=Mt(o)),t===sn?"script"===o?((t=c.createElement("div")).innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):"string"===typeof r.is?t=c.createElement(o,{is:r.is}):(t=c.createElement(o),"select"===o&&(c=t,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):t=c.createElementNS(t,o),t[In]=e,t[Sn]=r,Bs(t,e),e.stateNode=t,c=on(o,r),o){case"iframe":case"object":case"embed":Ke("load",t),u=r;break;case"video":case"audio":for(u=0;u<Qt.length;u++)Ke(Qt[u],t);u=r;break;case"source":Ke("error",t),u=r;break;case"img":case"image":case"link":Ke("error",t),Ke("load",t),u=r;break;case"form":Ke("reset",t),Ke("submit",t),u=r;break;case"details":Ke("toggle",t),u=r;break;case"input":Ot(t,r),u=kt(t,r),Ke("invalid",t),cn(n,"onChange");break;case"option":u=jt(t,r);break;case"select":t._wrapperState={wasMultiple:!!r.multiple},u=a({},r,{value:void 0}),Ke("invalid",t),cn(n,"onChange");break;case"textarea":At(t,r),u=Et(t,r),Ke("invalid",t),cn(n,"onChange");break;default:u=r}an(o,u);var l=u;for(i in l)if(l.hasOwnProperty(i)){var d=l[i];"style"===i?nn(t,d):"dangerouslySetInnerHTML"===i?null!=(d=d?d.__html:void 0)&&Pt(t,d):"children"===i?"string"===typeof d?("textarea"!==o||""!==d)&&Bt(t,d):"number"===typeof d&&Bt(t,""+d):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(I.hasOwnProperty(i)?null!=d&&cn(n,i):null!=d&&Z(t,i,d,c))}switch(o){case"input":xt(t),Nt(t,r,!1);break;case"textarea":xt(t),Rt(t);break;case"option":null!=r.value&&t.setAttribute("value",""+yt(r.value));break;case"select":t.multiple=!!r.multiple,null!=(n=r.value)?Ct(t,!!r.multiple,n,!1):null!=r.defaultValue&&Ct(t,!!r.multiple,r.defaultValue,!0);break;default:"function"===typeof u.onClick&&(t.onclick=un)}gn(o,r)&&(e.effectTag|=4)}null!==e.ref&&(e.effectTag|=128)}return null;case 6:if(t&&null!=e.stateNode)Vs(0,e,t.memoizedProps,r);else{if("string"!==typeof r&&null===e.stateNode)throw Error(s(166));n=Ao(Eo.current),Ao(jo.current),Ts(e)?(n=e.stateNode,r=e.memoizedProps,n[In]=e,n.nodeValue!==r&&(e.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[In]=e,e.stateNode=n)}return null;case 13:return ca(Mo),r=e.memoizedState,0!==(64&e.effectTag)?(e.expirationTime=n,e):(n=null!==r,r=!1,null===t?void 0!==e.memoizedProps.fallback&&Ts(e):(r=null!==(o=t.memoizedState),n||null===o||null!==(o=t.child.sibling)&&(null!==(i=e.firstEffect)?(e.firstEffect=o,o.nextEffect=i):(e.firstEffect=e.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!==(2&e.mode)&&(null===t&&!0!==e.memoizedProps.unstable_avoidThisFallback||0!==(1&Mo.current)?Ti===xi&&(Ti=wi):(Ti!==xi&&Ti!==wi||(Ti=ki),0!==_i&&null!==Ii&&(Rc(Ii,Ni),Dc(Ii,_i)))),(n||r)&&(e.effectTag|=4),null);case 4:return Ro(),null;case 10:return to(e),null;case 17:return ma(e.type)&&ba(),null;case 19:if(ca(Mo),null===(r=e.memoizedState))return null;if(o=0!==(64&e.effectTag),null===(i=r.rendering)){if(o)Ys(r,!1);else if(Ti!==xi||null!==t&&0!==(64&t.effectTag))for(i=e.child;null!==i;){if(null!==(t=zo(i))){for(e.effectTag|=64,Ys(r,!1),null!==(o=t.updateQueue)&&(e.updateQueue=o,e.effectTag|=4),null===r.lastEffect&&(e.firstEffect=null),e.lastEffect=r.lastEffect,r=e.child;null!==r;)i=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(t=o.alternate)?(o.childExpirationTime=0,o.expirationTime=i,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=t.childExpirationTime,o.expirationTime=t.expirationTime,o.child=t.child,o.memoizedProps=t.memoizedProps,o.memoizedState=t.memoizedState,o.updateQueue=t.updateQueue,i=t.dependencies,o.dependencies=null===i?null:{expirationTime:i.expirationTime,firstContext:i.firstContext,responders:i.responders}),r=r.sibling;return ua(Mo,1&Mo.current|2),e.child}i=i.sibling}}else{if(!o)if(null!==(t=zo(i))){if(e.effectTag|=64,o=!0,null!==(n=t.updateQueue)&&(e.updateQueue=n,e.effectTag|=4),Ys(r,!0),null===r.tail&&"hidden"===r.tailMode&&!i.alternate)return null!==(e=e.lastEffect=r.lastEffect)&&(e.nextEffect=null),null}else 2*Pa()-r.renderingStartTime>r.tailExpiration&&1<n&&(e.effectTag|=64,o=!0,Ys(r,!1),e.expirationTime=e.childExpirationTime=n-1);r.isBackwards?(i.sibling=e.child,e.child=i):(null!==(n=r.last)?n.sibling=i:e.child=i,r.last=i)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Pa()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=e.lastEffect,r.renderingStartTime=Pa(),n.sibling=null,e=Mo.current,ua(Mo,o?1&e|2:1&e),n):null}throw Error(s(156,e.tag))}function Zs(t){switch(t.tag){case 1:ma(t.type)&&ba();var e=t.effectTag;return 4096&e?(t.effectTag=-4097&e|64,t):null;case 3:if(Ro(),ca(ha),ca(da),0!==(64&(e=t.effectTag)))throw Error(s(285));return t.effectTag=-4097&e|64,t;case 5:return Fo(t),null;case 13:return ca(Mo),4096&(e=t.effectTag)?(t.effectTag=-4097&e|64,t):null;case 19:return ca(Mo),null;case 4:return Ro(),null;case 10:return to(t),null;default:return null}}function Js(t,e){return{value:t,source:e,stack:gt(e)}}Bs=function(t,e){for(var n=e.child;null!==n;){if(5===n.tag||6===n.tag)t.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Ws=function(t,e,n,r,o){var s=t.memoizedProps;if(s!==r){var i,c,u=e.stateNode;switch(Ao(jo.current),t=null,n){case"input":s=kt(u,s),r=kt(u,r),t=[];break;case"option":s=jt(u,s),r=jt(u,r),t=[];break;case"select":s=a({},s,{value:void 0}),r=a({},r,{value:void 0}),t=[];break;case"textarea":s=Et(u,s),r=Et(u,r),t=[];break;default:"function"!==typeof s.onClick&&"function"===typeof r.onClick&&(u.onclick=un)}for(i in an(n,r),n=null,s)if(!r.hasOwnProperty(i)&&s.hasOwnProperty(i)&&null!=s[i])if("style"===i)for(c in u=s[i])u.hasOwnProperty(c)&&(n||(n={}),n[c]="");else"dangerouslySetInnerHTML"!==i&&"children"!==i&&"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(I.hasOwnProperty(i)?t||(t=[]):(t=t||[]).push(i,null));for(i in r){var l=r[i];if(u=null!=s?s[i]:void 0,r.hasOwnProperty(i)&&l!==u&&(null!=l||null!=u))if("style"===i)if(u){for(c in u)!u.hasOwnProperty(c)||l&&l.hasOwnProperty(c)||(n||(n={}),n[c]="");for(c in l)l.hasOwnProperty(c)&&u[c]!==l[c]&&(n||(n={}),n[c]=l[c])}else n||(t||(t=[]),t.push(i,n)),n=l;else"dangerouslySetInnerHTML"===i?(l=l?l.__html:void 0,u=u?u.__html:void 0,null!=l&&u!==l&&(t=t||[]).push(i,l)):"children"===i?u===l||"string"!==typeof l&&"number"!==typeof l||(t=t||[]).push(i,""+l):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&(I.hasOwnProperty(i)?(null!=l&&cn(o,i),t||u===l||(t=[])):(t=t||[]).push(i,l))}n&&(t=t||[]).push("style",n),o=t,(e.updateQueue=o)&&(e.effectTag|=4)}},Vs=function(t,e,n,r){n!==r&&(e.effectTag|=4)};var $s="function"===typeof WeakSet?WeakSet:Set;function ti(t,e){var n=e.source,r=e.stack;null===r&&null!==n&&(r=gt(n)),null!==n&&bt(n.type),e=e.value,null!==t&&1===t.tag&&bt(t.type);try{console.error(e)}catch(a){setTimeout((function(){throw a}))}}function ei(t){var e=t.ref;if(null!==e)if("function"===typeof e)try{e(null)}catch(n){yc(t,n)}else e.current=null}function ni(t,e){switch(e.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&e.effectTag&&null!==t){var n=t.memoizedProps,r=t.memoizedState;e=(t=e.stateNode).getSnapshotBeforeUpdate(e.elementType===e.type?n:Xa(e.type,n),r),t.__reactInternalSnapshotBeforeUpdate=e}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(s(163))}function ri(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==e)}}function ai(t,e){if(null!==(e=null!==(e=e.updateQueue)?e.lastEffect:null)){var n=e=e.next;do{if((n.tag&t)===t){var r=n.create;n.destroy=r()}n=n.next}while(n!==e)}}function oi(t,e,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ai(3,n);case 1:if(t=n.stateNode,4&n.effectTag)if(null===e)t.componentDidMount();else{var r=n.elementType===n.type?e.memoizedProps:Xa(n.type,e.memoizedProps);t.componentDidUpdate(r,e.memoizedState,t.__reactInternalSnapshotBeforeUpdate)}return void(null!==(e=n.updateQueue)&&ho(n,e,t));case 3:if(null!==(e=n.updateQueue)){if(t=null,null!==n.child)switch(n.child.tag){case 5:t=n.child.stateNode;break;case 1:t=n.child.stateNode}ho(n,e,t)}return;case 5:return t=n.stateNode,void(null===e&&4&n.effectTag&&gn(n.type,n.memoizedProps)&&t.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Me(n)))));case 19:case 17:case 20:case 21:return}throw Error(s(163))}function si(t,e,n){switch("function"===typeof kc&&kc(e),e.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(t=e.updateQueue)&&null!==(t=t.lastEffect)){var r=t.next;Va(97<n?97:n,(function(){var t=r;do{var n=t.destroy;if(void 0!==n){var a=e;try{n()}catch(o){yc(a,o)}}t=t.next}while(t!==r)}))}break;case 1:ei(e),"function"===typeof(n=e.stateNode).componentWillUnmount&&function(t,e){try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(n){yc(t,n)}}(e,n);break;case 5:ei(e);break;case 4:li(t,e,n)}}function ii(t){var e=t.alternate;t.return=null,t.child=null,t.memoizedState=null,t.updateQueue=null,t.dependencies=null,t.alternate=null,t.firstEffect=null,t.lastEffect=null,t.pendingProps=null,t.memoizedProps=null,t.stateNode=null,null!==e&&ii(e)}function ci(t){return 5===t.tag||3===t.tag||4===t.tag}function ui(t){t:{for(var e=t.return;null!==e;){if(ci(e)){var n=e;break t}e=e.return}throw Error(s(160))}switch(e=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:e=e.containerInfo,r=!0;break;default:throw Error(s(161))}16&n.effectTag&&(Bt(e,""),n.effectTag&=-17);t:e:for(n=t;;){for(;null===n.sibling;){if(null===n.return||ci(n.return)){n=null;break t}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue e;if(null===n.child||4===n.tag)continue e;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break t}}r?function t(e,n,r){var a=e.tag,o=5===a||6===a;if(o)e=o?e.stateNode:e.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(e,n):r.insertBefore(e,n):(8===r.nodeType?(n=r.parentNode).insertBefore(e,r):(n=r).appendChild(e),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=un));else if(4!==a&&null!==(e=e.child))for(t(e,n,r),e=e.sibling;null!==e;)t(e,n,r),e=e.sibling}(t,n,e):function t(e,n,r){var a=e.tag,o=5===a||6===a;if(o)e=o?e.stateNode:e.stateNode.instance,n?r.insertBefore(e,n):r.appendChild(e);else if(4!==a&&null!==(e=e.child))for(t(e,n,r),e=e.sibling;null!==e;)t(e,n,r),e=e.sibling}(t,n,e)}function li(t,e,n){for(var r,a,o=e,i=!1;;){if(!i){i=o.return;t:for(;;){if(null===i)throw Error(s(160));switch(r=i.stateNode,i.tag){case 5:a=!1;break t;case 3:case 4:r=r.containerInfo,a=!0;break t}i=i.return}i=!0}if(5===o.tag||6===o.tag){t:for(var c=t,u=o,l=n,d=u;;)if(si(c,d,l),null!==d.child&&4!==d.tag)d.child.return=d,d=d.child;else{if(d===u)break t;for(;null===d.sibling;){if(null===d.return||d.return===u)break t;d=d.return}d.sibling.return=d.return,d=d.sibling}a?(c=r,u=o.stateNode,8===c.nodeType?c.parentNode.removeChild(u):c.removeChild(u)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,a=!0,o.child.return=o,o=o.child;continue}}else if(si(t,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;4===(o=o.return).tag&&(i=!1)}o.sibling.return=o.return,o=o.sibling}}function di(t,e){switch(e.tag){case 0:case 11:case 14:case 15:case 22:return void ri(3,e);case 1:return;case 5:var n=e.stateNode;if(null!=n){var r=e.memoizedProps,a=null!==t?t.memoizedProps:r;t=e.type;var o=e.updateQueue;if(e.updateQueue=null,null!==o){for(n[Sn]=r,"input"===t&&"radio"===r.type&&null!=r.name&&It(n,r),on(t,a),e=on(t,r),a=0;a<o.length;a+=2){var i=o[a],c=o[a+1];"style"===i?nn(n,c):"dangerouslySetInnerHTML"===i?Pt(n,c):"children"===i?Bt(n,c):Z(n,i,c,e)}switch(t){case"input":St(n,r);break;case"textarea":_t(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(t=r.value)?Ct(n,!!r.multiple,t,!1):e!==!!r.multiple&&(null!=r.defaultValue?Ct(n,!!r.multiple,r.defaultValue,!0):Ct(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===e.stateNode)throw Error(s(162));return void(e.stateNode.nodeValue=e.memoizedProps);case 3:return void((e=e.stateNode).hydrate&&(e.hydrate=!1,Me(e.containerInfo)));case 12:return;case 13:if(n=e,null===e.memoizedState?r=!1:(r=!0,n=e.child,Di=Pa()),null!==n)t:for(t=n;;){if(5===t.tag)o=t.stateNode,r?"function"===typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=t.stateNode,a=void 0!==(a=t.memoizedProps.style)&&null!==a&&a.hasOwnProperty("display")?a.display:null,o.style.display=en("display",a));else if(6===t.tag)t.stateNode.nodeValue=r?"":t.memoizedProps;else{if(13===t.tag&&null!==t.memoizedState&&null===t.memoizedState.dehydrated){(o=t.child.sibling).return=t,t=o;continue}if(null!==t.child){t.child.return=t,t=t.child;continue}}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)break t;t=t.return}t.sibling.return=t.return,t=t.sibling}return void hi(e);case 19:return void hi(e);case 17:return}throw Error(s(163))}function hi(t){var e=t.updateQueue;if(null!==e){t.updateQueue=null;var n=t.stateNode;null===n&&(n=t.stateNode=new $s),e.forEach((function(e){var r=xc.bind(null,t,e);n.has(e)||(n.add(e),e.then(r,r))}))}}var pi="function"===typeof WeakMap?WeakMap:Map;function fi(t,e,n){(n=io(n,null)).tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){Mi||(Mi=!0,zi=r),ti(t,e)},n}function mi(t,e,n){(n=io(n,null)).tag=3;var r=t.type.getDerivedStateFromError;if("function"===typeof r){var a=e.value;n.payload=function(){return ti(t,e),r(a)}}var o=t.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){"function"!==typeof r&&(null===Li?Li=new Set([this]):Li.add(this),ti(t,e));var n=e.stack;this.componentDidCatch(e.value,{componentStack:null!==n?n:""})}),n}var bi,gi=Math.ceil,yi=Q.ReactCurrentDispatcher,vi=Q.ReactCurrentOwner,xi=0,wi=3,ki=4,Oi=0,Ii=null,Si=null,Ni=0,Ti=xi,ji=null,Ci=1073741823,Ei=1073741823,Ai=null,_i=0,Ri=!1,Di=0,Fi=null,Mi=!1,zi=null,Li=null,Pi=!1,Bi=null,Wi=90,Vi=null,Ui=0,Gi=null,Hi=0;function qi(){return 0!==(48&Oi)?1073741821-(Pa()/10|0):0!==Hi?Hi:Hi=1073741821-(Pa()/10|0)}function Ki(t,e,n){if(0===(2&(e=e.mode)))return 1073741823;var r=Ba();if(0===(4&e))return 99===r?1073741823:1073741822;if(0!==(16&Oi))return Ni;if(null!==n)t=Ka(t,0|n.timeoutMs||5e3,250);else switch(r){case 99:t=1073741823;break;case 98:t=Ka(t,150,100);break;case 97:case 96:t=Ka(t,5e3,250);break;case 95:t=2;break;default:throw Error(s(326))}return null!==Ii&&t===Ni&&--t,t}function Xi(t,e){if(50<Ui)throw Ui=0,Gi=null,Error(s(185));if(null!==(t=Yi(t,e))){var n=Ba();1073741823===e?0!==(8&Oi)&&0===(48&Oi)?$i(t):(Zi(t),0===Oi&&Ha()):Zi(t),0===(4&Oi)||98!==n&&99!==n||(null===Vi?Vi=new Map([[t,e]]):(void 0===(n=Vi.get(t))||n>e)&&Vi.set(t,e))}}function Yi(t,e){t.expirationTime<e&&(t.expirationTime=e);var n=t.alternate;null!==n&&n.expirationTime<e&&(n.expirationTime=e);var r=t.return,a=null;if(null===r&&3===t.tag)a=t.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<e&&(r.childExpirationTime=e),null!==n&&n.childExpirationTime<e&&(n.childExpirationTime=e),null===r.return&&3===r.tag){a=r.stateNode;break}r=r.return}return null!==a&&(Ii===a&&(sc(e),Ti===ki&&Rc(a,Ni)),Dc(a,e)),a}function Qi(t){var e=t.lastExpiredTime;if(0!==e)return e;if(!_c(t,e=t.firstPendingTime))return e;var n=t.lastPingedTime;return 2>=(t=n>(t=t.nextKnownPendingLevel)?n:t)&&e!==t?0:t}function Zi(t){if(0!==t.lastExpiredTime)t.callbackExpirationTime=1073741823,t.callbackPriority=99,t.callbackNode=Ga($i.bind(null,t));else{var e=Qi(t),n=t.callbackNode;if(0===e)null!==n&&(t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90);else{var r=qi();if(1073741823===e?r=99:1===e||2===e?r=95:r=0>=(r=10*(1073741821-e)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var a=t.callbackPriority;if(t.callbackExpirationTime===e&&a>=r)return;n!==_a&&Oa(n)}t.callbackExpirationTime=e,t.callbackPriority=r,e=1073741823===e?Ga($i.bind(null,t)):Ua(r,Ji.bind(null,t),{timeout:10*(1073741821-e)-Pa()}),t.callbackNode=e}}}function Ji(t,e){if(Hi=0,e)return Fc(t,e=qi()),Zi(t),null;var n=Qi(t);if(0!==n){if(e=t.callbackNode,0!==(48&Oi))throw Error(s(327));if(mc(),t===Ii&&n===Ni||nc(t,n),null!==Si){var r=Oi;Oi|=16;for(var a=ac();;)try{cc();break}catch(c){rc(t,c)}if($a(),Oi=r,yi.current=a,1===Ti)throw e=ji,nc(t,n),Rc(t,n),Zi(t),e;if(null===Si)switch(a=t.finishedWork=t.current.alternate,t.finishedExpirationTime=n,r=Ti,Ii=null,r){case xi:case 1:throw Error(s(345));case 2:Fc(t,2<n?2:n);break;case wi:if(Rc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=dc(a)),1073741823===Ci&&10<(a=Di+500-Pa())){if(Ri){var o=t.lastPingedTime;if(0===o||o>=n){t.lastPingedTime=n,nc(t,n);break}}if(0!==(o=Qi(t))&&o!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}t.timeoutHandle=vn(hc.bind(null,t),a);break}hc(t);break;case ki:if(Rc(t,n),n===(r=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=dc(a)),Ri&&(0===(a=t.lastPingedTime)||a>=n)){t.lastPingedTime=n,nc(t,n);break}if(0!==(a=Qi(t))&&a!==n)break;if(0!==r&&r!==n){t.lastPingedTime=r;break}if(1073741823!==Ei?r=10*(1073741821-Ei)-Pa():1073741823===Ci?r=0:(r=10*(1073741821-Ci)-5e3,0>(r=(a=Pa())-r)&&(r=0),(n=10*(1073741821-n)-a)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*gi(r/1960))-r)&&(r=n)),10<r){t.timeoutHandle=vn(hc.bind(null,t),r);break}hc(t);break;case 5:if(1073741823!==Ci&&null!==Ai){o=Ci;var i=Ai;if(0>=(r=0|i.busyMinDurationMs)?r=0:(a=0|i.busyDelayMs,r=(o=Pa()-(10*(1073741821-o)-(0|i.timeoutMs||5e3)))<=a?0:a+r-o),10<r){Rc(t,n),t.timeoutHandle=vn(hc.bind(null,t),r);break}}hc(t);break;default:throw Error(s(329))}if(Zi(t),t.callbackNode===e)return Ji.bind(null,t)}}return null}function $i(t){var e=t.lastExpiredTime;if(e=0!==e?e:1073741823,0!==(48&Oi))throw Error(s(327));if(mc(),t===Ii&&e===Ni||nc(t,e),null!==Si){var n=Oi;Oi|=16;for(var r=ac();;)try{ic();break}catch(a){rc(t,a)}if($a(),Oi=n,yi.current=r,1===Ti)throw n=ji,nc(t,e),Rc(t,e),Zi(t),n;if(null!==Si)throw Error(s(261));t.finishedWork=t.current.alternate,t.finishedExpirationTime=e,Ii=null,hc(t),Zi(t)}return null}function tc(t,e){var n=Oi;Oi|=1;try{return t(e)}finally{0===(Oi=n)&&Ha()}}function ec(t,e){var n=Oi;Oi&=-2,Oi|=8;try{return t(e)}finally{0===(Oi=n)&&Ha()}}function nc(t,e){t.finishedWork=null,t.finishedExpirationTime=0;var n=t.timeoutHandle;if(-1!==n&&(t.timeoutHandle=-1,xn(n)),null!==Si)for(n=Si.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&ba();break;case 3:Ro(),ca(ha),ca(da);break;case 5:Fo(r);break;case 4:Ro();break;case 13:case 19:ca(Mo);break;case 10:to(r)}n=n.return}Ii=t,Si=Nc(t.current,null),Ni=e,Ti=xi,ji=null,Ei=Ci=1073741823,Ai=null,_i=0,Ri=!1}function rc(t,e){for(;;){try{if($a(),Po.current=bs,Ho)for(var n=Vo.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Wo=0,Go=Uo=Vo=null,Ho=!1,null===Si||null===Si.return)return Ti=1,ji=e,Si=null;t:{var a=t,o=Si.return,s=Si,i=e;if(e=Ni,s.effectTag|=2048,s.firstEffect=s.lastEffect=null,null!==i&&"object"===typeof i&&"function"===typeof i.then){var c=i;if(0===(2&s.mode)){var u=s.alternate;u?(s.updateQueue=u.updateQueue,s.memoizedState=u.memoizedState,s.expirationTime=u.expirationTime):(s.updateQueue=null,s.memoizedState=null)}var l=0!==(1&Mo.current),d=o;do{var h;if(h=13===d.tag){var p=d.memoizedState;if(null!==p)h=null!==p.dehydrated;else{var f=d.memoizedProps;h=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!l)}}if(h){var m=d.updateQueue;if(null===m){var b=new Set;b.add(c),d.updateQueue=b}else m.add(c);if(0===(2&d.mode)){if(d.effectTag|=64,s.effectTag&=-2981,1===s.tag)if(null===s.alternate)s.tag=17;else{var g=io(1073741823,null);g.tag=2,co(s,g)}s.expirationTime=1073741823;break t}i=void 0,s=e;var y=a.pingCache;if(null===y?(y=a.pingCache=new pi,i=new Set,y.set(c,i)):void 0===(i=y.get(c))&&(i=new Set,y.set(c,i)),!i.has(s)){i.add(s);var v=vc.bind(null,a,c,s);c.then(v,v)}d.effectTag|=4096,d.expirationTime=e;break t}d=d.return}while(null!==d);i=Error((bt(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+gt(s))}5!==Ti&&(Ti=2),i=Js(i,s),d=o;do{switch(d.tag){case 3:c=i,d.effectTag|=4096,d.expirationTime=e,uo(d,fi(d,c,e));break t;case 1:c=i;var x=d.type,w=d.stateNode;if(0===(64&d.effectTag)&&("function"===typeof x.getDerivedStateFromError||null!==w&&"function"===typeof w.componentDidCatch&&(null===Li||!Li.has(w)))){d.effectTag|=4096,d.expirationTime=e,uo(d,mi(d,c,e));break t}}d=d.return}while(null!==d)}Si=lc(Si)}catch(k){e=k;continue}break}}function ac(){var t=yi.current;return yi.current=bs,null===t?bs:t}function oc(t,e){t<Ci&&2<t&&(Ci=t),null!==e&&t<Ei&&2<t&&(Ei=t,Ai=e)}function sc(t){t>_i&&(_i=t)}function ic(){for(;null!==Si;)Si=uc(Si)}function cc(){for(;null!==Si&&!Ra();)Si=uc(Si)}function uc(t){var e=bi(t.alternate,t,Ni);return t.memoizedProps=t.pendingProps,null===e&&(e=lc(t)),vi.current=null,e}function lc(t){Si=t;do{var e=Si.alternate;if(t=Si.return,0===(2048&Si.effectTag)){if(e=Qs(e,Si,Ni),1===Ni||1!==Si.childExpirationTime){for(var n=0,r=Si.child;null!==r;){var a=r.expirationTime,o=r.childExpirationTime;a>n&&(n=a),o>n&&(n=o),r=r.sibling}Si.childExpirationTime=n}if(null!==e)return e;null!==t&&0===(2048&t.effectTag)&&(null===t.firstEffect&&(t.firstEffect=Si.firstEffect),null!==Si.lastEffect&&(null!==t.lastEffect&&(t.lastEffect.nextEffect=Si.firstEffect),t.lastEffect=Si.lastEffect),1<Si.effectTag&&(null!==t.lastEffect?t.lastEffect.nextEffect=Si:t.firstEffect=Si,t.lastEffect=Si))}else{if(null!==(e=Zs(Si)))return e.effectTag&=2047,e;null!==t&&(t.firstEffect=t.lastEffect=null,t.effectTag|=2048)}if(null!==(e=Si.sibling))return e;Si=t}while(null!==Si);return Ti===xi&&(Ti=5),null}function dc(t){var e=t.expirationTime;return e>(t=t.childExpirationTime)?e:t}function hc(t){var e=Ba();return Va(99,pc.bind(null,t,e)),null}function pc(t,e){do{mc()}while(null!==Bi);if(0!==(48&Oi))throw Error(s(327));var n=t.finishedWork,r=t.finishedExpirationTime;if(null===n)return null;if(t.finishedWork=null,t.finishedExpirationTime=0,n===t.current)throw Error(s(177));t.callbackNode=null,t.callbackExpirationTime=0,t.callbackPriority=90,t.nextKnownPendingLevel=0;var a=dc(n);if(t.firstPendingTime=a,r<=t.lastSuspendedTime?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:r<=t.firstSuspendedTime&&(t.firstSuspendedTime=r-1),r<=t.lastPingedTime&&(t.lastPingedTime=0),r<=t.lastExpiredTime&&(t.lastExpiredTime=0),t===Ii&&(Si=Ii=null,Ni=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){var o=Oi;Oi|=32,vi.current=null,mn=qe;var i=pn();if(fn(i)){if("selectionStart"in i)var c={start:i.selectionStart,end:i.selectionEnd};else t:{var u=(c=(c=i.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(u&&0!==u.rangeCount){c=u.anchorNode;var l=u.anchorOffset,d=u.focusNode;u=u.focusOffset;try{c.nodeType,d.nodeType}catch(N){c=null;break t}var h=0,p=-1,f=-1,m=0,b=0,g=i,y=null;e:for(;;){for(var v;g!==c||0!==l&&3!==g.nodeType||(p=h+l),g!==d||0!==u&&3!==g.nodeType||(f=h+u),3===g.nodeType&&(h+=g.nodeValue.length),null!==(v=g.firstChild);)y=g,g=v;for(;;){if(g===i)break e;if(y===c&&++m===l&&(p=h),y===d&&++b===u&&(f=h),null!==(v=g.nextSibling))break;y=(g=y).parentNode}g=v}c=-1===p||-1===f?null:{start:p,end:f}}else c=null}c=c||{start:0,end:0}}else c=null;bn={activeElementDetached:null,focusedElem:i,selectionRange:c},qe=!1,Fi=a;do{try{fc()}catch(N){if(null===Fi)throw Error(s(330));yc(Fi,N),Fi=Fi.nextEffect}}while(null!==Fi);Fi=a;do{try{for(i=t,c=e;null!==Fi;){var x=Fi.effectTag;if(16&x&&Bt(Fi.stateNode,""),128&x){var w=Fi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"===typeof k?k(null):k.current=null)}}switch(1038&x){case 2:ui(Fi),Fi.effectTag&=-3;break;case 6:ui(Fi),Fi.effectTag&=-3,di(Fi.alternate,Fi);break;case 1024:Fi.effectTag&=-1025;break;case 1028:Fi.effectTag&=-1025,di(Fi.alternate,Fi);break;case 4:di(Fi.alternate,Fi);break;case 8:li(i,l=Fi,c),ii(l)}Fi=Fi.nextEffect}}catch(N){if(null===Fi)throw Error(s(330));yc(Fi,N),Fi=Fi.nextEffect}}while(null!==Fi);if(k=bn,w=pn(),x=k.focusedElem,c=k.selectionRange,w!==x&&x&&x.ownerDocument&&function t(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?t(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}(x.ownerDocument.documentElement,x)){null!==c&&fn(x)&&(w=c.start,void 0===(k=c.end)&&(k=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(k,x.value.length)):(k=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),l=x.textContent.length,i=Math.min(c.start,l),c=void 0===c.end?i:Math.min(c.end,l),!k.extend&&i>c&&(l=c,c=i,i=l),l=hn(x,i),d=hn(x,c),l&&d&&(1!==k.rangeCount||k.anchorNode!==l.node||k.anchorOffset!==l.offset||k.focusNode!==d.node||k.focusOffset!==d.offset)&&((w=w.createRange()).setStart(l.node,l.offset),k.removeAllRanges(),i>c?(k.addRange(w),k.extend(d.node,d.offset)):(w.setEnd(d.node,d.offset),k.addRange(w))))),w=[];for(k=x;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"===typeof x.focus&&x.focus(),x=0;x<w.length;x++)(k=w[x]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qe=!!mn,bn=mn=null,t.current=n,Fi=a;do{try{for(x=t;null!==Fi;){var O=Fi.effectTag;if(36&O&&oi(x,Fi.alternate,Fi),128&O){w=void 0;var I=Fi.ref;if(null!==I){var S=Fi.stateNode;switch(Fi.tag){case 5:w=S;break;default:w=S}"function"===typeof I?I(w):I.current=w}}Fi=Fi.nextEffect}}catch(N){if(null===Fi)throw Error(s(330));yc(Fi,N),Fi=Fi.nextEffect}}while(null!==Fi);Fi=null,Da(),Oi=o}else t.current=n;if(Pi)Pi=!1,Bi=t,Wi=e;else for(Fi=a;null!==Fi;)e=Fi.nextEffect,Fi.nextEffect=null,Fi=e;if(0===(e=t.firstPendingTime)&&(Li=null),1073741823===e?t===Gi?Ui++:(Ui=0,Gi=t):Ui=0,"function"===typeof wc&&wc(n.stateNode,r),Zi(t),Mi)throw Mi=!1,t=zi,zi=null,t;return 0!==(8&Oi)||Ha(),null}function fc(){for(;null!==Fi;){var t=Fi.effectTag;0!==(256&t)&&ni(Fi.alternate,Fi),0===(512&t)||Pi||(Pi=!0,Ua(97,(function(){return mc(),null}))),Fi=Fi.nextEffect}}function mc(){if(90!==Wi){var t=97<Wi?97:Wi;return Wi=90,Va(t,bc)}}function bc(){if(null===Bi)return!1;var t=Bi;if(Bi=null,0!==(48&Oi))throw Error(s(331));var e=Oi;for(Oi|=32,t=t.current.firstEffect;null!==t;){try{var n=t;if(0!==(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ri(5,n),ai(5,n)}}catch(r){if(null===t)throw Error(s(330));yc(t,r)}n=t.nextEffect,t.nextEffect=null,t=n}return Oi=e,Ha(),!0}function gc(t,e,n){co(t,e=fi(t,e=Js(n,e),1073741823)),null!==(t=Yi(t,1073741823))&&Zi(t)}function yc(t,e){if(3===t.tag)gc(t,t,e);else for(var n=t.return;null!==n;){if(3===n.tag){gc(n,t,e);break}if(1===n.tag){var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Li||!Li.has(r))){co(n,t=mi(n,t=Js(e,t),1073741823)),null!==(n=Yi(n,1073741823))&&Zi(n);break}}n=n.return}}function vc(t,e,n){var r=t.pingCache;null!==r&&r.delete(e),Ii===t&&Ni===n?Ti===ki||Ti===wi&&1073741823===Ci&&Pa()-Di<500?nc(t,Ni):Ri=!0:_c(t,n)&&(0!==(e=t.lastPingedTime)&&e<n||(t.lastPingedTime=n,Zi(t)))}function xc(t,e){var n=t.stateNode;null!==n&&n.delete(e),0===(e=0)&&(e=Ki(e=qi(),t,null)),null!==(t=Yi(t,e))&&Zi(t)}bi=function(t,e,n){var r=e.expirationTime;if(null!==t){var a=e.pendingProps;if(t.memoizedProps!==a||ha.current)Es=!0;else{if(r<n){switch(Es=!1,e.tag){case 3:Ps(e),js();break;case 5:if(Do(e),4&e.mode&&1!==n&&a.hidden)return e.expirationTime=e.childExpirationTime=1,null;break;case 1:ma(e.type)&&va(e);break;case 4:_o(e,e.stateNode.containerInfo);break;case 10:r=e.memoizedProps.value,a=e.type._context,ua(Ya,a._currentValue),a._currentValue=r;break;case 13:if(null!==e.memoizedState)return 0!==(r=e.child.childExpirationTime)&&r>=n?Gs(t,e,n):(ua(Mo,1&Mo.current),null!==(e=Xs(t,e,n))?e.sibling:null);ua(Mo,1&Mo.current);break;case 19:if(r=e.childExpirationTime>=n,0!==(64&t.effectTag)){if(r)return Ks(t,e,n);e.effectTag|=64}if(null!==(a=e.memoizedState)&&(a.rendering=null,a.tail=null),ua(Mo,Mo.current),!r)return null}return Xs(t,e,n)}Es=!1}}else Es=!1;switch(e.expirationTime=0,e.tag){case 2:if(r=e.type,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,a=fa(e,da.current),no(e,n),a=Xo(null,e,r,t,a,n),e.effectTag|=1,"object"===typeof a&&null!==a&&"function"===typeof a.render&&void 0===a.$$typeof){if(e.tag=1,e.memoizedState=null,e.updateQueue=null,ma(r)){var o=!0;va(e)}else o=!1;e.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,oo(e);var i=r.getDerivedStateFromProps;"function"===typeof i&&mo(e,r,i,t),a.updater=bo,e.stateNode=a,a._reactInternalFiber=e,xo(e,r,t,n),e=Ls(null,e,r,!0,o,n)}else e.tag=0,As(null,e,a,n),e=e.child;return e;case 16:t:{if(a=e.elementType,null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),t=e.pendingProps,function(t){if(-1===t._status){t._status=0;var e=t._ctor;e=e(),t._result=e,e.then((function(e){0===t._status&&(e=e.default,t._status=1,t._result=e)}),(function(e){0===t._status&&(t._status=2,t._result=e)}))}}(a),1!==a._status)throw a._result;switch(a=a._result,e.type=a,o=e.tag=function(t){if("function"===typeof t)return Sc(t)?1:0;if(void 0!==t&&null!==t){if((t=t.$$typeof)===ct)return 11;if(t===dt)return 14}return 2}(a),t=Xa(a,t),o){case 0:e=Ms(null,e,a,t,n);break t;case 1:e=zs(null,e,a,t,n);break t;case 11:e=_s(null,e,a,t,n);break t;case 14:e=Rs(null,e,a,Xa(a.type,t),r,n);break t}throw Error(s(306,a,""))}return e;case 0:return r=e.type,a=e.pendingProps,Ms(t,e,r,a=e.elementType===r?a:Xa(r,a),n);case 1:return r=e.type,a=e.pendingProps,zs(t,e,r,a=e.elementType===r?a:Xa(r,a),n);case 3:if(Ps(e),r=e.updateQueue,null===t||null===r)throw Error(s(282));if(r=e.pendingProps,a=null!==(a=e.memoizedState)?a.element:null,so(t,e),lo(e,r,null,n),(r=e.memoizedState.element)===a)js(),e=Xs(t,e,n);else{if((a=e.stateNode.hydrate)&&(ws=wn(e.stateNode.containerInfo.firstChild),xs=e,a=ks=!0),a)for(n=No(e,null,r,n),e.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else As(t,e,r,n),js();e=e.child}return e;case 5:return Do(e),null===t&&Ss(e),r=e.type,a=e.pendingProps,o=null!==t?t.memoizedProps:null,i=a.children,yn(r,a)?i=null:null!==o&&yn(r,o)&&(e.effectTag|=16),Fs(t,e),4&e.mode&&1!==n&&a.hidden?(e.expirationTime=e.childExpirationTime=1,e=null):(As(t,e,i,n),e=e.child),e;case 6:return null===t&&Ss(e),null;case 13:return Gs(t,e,n);case 4:return _o(e,e.stateNode.containerInfo),r=e.pendingProps,null===t?e.child=So(e,null,r,n):As(t,e,r,n),e.child;case 11:return r=e.type,a=e.pendingProps,_s(t,e,r,a=e.elementType===r?a:Xa(r,a),n);case 7:return As(t,e,e.pendingProps,n),e.child;case 8:case 12:return As(t,e,e.pendingProps.children,n),e.child;case 10:t:{r=e.type._context,a=e.pendingProps,i=e.memoizedProps,o=a.value;var c=e.type._context;if(ua(Ya,c._currentValue),c._currentValue=o,null!==i)if(c=i.value,0===(o=zr(c,o)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(c,o):1073741823))){if(i.children===a.children&&!ha.current){e=Xs(t,e,n);break t}}else for(null!==(c=e.child)&&(c.return=e);null!==c;){var u=c.dependencies;if(null!==u){i=c.child;for(var l=u.firstContext;null!==l;){if(l.context===r&&0!==(l.observedBits&o)){1===c.tag&&((l=io(n,null)).tag=2,co(c,l)),c.expirationTime<n&&(c.expirationTime=n),null!==(l=c.alternate)&&l.expirationTime<n&&(l.expirationTime=n),eo(c.return,n),u.expirationTime<n&&(u.expirationTime=n);break}l=l.next}}else i=10===c.tag&&c.type===e.type?null:c.child;if(null!==i)i.return=c;else for(i=c;null!==i;){if(i===e){i=null;break}if(null!==(c=i.sibling)){c.return=i.return,i=c;break}i=i.return}c=i}As(t,e,a.children,n),e=e.child}return e;case 9:return a=e.type,r=(o=e.pendingProps).children,no(e,n),r=r(a=ro(a,o.unstable_observedBits)),e.effectTag|=1,As(t,e,r,n),e.child;case 14:return o=Xa(a=e.type,e.pendingProps),Rs(t,e,a,o=Xa(a.type,o),r,n);case 15:return Ds(t,e,e.type,e.pendingProps,r,n);case 17:return r=e.type,a=e.pendingProps,a=e.elementType===r?a:Xa(r,a),null!==t&&(t.alternate=null,e.alternate=null,e.effectTag|=2),e.tag=1,ma(r)?(t=!0,va(e)):t=!1,no(e,n),yo(e,r,a),xo(e,r,a,n),Ls(null,e,r,!0,t,n);case 19:return Ks(t,e,n)}throw Error(s(156,e.tag))};var wc=null,kc=null;function Oc(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Ic(t,e,n,r){return new Oc(t,e,n,r)}function Sc(t){return!(!(t=t.prototype)||!t.isReactComponent)}function Nc(t,e){var n=t.alternate;return null===n?((n=Ic(t.tag,e,t.key,t.mode)).elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=t.childExpirationTime,n.expirationTime=t.expirationTime,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=null===e?null:{expirationTime:e.expirationTime,firstContext:e.firstContext,responders:e.responders},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Tc(t,e,n,r,a,o){var i=2;if(r=t,"function"===typeof t)Sc(t)&&(i=1);else if("string"===typeof t)i=5;else t:switch(t){case nt:return jc(n.children,a,o,e);case it:i=8,a|=7;break;case rt:i=8,a|=1;break;case at:return(t=Ic(12,n,e,8|a)).elementType=at,t.type=at,t.expirationTime=o,t;case ut:return(t=Ic(13,n,e,a)).type=ut,t.elementType=ut,t.expirationTime=o,t;case lt:return(t=Ic(19,n,e,a)).elementType=lt,t.expirationTime=o,t;default:if("object"===typeof t&&null!==t)switch(t.$$typeof){case ot:i=10;break t;case st:i=9;break t;case ct:i=11;break t;case dt:i=14;break t;case ht:i=16,r=null;break t;case pt:i=22;break t}throw Error(s(130,null==t?t:typeof t,""))}return(e=Ic(i,n,e,a)).elementType=t,e.type=r,e.expirationTime=o,e}function jc(t,e,n,r){return(t=Ic(7,t,r,e)).expirationTime=n,t}function Cc(t,e,n){return(t=Ic(6,t,null,e)).expirationTime=n,t}function Ec(t,e,n){return(e=Ic(4,null!==t.children?t.children:[],t.key,e)).expirationTime=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function Ac(t,e,n){this.tag=e,this.current=null,this.containerInfo=t,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function _c(t,e){var n=t.firstSuspendedTime;return t=t.lastSuspendedTime,0!==n&&n>=e&&t<=e}function Rc(t,e){var n=t.firstSuspendedTime,r=t.lastSuspendedTime;n<e&&(t.firstSuspendedTime=e),(r>e||0===n)&&(t.lastSuspendedTime=e),e<=t.lastPingedTime&&(t.lastPingedTime=0),e<=t.lastExpiredTime&&(t.lastExpiredTime=0)}function Dc(t,e){e>t.firstPendingTime&&(t.firstPendingTime=e);var n=t.firstSuspendedTime;0!==n&&(e>=n?t.firstSuspendedTime=t.lastSuspendedTime=t.nextKnownPendingLevel=0:e>=t.lastSuspendedTime&&(t.lastSuspendedTime=e+1),e>t.nextKnownPendingLevel&&(t.nextKnownPendingLevel=e))}function Fc(t,e){var n=t.lastExpiredTime;(0===n||n>e)&&(t.lastExpiredTime=e)}function Mc(t,e,n,r){var a=e.current,o=qi(),i=po.suspense;o=Ki(o,a,i);t:if(n){e:{if($t(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(s(170));var c=n;do{switch(c.tag){case 3:c=c.stateNode.context;break e;case 1:if(ma(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break e}}c=c.return}while(null!==c);throw Error(s(171))}if(1===n.tag){var u=n.type;if(ma(u)){n=ya(n,u,c);break t}}n=c}else n=la;return null===e.context?e.context=n:e.pendingContext=n,(e=io(o,i)).payload={element:t},null!==(r=void 0===r?null:r)&&(e.callback=r),co(a,e),Xi(a,o),o}function zc(t){if(!(t=t.current).child)return null;switch(t.child.tag){case 5:default:return t.child.stateNode}}function Lc(t,e){null!==(t=t.memoizedState)&&null!==t.dehydrated&&t.retryTime<e&&(t.retryTime=e)}function Pc(t,e){Lc(t,e),(t=t.alternate)&&Lc(t,e)}function Bc(t,e,n){var r=new Ac(t,e,n=null!=n&&!0===n.hydrate),a=Ic(3,null,null,2===e?7:1===e?3:0);r.current=a,a.stateNode=r,oo(a),t[Nn]=r.current,n&&0!==e&&function(t,e){var n=Jt(e);Ne.forEach((function(t){fe(t,e,n)})),Te.forEach((function(t){fe(t,e,n)}))}(0,9===t.nodeType?t:t.ownerDocument),this._internalRoot=r}function Wc(t){return!(!t||1!==t.nodeType&&9!==t.nodeType&&11!==t.nodeType&&(8!==t.nodeType||" react-mount-point-unstable "!==t.nodeValue))}function Vc(t,e,n,r,a){var o=n._reactRootContainer;if(o){var s=o._internalRoot;if("function"===typeof a){var i=a;a=function(){var t=zc(s);i.call(t)}}Mc(e,s,t,a)}else{if(o=n._reactRootContainer=function(t,e){if(e||(e=!(!(e=t?9===t.nodeType?t.documentElement:t.firstChild:null)||1!==e.nodeType||!e.hasAttribute("data-reactroot"))),!e)for(var n;n=t.lastChild;)t.removeChild(n);return new Bc(t,0,e?{hydrate:!0}:void 0)}(n,r),s=o._internalRoot,"function"===typeof a){var c=a;a=function(){var t=zc(s);c.call(t)}}ec((function(){Mc(e,s,t,a)}))}return zc(s)}function Uc(t,e,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:et,key:null==r?null:""+r,children:t,containerInfo:e,implementation:n}}function Gc(t,e){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Wc(e))throw Error(s(200));return Uc(t,e,null,n)}Bc.prototype.render=function(t){Mc(t,this._internalRoot,null,null)},Bc.prototype.unmount=function(){var t=this._internalRoot,e=t.containerInfo;Mc(null,t,null,(function(){e[Nn]=null}))},me=function(t){if(13===t.tag){var e=Ka(qi(),150,100);Xi(t,e),Pc(t,e)}},be=function(t){13===t.tag&&(Xi(t,3),Pc(t,3))},ge=function(t){if(13===t.tag){var e=qi();Xi(t,e=Ki(e,t,null)),Pc(t,e)}},j=function(t,e,n){switch(e){case"input":if(St(t,n),e=n.name,"radio"===n.type&&null!=e){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var a=En(r);if(!a)throw Error(s(90));wt(r),St(r,a)}}}break;case"textarea":_t(t,n);break;case"select":null!=(e=n.value)&&Ct(t,!!n.multiple,e,!1)}},D=tc,F=function(t,e,n,r,a){var o=Oi;Oi|=4;try{return Va(98,t.bind(null,e,n,r,a))}finally{0===(Oi=o)&&Ha()}},M=function(){0===(49&Oi)&&(function(){if(null!==Vi){var t=Vi;Vi=null,t.forEach((function(t,e){Fc(e,t),Zi(e)})),Ha()}}(),mc())},z=function(t,e){var n=Oi;Oi|=2;try{return t(e)}finally{0===(Oi=n)&&Ha()}};var Hc={Events:[jn,Cn,En,N,O,zn,function(t){ae(t,Mn)},_,R,Ze,ie,mc,{current:!1}]};!function(t){var e=t.findFiberByHostInstance;(function(t){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var e=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(e.isDisabled||!e.supportsFiber)return!0;try{var n=e.inject(t);wc=function(t){try{e.onCommitFiberRoot(n,t,void 0,64===(64&t.current.effectTag))}catch(r){}},kc=function(t){try{e.onCommitFiberUnmount(n,t)}catch(r){}}}catch(r){}})(a({},t,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Q.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return null===(t=ne(t))?null:t.stateNode},findFiberByHostInstance:function(t){return e?e(t):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:Tn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Hc,e.createPortal=Gc,e.findDOMNode=function(t){if(null==t)return null;if(1===t.nodeType)return t;var e=t._reactInternalFiber;if(void 0===e){if("function"===typeof t.render)throw Error(s(188));throw Error(s(268,Object.keys(t)))}return t=null===(t=ne(e))?null:t.stateNode},e.flushSync=function(t,e){if(0!==(48&Oi))throw Error(s(187));var n=Oi;Oi|=1;try{return Va(99,t.bind(null,e))}finally{Oi=n,Ha()}},e.hydrate=function(t,e,n){if(!Wc(e))throw Error(s(200));return Vc(null,t,e,!0,n)},e.render=function(t,e,n){if(!Wc(e))throw Error(s(200));return Vc(null,t,e,!1,n)},e.unmountComponentAtNode=function(t){if(!Wc(t))throw Error(s(40));return!!t._reactRootContainer&&(ec((function(){Vc(null,null,t,!1,(function(){t._reactRootContainer=null,t[Nn]=null}))})),!0)},e.unstable_batchedUpdates=tc,e.unstable_createPortal=function(t,e){return Gc(t,e,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},e.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!Wc(n))throw Error(s(200));if(null==t||void 0===t._reactInternalFiber)throw Error(s(38));return Vc(t,e,n,!1,r)},e.version="16.14.0"},function(t,e,n){"use strict";t.exports=n(237)},function(t,e,n){"use strict";var r,a,o,s,i;if("undefined"===typeof window||"function"!==typeof MessageChannel){var c=null,u=null,l=function(){if(null!==c)try{var t=e.unstable_now();c(!0,t),c=null}catch(n){throw setTimeout(l,0),n}},d=Date.now();e.unstable_now=function(){return Date.now()-d},r=function(t){null!==c?setTimeout(r,0,t):(c=t,setTimeout(l,0))},a=function(t,e){u=setTimeout(t,e)},o=function(){clearTimeout(u)},s=function(){return!1},i=e.unstable_forceFrameRate=function(){}}else{var h=window.performance,p=window.Date,f=window.setTimeout,m=window.clearTimeout;if("undefined"!==typeof console){var b=window.cancelAnimationFrame;"function"!==typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"===typeof h&&"function"===typeof h.now)e.unstable_now=function(){return h.now()};else{var g=p.now();e.unstable_now=function(){return p.now()-g}}var y=!1,v=null,x=-1,w=5,k=0;s=function(){return e.unstable_now()>=k},i=function(){},e.unstable_forceFrameRate=function(t){0>t||125<t?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<t?Math.floor(1e3/t):5};var O=new MessageChannel,I=O.port2;O.port1.onmessage=function(){if(null!==v){var t=e.unstable_now();k=t+w;try{v(!0,t)?I.postMessage(null):(y=!1,v=null)}catch(n){throw I.postMessage(null),n}}else y=!1},r=function(t){v=t,y||(y=!0,I.postMessage(null))},a=function(t,n){x=f((function(){t(e.unstable_now())}),n)},o=function(){m(x),x=-1}}function S(t,e){var n=t.length;t.push(e);t:for(;;){var r=n-1>>>1,a=t[r];if(!(void 0!==a&&0<j(a,e)))break t;t[r]=e,t[n]=a,n=r}}function N(t){return void 0===(t=t[0])?null:t}function T(t){var e=t[0];if(void 0!==e){var n=t.pop();if(n!==e){t[0]=n;t:for(var r=0,a=t.length;r<a;){var o=2*(r+1)-1,s=t[o],i=o+1,c=t[i];if(void 0!==s&&0>j(s,n))void 0!==c&&0>j(c,s)?(t[r]=c,t[i]=n,r=i):(t[r]=s,t[o]=n,r=o);else{if(!(void 0!==c&&0>j(c,n)))break t;t[r]=c,t[i]=n,r=i}}}return e}return null}function j(t,e){var n=t.sortIndex-e.sortIndex;return 0!==n?n:t.id-e.id}var C=[],E=[],A=1,_=null,R=3,D=!1,F=!1,M=!1;function z(t){for(var e=N(E);null!==e;){if(null===e.callback)T(E);else{if(!(e.startTime<=t))break;T(E),e.sortIndex=e.expirationTime,S(C,e)}e=N(E)}}function L(t){if(M=!1,z(t),!F)if(null!==N(C))F=!0,r(P);else{var e=N(E);null!==e&&a(L,e.startTime-t)}}function P(t,n){F=!1,M&&(M=!1,o()),D=!0;var r=R;try{for(z(n),_=N(C);null!==_&&(!(_.expirationTime>n)||t&&!s());){var i=_.callback;if(null!==i){_.callback=null,R=_.priorityLevel;var c=i(_.expirationTime<=n);n=e.unstable_now(),"function"===typeof c?_.callback=c:_===N(C)&&T(C),z(n)}else T(C);_=N(C)}if(null!==_)var u=!0;else{var l=N(E);null!==l&&a(L,l.startTime-n),u=!1}return u}finally{_=null,R=r,D=!1}}function B(t){switch(t){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var W=i;e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(t){t.callback=null},e.unstable_continueExecution=function(){F||D||(F=!0,r(P))},e.unstable_getCurrentPriorityLevel=function(){return R},e.unstable_getFirstCallbackNode=function(){return N(C)},e.unstable_next=function(t){switch(R){case 1:case 2:case 3:var e=3;break;default:e=R}var n=R;R=e;try{return t()}finally{R=n}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=W,e.unstable_runWithPriority=function(t,e){switch(t){case 1:case 2:case 3:case 4:case 5:break;default:t=3}var n=R;R=t;try{return e()}finally{R=n}},e.unstable_scheduleCallback=function(t,n,s){var i=e.unstable_now();if("object"===typeof s&&null!==s){var c=s.delay;c="number"===typeof c&&0<c?i+c:i,s="number"===typeof s.timeout?s.timeout:B(t)}else s=B(t),c=i;return t={id:A++,callback:n,priorityLevel:t,startTime:c,expirationTime:s=c+s,sortIndex:-1},c>i?(t.sortIndex=c,S(E,t),null===N(C)&&t===N(E)&&(M?o():M=!0,a(L,c-i))):(t.sortIndex=s,S(C,t),F||D||(F=!0,r(P))),t},e.unstable_shouldYield=function(){var t=e.unstable_now();z(t);var n=N(C);return n!==_&&null!==_&&null!==n&&null!==n.callback&&n.startTime<=t&&n.expirationTime<_.expirationTime||s()},e.unstable_wrapCallback=function(t){var e=R;return function(){var n=R;R=e;try{return t.apply(this,arguments)}finally{R=n}}}},,,function(t,e,n){"use strict";e.byteLength=function(t){var e=u(t),n=e[0],r=e[1];return 3*(n+r)/4-r},e.toByteArray=function(t){var e,n,r=u(t),s=r[0],i=r[1],c=new o(function(t,e,n){return 3*(e+n)/4-n}(0,s,i)),l=0,d=i>0?s-4:s;for(n=0;n<d;n+=4)e=a[t.charCodeAt(n)]<<18|a[t.charCodeAt(n+1)]<<12|a[t.charCodeAt(n+2)]<<6|a[t.charCodeAt(n+3)],c[l++]=e>>16&255,c[l++]=e>>8&255,c[l++]=255&e;2===i&&(e=a[t.charCodeAt(n)]<<2|a[t.charCodeAt(n+1)]>>4,c[l++]=255&e);1===i&&(e=a[t.charCodeAt(n)]<<10|a[t.charCodeAt(n+1)]<<4|a[t.charCodeAt(n+2)]>>2,c[l++]=e>>8&255,c[l++]=255&e);return c},e.fromByteArray=function(t){for(var e,n=t.length,a=n%3,o=[],s=0,i=n-a;s<i;s+=16383)o.push(l(t,s,s+16383>i?i:s+16383));1===a?(e=t[n-1],o.push(r[e>>2]+r[e<<4&63]+"==")):2===a&&(e=(t[n-2]<<8)+t[n-1],o.push(r[e>>10]+r[e>>4&63]+r[e<<2&63]+"="));return o.join("")};for(var r=[],a=[],o="undefined"!==typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,c=s.length;i<c;++i)r[i]=s[i],a[s.charCodeAt(i)]=i;function u(t){var e=t.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=t.indexOf("=");return-1===n&&(n=e),[n,n===e?0:4-n%4]}function l(t,e,n){for(var a,o,s=[],i=e;i<n;i+=3)a=(t[i]<<16&16711680)+(t[i+1]<<8&65280)+(255&t[i+2]),s.push(r[(o=a)>>18&63]+r[o>>12&63]+r[o>>6&63]+r[63&o]);return s.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,a){var o,s,i=8*a-r-1,c=(1<<i)-1,u=c>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=t[e+d];for(d+=h,o=p&(1<<-l)-1,p>>=-l,l+=i;l>0;o=256*o+t[e+d],d+=h,l-=8);for(s=o&(1<<-l)-1,o>>=-l,l+=r;l>0;s=256*s+t[e+d],d+=h,l-=8);if(0===o)o=1-u;else{if(o===c)return s?NaN:1/0*(p?-1:1);s+=Math.pow(2,r),o-=u}return(p?-1:1)*s*Math.pow(2,o-r)},e.write=function(t,e,n,r,a,o){var s,i,c,u=8*o-a-1,l=(1<<u)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:o-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(i=isNaN(e)?1:0,s=l):(s=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-s))<1&&(s--,c*=2),(e+=s+d>=1?h/c:h*Math.pow(2,1-d))*c>=2&&(s++,c/=2),s+d>=l?(i=0,s=l):s+d>=1?(i=(e*c-1)*Math.pow(2,a),s+=d):(i=e*Math.pow(2,d-1)*Math.pow(2,a),s=0));a>=8;t[n+p]=255&i,p+=f,i/=256,a-=8);for(s=s<<a|i,u+=a;u>0;t[n+p]=255&s,p+=f,s/=256,u-=8);t[n+p-f]|=128*m}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return"[object Array]"==n.call(t)}},function(t,e,n){"use strict";(function(t){var e=n(22);const r=()=>n(244);let a;class o{constructor(){this.util=n(245),this.textEncoder=new this.util.TextEncoder}fetch(t,n){return null!=Object(e.c)().global.fetch?Object(e.c)().global.fetch(t,n):(null==a&&(a=r()),a(t,n))}now(){const e=t.hrtime();return 1e3*e[0]+e[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(e));return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}}Object(e.c)().get("IS_NODE")&&Object(e.c)().setPlatform("node",new o)}).call(this,n(131))},,,function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n=function(){var t=4022871197;return function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)}}();e.next=function(){var t=2091639*e.s0+2.3283064365386963e-10*e.c;return e.s0=e.s1,e.s1=e.s2,e.s2=t-(e.c=0|t)},e.c=1,e.s0=n(" "),e.s1=n(" "),e.s2=n(" "),e.s0-=n(t),e.s0<0&&(e.s0+=1),e.s1-=n(t),e.s1<0&&(e.s1+=1),e.s2-=n(t),e.s2<0&&(e.s2+=1),n=null}function i(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function c(t,e){var n=new s(t),r=e&&e.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(55)&&n(99)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.alea=c}(0,t,n(55))}).call(this,n(98)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(55)&&n(99)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xor128=c}(0,t,n(55))}).call(this,n(98)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function i(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(55)&&n(99)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xorwow=c}(0,t,n(55))}).call(this,n(98)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.x,a=e.i;return t=r[a],n=(t^=t>>>7)^t<<24,n^=(t=r[a+1&7])^t>>>10,n^=(t=r[a+3&7])^t>>>3,n^=(t=r[a+4&7])^t<<7,t=r[a+7&7],n^=(t^=t<<13)^t<<9,r[a]=n,e.i=a+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function i(t,e){return e.x=t.x.slice(),e.i=t.i,e}function c(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(55)&&n(99)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xorshift7=c}(0,t,n(55))}).call(this,n(98)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this;e.next=function(){var t,n,r=e.w,a=e.X,o=e.i;return e.w=r=r+1640531527|0,n=a[o+34&127],t=a[o=o+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=a[o]=n^t,e.i=o,n+(r^r>>>16)|0},function(t,e){var n,r,a,o,s,i=[],c=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,c=Math.max(c,e.length)),a=0,o=-32;o<c;++o)e&&(r^=e.charCodeAt((o+32)%e.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(s=s+1640531527|0,a=0==(n=i[127&o]^=r+s)?a+1:0);for(a>=128&&(i[127&(e&&e.length||0)]=-1),a=127,o=512;o>0;--o)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;t.w=s,t.X=i,t.i=a}(e,t)}function i(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function c(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(55)&&n(99)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.xor4096=c}(0,t,n(55))}).call(this,n(98)(t))},function(t,e,n){(function(t){var r;!function(t,a,o){function s(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,a=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^a,e.a=a-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function i(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function c(t,e){var n=new s(t),r=e&&e.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=c:n(55)&&n(99)?void 0===(r=function(){return c}.call(e,n,e,a))||(a.exports=r):this.tychei=c}(0,t,n(55))}).call(this,n(98)(t))},function(t,e,n){var r;!function(a,o){var s,i=this,c=o.pow(256,6),u=o.pow(2,52),l=2*u;function d(t,e,n){var r=[],d=f(function t(e,n){var r,a=[],o=typeof e;if(n&&"object"==o)for(r in e)try{a.push(t(e[r],n-1))}catch(s){}return a.length?a:"string"==o?e:e+"\0"}((e=1==e?{entropy:!0}:e||{}).entropy?[t,m(a)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(256):(t=new Uint8Array(256),(i.crypto||i.msCrypto).getRandomValues(t)),m(t)}catch(r){var e=i.navigator,n=e&&e.plugins;return[+new Date,i,n,i.screen,m(a)]}}():t,3),r),b=new h(r),g=function(){for(var t=b.g(6),e=c,n=0;t<u;)t=256*(t+n),e*=256,n=b.g(1);for(;t>=l;)t/=2,e/=2,n>>>=1;return(t+n)/e};return g.int32=function(){return 0|b.g(4)},g.quick=function(){return b.g(4)/4294967296},g.double=g,f(m(b.S),a),(e.pass||n||function(t,e,n,r){return r&&(r.S&&p(r,b),t.state=function(){return p(b,{})}),n?(o.random=t,e):t})(g,d,"global"in e?e.global:this==o,e.state)}function h(t){var e,n=t.length,r=this,a=0,o=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);a<256;)s[a]=a++;for(a=0;a<256;a++)s[a]=s[o=255&o+t[a%n]+(e=s[a])],s[o]=e;(r.g=function(t){for(var e,n=0,a=r.i,o=r.j,s=r.S;t--;)e=s[a=255&a+1],n=256*n+s[255&(s[a]=s[o=255&o+e])+(s[o]=e)];return r.i=a,r.j=o,n})(256)}function p(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function f(t,e){for(var n,r=t+"",a=0;a<r.length;)e[255&a]=255&(n^=19*e[255&a])+r.charCodeAt(a++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(o.seedrandom=d,f(o.random(),a),t.exports){t.exports=d;try{s=n(253)}catch(b){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)},,function(t,e,n){(function(t){var r="undefined"!==typeof t&&t||"undefined"!==typeof self&&self||window,a=Function.prototype.apply;function o(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new o(a.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new o(a.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout((function(){t._onTimeout&&t._onTimeout()}),e))},n(255),e.setImmediate="undefined"!==typeof self&&self.setImmediate||"undefined"!==typeof t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!==typeof self&&self.clearImmediate||"undefined"!==typeof t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(130))},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var r,a=1,o={},s=!1,i=t.document,c=Object.getPrototypeOf&&Object.getPrototypeOf(t);c=c&&c.setTimeout?c:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick((function(){l(t)}))}:function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?function(){var e="setImmediate$"+Math.random()+"$",n=function(n){n.source===t&&"string"===typeof n.data&&0===n.data.indexOf(e)&&l(+n.data.slice(e.length))};t.addEventListener?t.addEventListener("message",n,!1):t.attachEvent("onmessage",n),r=function(n){t.postMessage(e+n,"*")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){l(t.data)},r=function(e){t.port2.postMessage(e)}}():i&&"onreadystatechange"in i.createElement("script")?function(){var t=i.documentElement;r=function(e){var n=i.createElement("script");n.onreadystatechange=function(){l(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():r=function(t){setTimeout(l,0,t)},c.setImmediate=function(t){"function"!==typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var s={callback:t,args:e};return o[a]=s,r(a),a++},c.clearImmediate=u}function u(t){delete o[t]}function l(t){if(s)setTimeout(l,0,t);else{var e=o[t];if(e){s=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(void 0,n)}}(e)}finally{u(t),s=!1}}}}}("undefined"===typeof self?"undefined"===typeof t?this:t:self)}).call(this,n(130),n(131))}]]);
//# sourceMappingURL=2.1ffeb580.chunk.js.map